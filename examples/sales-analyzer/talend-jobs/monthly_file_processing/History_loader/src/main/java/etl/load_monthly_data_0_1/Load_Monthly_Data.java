// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package etl.load_monthly_data_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJavaFlex_1
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: Load_Monthly_Data Purpose: <br>
 * Description:  <br>
 * @author user@talend.com
 * @version 7.3.1.20200117_1600-M6
 * @status 
 */
public class Load_Monthly_Data implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(date != null){
				
					String pattern_date = "yyyy-MM-dd HH:mm:ss";
					String value_date = "2017-11-01 20:30:31";
					String[] parts_date = value_date.split(";");
					if(parts_date.length > 1){
						pattern_date = parts_date[0];
						this.setProperty("date", pattern_date + ";" + FormatterUtils.format_Date(date, pattern_date));
					}else{
						this.setProperty("date", FormatterUtils.format_Date(date, pattern_date));
					}
				
			}
			
			if(inputDirectory != null){
				
					this.setProperty("inputDirectory", inputDirectory.toString());
				
			}
			
			if(outputDirectory != null){
				
					this.setProperty("outputDirectory", outputDirectory.toString());
				
			}
			
			if(session != null){
				
					this.setProperty("session", session.toString());
				
			}
			
		}

public java.util.Date date;
public java.util.Date getDate(){
	return this.date;
}
public String inputDirectory;
public String getInputDirectory(){
	return this.inputDirectory;
}
public String outputDirectory;
public String getOutputDirectory(){
	return this.outputDirectory;
}
public String session;
public String getSession(){
	return this.session;
}
	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "Load_Monthly_Data";
	private final String projectName = "ETL";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				Load_Monthly_Data.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(Load_Monthly_Data.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tJDBCConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJDBCConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tReplicate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaFlex_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJDBCInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJDBCInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJDBCInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_1_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_1_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_1_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJDBCConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJDBCInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	





public void tJDBCConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJDBCConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCConnection_1", false);
		start_Hash.put("tJDBCConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCConnection_1";

	
		int tos_count_tJDBCConnection_1 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tJDBCConnection_1 =
        new org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionDefinition();

org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties props_tJDBCConnection_1 =
        (org.talend.components.jdbc.tjdbcconnection.TJDBCConnectionProperties) def_tJDBCConnection_1.createRuntimeProperties();
 		                    props_tJDBCConnection_1.setValue("shareConnection",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.setValue("useDataSource",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.setValue("useAutoCommit",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.setValue("autocommit",
 		                    true);
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("jdbcUrl",
 		                    "jdbc:postgresql://db:5432/postgres");
 		                    
 		                    props_tJDBCConnection_1.connection.setValue("driverClass",
 		                    "org.postgresql.Driver");
 		                    
 		                    java.util.List<Object> tJDBCConnection_1_connection_driverTable_drivers = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCConnection_1_connection_driverTable_drivers.add("mvn:org.talend.libraries/postgresql-9.4-1201.jdbc41/6.0.0/jar");
 		                                
 		                            tJDBCConnection_1_connection_driverTable_drivers.add("");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCConnection_1.connection.driverTable).setValue("drivers",tJDBCConnection_1_connection_driverTable_drivers);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCConnection_1.connection.userPassword.setValue("userId",
 		                    "postgres");
 		                    
 		                        props_tJDBCConnection_1.connection.userPassword.setValue("password",
 		                        routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:AEQbKnjGmP6vM42CF5l9w0AhusYySQmIz3NQFduMkRpmz2iI"));
 		                        
globalMap.put("tJDBCConnection_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCConnection_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tJDBCConnection_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCConnection_1_MAPPINGS_URL", mappings_url_tJDBCConnection_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCConnection_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCConnection_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCConnection_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCConnection_1 = null;
topology_tJDBCConnection_1 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCConnection_1 = def_tJDBCConnection_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCConnection_1, topology_tJDBCConnection_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCConnection_1 = def_tJDBCConnection_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCConnection_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCConnection_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCConnection_1 = componentRuntime_tJDBCConnection_1.initialize(container_tJDBCConnection_1, props_tJDBCConnection_1);

if (initVr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCConnection_1.getMessage());
}

if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCConnection_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCConnection_1;
	compDriverInitialization_tJDBCConnection_1.runAtDriver(container_tJDBCConnection_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCConnection_1 = null;
if(componentRuntime_tJDBCConnection_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCConnection_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCConnection_1;
	org.talend.daikon.properties.ValidationResult vr_tJDBCConnection_1 = sourceOrSink_tJDBCConnection_1.validate(container_tJDBCConnection_1);
	if (vr_tJDBCConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tJDBCConnection_1.getMessage());
	}
}

 



/**
 * [tJDBCConnection_1 begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 


	tos_count_tJDBCConnection_1++;

/**
 * [tJDBCConnection_1 main ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	


 



/**
 * [tJDBCConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tJDBCConnection_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// end of generic

 

ok_Hash.put("tJDBCConnection_1", true);
end_Hash.put("tJDBCConnection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tFileInputDelimited_1Process(globalMap);



/**
 * [tJDBCConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCConnection_1";

	
// finally of generic

 



/**
 * [tJDBCConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class out4Struct implements routines.system.IPersistableRow<out4Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object obj_id;

				public Object getObj_id () {
					return this.obj_id;
				}
				
			    public java.util.Date active_date;

				public java.util.Date getActive_date () {
					return this.active_date;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date exp_date;

				public java.util.Date getExp_date () {
					return this.exp_date;
				}
				
			    public String obj_status;

				public String getObj_status () {
					return this.obj_status;
				}
				
			    public String obj_type;

				public String getObj_type () {
					return this.obj_type;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public Integer optlock;

				public Integer getOptlock () {
					return this.optlock;
				}
				
			    public long country_id;

				public long getCountry_id () {
					return this.country_id;
				}
				
			    public String country_name;

				public String getCountry_name () {
					return this.country_name;
				}
				
			    public long state_id;

				public long getState_id () {
					return this.state_id;
				}
				
			    public String state_name;

				public String getState_name () {
					return this.state_name;
				}
				
			    public long city_id;

				public long getCity_id () {
					return this.city_id;
				}
				
			    public String city_name;

				public String getCity_name () {
					return this.city_name;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public BigDecimal amount;

				public BigDecimal getAmount () {
					return this.amount;
				}
				
			    public java.util.Date history_date;

				public java.util.Date getHistory_date () {
					return this.history_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.obj_id == null) ? 0 : this.obj_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out4Struct other = (out4Struct) obj;
		
						if (this.obj_id == null) {
							if (other.obj_id != null)
								return false;
						
						} else if (!this.obj_id.equals(other.obj_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(out4Struct other) {

		other.obj_id = this.obj_id;
	            other.active_date = this.active_date;
	            other.create_date = this.create_date;
	            other.exp_date = this.exp_date;
	            other.obj_status = this.obj_status;
	            other.obj_type = this.obj_type;
	            other.update_date = this.update_date;
	            other.optlock = this.optlock;
	            other.country_id = this.country_id;
	            other.country_name = this.country_name;
	            other.state_id = this.state_id;
	            other.state_name = this.state_name;
	            other.city_id = this.city_id;
	            other.city_name = this.city_name;
	            other.product = this.product;
	            other.amount = this.amount;
	            other.history_date = this.history_date;
	            
	}

	public void copyKeysDataTo(out4Struct other) {

		other.obj_id = this.obj_id;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.obj_id = (Object) dis.readObject();
					
					this.active_date = readDate(dis);
					
					this.create_date = readDate(dis);
					
					this.exp_date = readDate(dis);
					
					this.obj_status = readString(dis);
					
					this.obj_type = readString(dis);
					
					this.update_date = readDate(dis);
					
						this.optlock = readInteger(dis);
					
			        this.country_id = dis.readLong();
					
					this.country_name = readString(dis);
					
			        this.state_id = dis.readLong();
					
					this.state_name = readString(dis);
					
			        this.city_id = dis.readLong();
					
					this.city_name = readString(dis);
					
					this.product = readString(dis);
					
						this.amount = (BigDecimal) dis.readObject();
					
					this.history_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.obj_id);
					
					// java.util.Date
				
						writeDate(this.active_date,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.exp_date,dos);
					
					// String
				
						writeString(this.obj_status,dos);
					
					// String
				
						writeString(this.obj_type,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// Integer
				
						writeInteger(this.optlock,dos);
					
					// long
				
		            	dos.writeLong(this.country_id);
					
					// String
				
						writeString(this.country_name,dos);
					
					// long
				
		            	dos.writeLong(this.state_id);
					
					// String
				
						writeString(this.state_name,dos);
					
					// long
				
		            	dos.writeLong(this.city_id);
					
					// String
				
						writeString(this.city_name,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.amount);
					
					// java.util.Date
				
						writeDate(this.history_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("obj_id="+String.valueOf(obj_id));
		sb.append(",active_date="+String.valueOf(active_date));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",exp_date="+String.valueOf(exp_date));
		sb.append(",obj_status="+obj_status);
		sb.append(",obj_type="+obj_type);
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",optlock="+String.valueOf(optlock));
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",country_name="+country_name);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",state_name="+state_name);
		sb.append(",city_id="+String.valueOf(city_id));
		sb.append(",city_name="+city_name);
		sb.append(",product="+product);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",history_date="+String.valueOf(history_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out4Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.obj_id, other.obj_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.country_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
						this.id_city = readInteger(dis);
					
					this.product = readString(dis);
					
					this.name_country = readString(dis);
					
					this.name_state = readString(dis);
					
					this.name_city = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("country_id="+String.valueOf(country_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",id_city="+String.valueOf(id_city));
		sb.append(",product="+product);
		sb.append(",name_country="+name_country);
		sb.append(",name_state="+name_state);
		sb.append(",name_city="+name_city);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_1> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.country_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
						this.id_city = readInteger(dis);
					
					this.product = readString(dis);
					
					this.name_country = readString(dis);
					
					this.name_state = readString(dis);
					
					this.name_city = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("country_id="+String.valueOf(country_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",id_city="+String.valueOf(id_city));
		sb.append(",product="+product);
		sb.append(",name_country="+name_country);
		sb.append(",name_state="+name_state);
		sb.append(",name_city="+name_city);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out5Struct implements routines.system.IPersistableRow<out5Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object obj_id;

				public Object getObj_id () {
					return this.obj_id;
				}
				
			    public java.util.Date active_date;

				public java.util.Date getActive_date () {
					return this.active_date;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date exp_date;

				public java.util.Date getExp_date () {
					return this.exp_date;
				}
				
			    public String obj_status;

				public String getObj_status () {
					return this.obj_status;
				}
				
			    public String obj_type;

				public String getObj_type () {
					return this.obj_type;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public Integer optlock;

				public Integer getOptlock () {
					return this.optlock;
				}
				
			    public long country_id;

				public long getCountry_id () {
					return this.country_id;
				}
				
			    public String country_name;

				public String getCountry_name () {
					return this.country_name;
				}
				
			    public long state_id;

				public long getState_id () {
					return this.state_id;
				}
				
			    public String state_name;

				public String getState_name () {
					return this.state_name;
				}
				
			    public long city_id;

				public long getCity_id () {
					return this.city_id;
				}
				
			    public String city_name;

				public String getCity_name () {
					return this.city_name;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public BigDecimal amount;

				public BigDecimal getAmount () {
					return this.amount;
				}
				
			    public java.util.Date history_date;

				public java.util.Date getHistory_date () {
					return this.history_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.obj_id == null) ? 0 : this.obj_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out5Struct other = (out5Struct) obj;
		
						if (this.obj_id == null) {
							if (other.obj_id != null)
								return false;
						
						} else if (!this.obj_id.equals(other.obj_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(out5Struct other) {

		other.obj_id = this.obj_id;
	            other.active_date = this.active_date;
	            other.create_date = this.create_date;
	            other.exp_date = this.exp_date;
	            other.obj_status = this.obj_status;
	            other.obj_type = this.obj_type;
	            other.update_date = this.update_date;
	            other.optlock = this.optlock;
	            other.country_id = this.country_id;
	            other.country_name = this.country_name;
	            other.state_id = this.state_id;
	            other.state_name = this.state_name;
	            other.city_id = this.city_id;
	            other.city_name = this.city_name;
	            other.product = this.product;
	            other.amount = this.amount;
	            other.history_date = this.history_date;
	            
	}

	public void copyKeysDataTo(out5Struct other) {

		other.obj_id = this.obj_id;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.obj_id = (Object) dis.readObject();
					
					this.active_date = readDate(dis);
					
					this.create_date = readDate(dis);
					
					this.exp_date = readDate(dis);
					
					this.obj_status = readString(dis);
					
					this.obj_type = readString(dis);
					
					this.update_date = readDate(dis);
					
						this.optlock = readInteger(dis);
					
			        this.country_id = dis.readLong();
					
					this.country_name = readString(dis);
					
			        this.state_id = dis.readLong();
					
					this.state_name = readString(dis);
					
			        this.city_id = dis.readLong();
					
					this.city_name = readString(dis);
					
					this.product = readString(dis);
					
						this.amount = (BigDecimal) dis.readObject();
					
					this.history_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.obj_id);
					
					// java.util.Date
				
						writeDate(this.active_date,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.exp_date,dos);
					
					// String
				
						writeString(this.obj_status,dos);
					
					// String
				
						writeString(this.obj_type,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// Integer
				
						writeInteger(this.optlock,dos);
					
					// long
				
		            	dos.writeLong(this.country_id);
					
					// String
				
						writeString(this.country_name,dos);
					
					// long
				
		            	dos.writeLong(this.state_id);
					
					// String
				
						writeString(this.state_name,dos);
					
					// long
				
		            	dos.writeLong(this.city_id);
					
					// String
				
						writeString(this.city_name,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.amount);
					
					// java.util.Date
				
						writeDate(this.history_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("obj_id="+String.valueOf(obj_id));
		sb.append(",active_date="+String.valueOf(active_date));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",exp_date="+String.valueOf(exp_date));
		sb.append(",obj_status="+obj_status);
		sb.append(",obj_type="+obj_type);
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",optlock="+String.valueOf(optlock));
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",country_name="+country_name);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",state_name="+state_name);
		sb.append(",city_id="+String.valueOf(city_id));
		sb.append(",city_name="+city_name);
		sb.append(",product="+product);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",history_date="+String.valueOf(history_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out5Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.obj_id, other.obj_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out3Struct implements routines.system.IPersistableRow<out3Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long obj_id;

				public long getObj_id () {
					return this.obj_id;
				}
				
			    public java.util.Date active_date;

				public java.util.Date getActive_date () {
					return this.active_date;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date exp_date;

				public java.util.Date getExp_date () {
					return this.exp_date;
				}
				
			    public String obj_status;

				public String getObj_status () {
					return this.obj_status;
				}
				
			    public String obj_type;

				public String getObj_type () {
					return this.obj_type;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public Integer optlock;

				public Integer getOptlock () {
					return this.optlock;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public Long parent_id;

				public Long getParent_id () {
					return this.parent_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.obj_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out3Struct other = (out3Struct) obj;
		
						if (this.obj_id != other.obj_id)
							return false;
					

		return true;
    }

	public void copyDataTo(out3Struct other) {

		other.obj_id = this.obj_id;
	            other.active_date = this.active_date;
	            other.create_date = this.create_date;
	            other.exp_date = this.exp_date;
	            other.obj_status = this.obj_status;
	            other.obj_type = this.obj_type;
	            other.update_date = this.update_date;
	            other.optlock = this.optlock;
	            other.name = this.name;
	            other.parent_id = this.parent_id;
	            
	}

	public void copyKeysDataTo(out3Struct other) {

		other.obj_id = this.obj_id;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
			        this.obj_id = dis.readLong();
					
					this.active_date = readDate(dis);
					
					this.create_date = readDate(dis);
					
					this.exp_date = readDate(dis);
					
					this.obj_status = readString(dis);
					
					this.obj_type = readString(dis);
					
					this.update_date = readDate(dis);
					
						this.optlock = readInteger(dis);
					
					this.name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.parent_id = null;
           				} else {
           			    	this.parent_id = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.obj_id);
					
					// java.util.Date
				
						writeDate(this.active_date,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.exp_date,dos);
					
					// String
				
						writeString(this.obj_status,dos);
					
					// String
				
						writeString(this.obj_type,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// Integer
				
						writeInteger(this.optlock,dos);
					
					// String
				
						writeString(this.name,dos);
					
					// Long
				
						if(this.parent_id == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.parent_id);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("obj_id="+String.valueOf(obj_id));
		sb.append(",active_date="+String.valueOf(active_date));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",exp_date="+String.valueOf(exp_date));
		sb.append(",obj_status="+obj_status);
		sb.append(",obj_type="+obj_type);
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",optlock="+String.valueOf(optlock));
		sb.append(",name="+name);
		sb.append(",parent_id="+String.valueOf(parent_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.obj_id, other.obj_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Integer state_id;

				public Integer getState_id () {
					return this.state_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public String sortname_country;

				public String getSortname_country () {
					return this.sortname_country;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String customer;

				public String getCustomer () {
					return this.customer;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.id_city = readInteger(dis);
					
					this.name_city = readString(dis);
					
						this.state_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
					this.name_state = readString(dis);
					
						this.country_id = readInteger(dis);
					
					this.sortname_country = readString(dis);
					
					this.name_country = readString(dis);
					
					this.product = readString(dis);
					
					this.customer = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Integer
				
						writeInteger(this.state_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// String
				
						writeString(this.sortname_country,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.customer,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id_city="+String.valueOf(id_city));
		sb.append(",name_city="+name_city);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",name_state="+name_state);
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",sortname_country="+sortname_country);
		sb.append(",name_country="+name_country);
		sb.append(",product="+product);
		sb.append(",customer="+customer);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out2Struct implements routines.system.IPersistableRow<out2Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long obj_id;

				public long getObj_id () {
					return this.obj_id;
				}
				
			    public java.util.Date active_date;

				public java.util.Date getActive_date () {
					return this.active_date;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date exp_date;

				public java.util.Date getExp_date () {
					return this.exp_date;
				}
				
			    public String obj_status;

				public String getObj_status () {
					return this.obj_status;
				}
				
			    public String obj_type;

				public String getObj_type () {
					return this.obj_type;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public Integer optlock;

				public Integer getOptlock () {
					return this.optlock;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public Long parent_id;

				public Long getParent_id () {
					return this.parent_id;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.obj_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out2Struct other = (out2Struct) obj;
		
						if (this.obj_id != other.obj_id)
							return false;
					

		return true;
    }

	public void copyDataTo(out2Struct other) {

		other.obj_id = this.obj_id;
	            other.active_date = this.active_date;
	            other.create_date = this.create_date;
	            other.exp_date = this.exp_date;
	            other.obj_status = this.obj_status;
	            other.obj_type = this.obj_type;
	            other.update_date = this.update_date;
	            other.optlock = this.optlock;
	            other.name = this.name;
	            other.parent_id = this.parent_id;
	            
	}

	public void copyKeysDataTo(out2Struct other) {

		other.obj_id = this.obj_id;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
			        this.obj_id = dis.readLong();
					
					this.active_date = readDate(dis);
					
					this.create_date = readDate(dis);
					
					this.exp_date = readDate(dis);
					
					this.obj_status = readString(dis);
					
					this.obj_type = readString(dis);
					
					this.update_date = readDate(dis);
					
						this.optlock = readInteger(dis);
					
					this.name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.parent_id = null;
           				} else {
           			    	this.parent_id = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.obj_id);
					
					// java.util.Date
				
						writeDate(this.active_date,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.exp_date,dos);
					
					// String
				
						writeString(this.obj_status,dos);
					
					// String
				
						writeString(this.obj_type,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// Integer
				
						writeInteger(this.optlock,dos);
					
					// String
				
						writeString(this.name,dos);
					
					// Long
				
						if(this.parent_id == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.parent_id);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("obj_id="+String.valueOf(obj_id));
		sb.append(",active_date="+String.valueOf(active_date));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",exp_date="+String.valueOf(exp_date));
		sb.append(",obj_status="+obj_status);
		sb.append(",obj_type="+obj_type);
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",optlock="+String.valueOf(optlock));
		sb.append(",name="+name);
		sb.append(",parent_id="+String.valueOf(parent_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.obj_id, other.obj_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Integer state_id;

				public Integer getState_id () {
					return this.state_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public String sortname_country;

				public String getSortname_country () {
					return this.sortname_country;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String customer;

				public String getCustomer () {
					return this.customer;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.id_city = readInteger(dis);
					
					this.name_city = readString(dis);
					
						this.state_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
					this.name_state = readString(dis);
					
						this.country_id = readInteger(dis);
					
					this.sortname_country = readString(dis);
					
					this.name_country = readString(dis);
					
					this.product = readString(dis);
					
					this.customer = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Integer
				
						writeInteger(this.state_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// String
				
						writeString(this.sortname_country,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.customer,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id_city="+String.valueOf(id_city));
		sb.append(",name_city="+name_city);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",name_state="+name_state);
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",sortname_country="+sortname_country);
		sb.append(",name_country="+name_country);
		sb.append(",product="+product);
		sb.append(",customer="+customer);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public long obj_id;

				public long getObj_id () {
					return this.obj_id;
				}
				
			    public java.util.Date active_date;

				public java.util.Date getActive_date () {
					return this.active_date;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date exp_date;

				public java.util.Date getExp_date () {
					return this.exp_date;
				}
				
			    public String obj_status;

				public String getObj_status () {
					return this.obj_status;
				}
				
			    public String obj_type;

				public String getObj_type () {
					return this.obj_type;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public Integer optlock;

				public Integer getOptlock () {
					return this.optlock;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.obj_id;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out1Struct other = (out1Struct) obj;
		
						if (this.obj_id != other.obj_id)
							return false;
					

		return true;
    }

	public void copyDataTo(out1Struct other) {

		other.obj_id = this.obj_id;
	            other.active_date = this.active_date;
	            other.create_date = this.create_date;
	            other.exp_date = this.exp_date;
	            other.obj_status = this.obj_status;
	            other.obj_type = this.obj_type;
	            other.update_date = this.update_date;
	            other.optlock = this.optlock;
	            other.name = this.name;
	            
	}

	public void copyKeysDataTo(out1Struct other) {

		other.obj_id = this.obj_id;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
			        this.obj_id = dis.readLong();
					
					this.active_date = readDate(dis);
					
					this.create_date = readDate(dis);
					
					this.exp_date = readDate(dis);
					
					this.obj_status = readString(dis);
					
					this.obj_type = readString(dis);
					
					this.update_date = readDate(dis);
					
						this.optlock = readInteger(dis);
					
					this.name = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// long
				
		            	dos.writeLong(this.obj_id);
					
					// java.util.Date
				
						writeDate(this.active_date,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.exp_date,dos);
					
					// String
				
						writeString(this.obj_status,dos);
					
					// String
				
						writeString(this.obj_type,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// Integer
				
						writeInteger(this.optlock,dos);
					
					// String
				
						writeString(this.name,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("obj_id="+String.valueOf(obj_id));
		sb.append(",active_date="+String.valueOf(active_date));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",exp_date="+String.valueOf(exp_date));
		sb.append(",obj_status="+obj_status);
		sb.append(",obj_type="+obj_type);
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",optlock="+String.valueOf(optlock));
		sb.append(",name="+name);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.obj_id, other.obj_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		

		

        }

		
			finally {}
		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
        }

			finally {}
		

    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Integer state_id;

				public Integer getState_id () {
					return this.state_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public String sortname_country;

				public String getSortname_country () {
					return this.sortname_country;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String customer;

				public String getCustomer () {
					return this.customer;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.id_city = readInteger(dis);
					
					this.name_city = readString(dis);
					
						this.state_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
					this.name_state = readString(dis);
					
						this.country_id = readInteger(dis);
					
					this.sortname_country = readString(dis);
					
					this.name_country = readString(dis);
					
					this.product = readString(dis);
					
					this.customer = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Integer
				
						writeInteger(this.state_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// String
				
						writeString(this.sortname_country,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.customer,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id_city="+String.valueOf(id_city));
		sb.append(",name_city="+name_city);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",name_state="+name_state);
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",sortname_country="+sortname_country);
		sb.append(",name_country="+name_country);
		sb.append(",product="+product);
		sb.append(",customer="+customer);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Integer state_id;

				public Integer getState_id () {
					return this.state_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public String sortname_country;

				public String getSortname_country () {
					return this.sortname_country;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String customer;

				public String getCustomer () {
					return this.customer;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.id_city = readInteger(dis);
					
					this.name_city = readString(dis);
					
						this.state_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
					this.name_state = readString(dis);
					
						this.country_id = readInteger(dis);
					
					this.sortname_country = readString(dis);
					
					this.name_country = readString(dis);
					
					this.product = readString(dis);
					
					this.customer = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Integer
				
						writeInteger(this.state_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// String
				
						writeString(this.sortname_country,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.customer,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id_city="+String.valueOf(id_city));
		sb.append(",name_city="+name_city);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",name_state="+name_state);
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",sortname_country="+sortname_country);
		sb.append(",name_country="+name_country);
		sb.append(",product="+product);
		sb.append(",customer="+customer);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Integer state_id;

				public Integer getState_id () {
					return this.state_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public String sortname_country;

				public String getSortname_country () {
					return this.sortname_country;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String customer;

				public String getCustomer () {
					return this.customer;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.id_city = readInteger(dis);
					
					this.name_city = readString(dis);
					
						this.state_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
					this.name_state = readString(dis);
					
						this.country_id = readInteger(dis);
					
					this.sortname_country = readString(dis);
					
					this.name_country = readString(dis);
					
					this.product = readString(dis);
					
					this.customer = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Integer
				
						writeInteger(this.state_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// String
				
						writeString(this.sortname_country,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.customer,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id_city="+String.valueOf(id_city));
		sb.append(",name_city="+name_city);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",name_state="+name_state);
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",sortname_country="+sortname_country);
		sb.append(",name_country="+name_country);
		sb.append(",product="+product);
		sb.append(",customer="+customer);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Integer state_id;

				public Integer getState_id () {
					return this.state_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public String sortname_country;

				public String getSortname_country () {
					return this.sortname_country;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String customer;

				public String getCustomer () {
					return this.customer;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.id_city = readInteger(dis);
					
					this.name_city = readString(dis);
					
						this.state_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
					this.name_state = readString(dis);
					
						this.country_id = readInteger(dis);
					
					this.sortname_country = readString(dis);
					
					this.name_country = readString(dis);
					
					this.product = readString(dis);
					
					this.customer = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Integer
				
						writeInteger(this.state_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// String
				
						writeString(this.sortname_country,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.customer,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id_city="+String.valueOf(id_city));
		sb.append(",name_city="+name_city);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",name_state="+name_state);
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",sortname_country="+sortname_country);
		sb.append(",name_country="+name_country);
		sb.append(",product="+product);
		sb.append(",customer="+customer);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Integer state_id;

				public Integer getState_id () {
					return this.state_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public String sortname_country;

				public String getSortname_country () {
					return this.sortname_country;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String customer;

				public String getCustomer () {
					return this.customer;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.id_city = readInteger(dis);
					
					this.name_city = readString(dis);
					
						this.state_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
					this.name_state = readString(dis);
					
						this.country_id = readInteger(dis);
					
					this.sortname_country = readString(dis);
					
					this.name_country = readString(dis);
					
					this.product = readString(dis);
					
					this.customer = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Integer
				
						writeInteger(this.state_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// String
				
						writeString(this.sortname_country,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.customer,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id_city="+String.valueOf(id_city));
		sb.append(",name_city="+name_city);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",name_state="+name_state);
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",sortname_country="+sortname_country);
		sb.append(",name_country="+name_country);
		sb.append(",product="+product);
		sb.append(",customer="+customer);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Integer state_id;

				public Integer getState_id () {
					return this.state_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public String sortname_country;

				public String getSortname_country () {
					return this.sortname_country;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String customer;

				public String getCustomer () {
					return this.customer;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.id_city = readInteger(dis);
					
					this.name_city = readString(dis);
					
						this.state_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
					this.name_state = readString(dis);
					
						this.country_id = readInteger(dis);
					
					this.sortname_country = readString(dis);
					
					this.name_country = readString(dis);
					
					this.product = readString(dis);
					
					this.customer = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Integer
				
						writeInteger(this.state_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// String
				
						writeString(this.sortname_country,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.customer,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id_city="+String.valueOf(id_city));
		sb.append(",name_city="+name_city);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",name_state="+name_state);
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",sortname_country="+sortname_country);
		sb.append(",name_country="+name_country);
		sb.append(",product="+product);
		sb.append(",customer="+customer);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Integer id_city;

				public Integer getId_city () {
					return this.id_city;
				}
				
			    public String name_city;

				public String getName_city () {
					return this.name_city;
				}
				
			    public Integer state_id;

				public Integer getState_id () {
					return this.state_id;
				}
				
			    public Integer id_state;

				public Integer getId_state () {
					return this.id_state;
				}
				
			    public String name_state;

				public String getName_state () {
					return this.name_state;
				}
				
			    public Integer country_id;

				public Integer getCountry_id () {
					return this.country_id;
				}
				
			    public String sortname_country;

				public String getSortname_country () {
					return this.sortname_country;
				}
				
			    public String name_country;

				public String getName_country () {
					return this.name_country;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public String customer;

				public String getCustomer () {
					return this.customer;
				}
				
			    public Float amount;

				public Float getAmount () {
					return this.amount;
				}
				
			    public java.util.Date date;

				public java.util.Date getDate () {
					return this.date;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.id_city = readInteger(dis);
					
					this.name_city = readString(dis);
					
						this.state_id = readInteger(dis);
					
						this.id_state = readInteger(dis);
					
					this.name_state = readString(dis);
					
						this.country_id = readInteger(dis);
					
					this.sortname_country = readString(dis);
					
					this.name_country = readString(dis);
					
					this.product = readString(dis);
					
					this.customer = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.amount = null;
           				} else {
           			    	this.amount = dis.readFloat();
           				}
					
					this.date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id_city,dos);
					
					// String
				
						writeString(this.name_city,dos);
					
					// Integer
				
						writeInteger(this.state_id,dos);
					
					// Integer
				
						writeInteger(this.id_state,dos);
					
					// String
				
						writeString(this.name_state,dos);
					
					// Integer
				
						writeInteger(this.country_id,dos);
					
					// String
				
						writeString(this.sortname_country,dos);
					
					// String
				
						writeString(this.name_country,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// String
				
						writeString(this.customer,dos);
					
					// Float
				
						if(this.amount == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.amount);
		            	}
					
					// java.util.Date
				
						writeDate(this.date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id_city="+String.valueOf(id_city));
		sb.append(",name_city="+name_city);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",id_state="+String.valueOf(id_state));
		sb.append(",name_state="+name_state);
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",sortname_country="+sortname_country);
		sb.append(",name_country="+name_country);
		sb.append(",product="+product);
		sb.append(",customer="+customer);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",date="+String.valueOf(date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tFileInputDelimited_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
row3Struct row3 = new row3Struct();
row2Struct row2 = new row2Struct();
row13Struct row13 = new row13Struct();
out1Struct out1 = new out1Struct();
row4Struct row4 = new row4Struct();
row5Struct row5 = new row5Struct();
out2Struct out2 = new out2Struct();
row6Struct row6 = new row6Struct();
row7Struct row7 = new row7Struct();
out3Struct out3 = new out3Struct();
row10Struct row10 = new row10Struct();
out5Struct out5 = new out5Struct();
row8Struct row8 = new row8Struct();
row9Struct row9 = new row9Struct();
out4Struct out4 = new out4Struct();








	
	/**
	 * [tJDBCOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_5", false);
		start_Hash.put("tJDBCOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out1");
					}
				
		int tos_count_tJDBCOutput_5 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_5 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_5 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_5.createRuntimeProperties();
 		                    props_tJDBCOutput_5.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.UPDATE_OR_INSERT);
 		                    
 		                    props_tJDBCOutput_5.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_5.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_5.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_5.tableSelection.setValue("tablename",
 		                    "sales_analyzer.country");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_5\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"tJDBCOutput_5\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_1_fisrt sst_tJDBCOutput_5_1_fisrt = new SchemaSettingTool_tJDBCOutput_5_1_fisrt();
 		                    
 		                    props_tJDBCOutput_5.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_5\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"tJDBCOutput_5\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_2_fisrt sst_tJDBCOutput_5_2_fisrt = new SchemaSettingTool_tJDBCOutput_5_2_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_5_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_5\",\"di.table.label\":\"tJDBCOutput_5\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_5_3_fisrt sst_tJDBCOutput_5_3_fisrt = new SchemaSettingTool_tJDBCOutput_5_3_fisrt();
 		                    
 		                    props_tJDBCOutput_5.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_5_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_5.additionalColumns.setValue("referenceColumns",
 		                    "obj_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_5.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_5 = props_tJDBCOutput_5.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_5.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_5);
        }
    }
globalMap.put("tJDBCOutput_5_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tJDBCOutput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_5_MAPPINGS_URL", mappings_url_tJDBCOutput_5);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_5 = null;
topology_tJDBCOutput_5 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_5 = def_tJDBCOutput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_5, topology_tJDBCOutput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_5 = def_tJDBCOutput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_5 = componentRuntime_tJDBCOutput_5.initialize(container_tJDBCOutput_5, props_tJDBCOutput_5);

if (initVr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_5.getMessage());
}

if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_5;
	compDriverInitialization_tJDBCOutput_5.runAtDriver(container_tJDBCOutput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_5 = null;
if(componentRuntime_tJDBCOutput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_5;
	org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_5 = sourceOrSink_tJDBCOutput_5.validate(container_tJDBCOutput_5);
	if (vr_tJDBCOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tJDBCOutput_5.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_5 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_5;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_5 = sink_tJDBCOutput_5.createWriteOperation();
    writeOperation_tJDBCOutput_5.initialize(container_tJDBCOutput_5);
    org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_5 = writeOperation_tJDBCOutput_5.createWriter(container_tJDBCOutput_5);
    writer_tJDBCOutput_5.open("tJDBCOutput_5");

    resourceMap.put("writer_tJDBCOutput_5", writer_tJDBCOutput_5);

    org.talend.components.api.component.Connector c_tJDBCOutput_5 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_5.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_5 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_5 = props_tJDBCOutput_5.getSchema(c_tJDBCOutput_5, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_5
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_5);
                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_5 = null;


 



/**
 * [tJDBCOutput_5 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
out1Struct out1_tmp = new out1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tJavaFlex_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaFlex_1", false);
		start_Hash.put("tJavaFlex_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaFlex_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tJavaFlex_1 = 0;
		


// start part of your Java code
      


 



/**
 * [tJavaFlex_1 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					Integer country_id;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.country_id == null) ? 0 : this.country_id.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.country_id == null) {
										if (other.country_id != null) 
											return false;
								
									} else if (!this.country_id.equals(other.country_id))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */






	
	/**
	 * [tJDBCOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_1", false);
		start_Hash.put("tJDBCOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out2");
					}
				
		int tos_count_tJDBCOutput_1 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_1 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_1 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_1.createRuntimeProperties();
 		                    props_tJDBCOutput_1.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.UPDATE_OR_INSERT);
 		                    
 		                    props_tJDBCOutput_1.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_1.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_1.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_1.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_1.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_1.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_1.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_1.tableSelection.setValue("tablename",
 		                    "sales_analyzer.state");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_1_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_1\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_1\",\"di.table.label\":\"tJDBCOutput_1\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_1_1_fisrt sst_tJDBCOutput_1_1_fisrt = new SchemaSettingTool_tJDBCOutput_1_1_fisrt();
 		                    
 		                    props_tJDBCOutput_1.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_1_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_1_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_1\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_1\",\"di.table.label\":\"tJDBCOutput_1\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_1_2_fisrt sst_tJDBCOutput_1_2_fisrt = new SchemaSettingTool_tJDBCOutput_1_2_fisrt();
 		                    
 		                    props_tJDBCOutput_1.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_1_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_1_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_1\",\"di.table.label\":\"tJDBCOutput_1\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_1_3_fisrt sst_tJDBCOutput_1_3_fisrt = new SchemaSettingTool_tJDBCOutput_1_3_fisrt();
 		                    
 		                    props_tJDBCOutput_1.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_1_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_1.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_1.additionalColumns.setValue("referenceColumns",
 		                    "obj_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_1.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_1 = props_tJDBCOutput_1.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_1.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_1);
        }
    }
globalMap.put("tJDBCOutput_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tJDBCOutput_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_1_MAPPINGS_URL", mappings_url_tJDBCOutput_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_1 = null;
topology_tJDBCOutput_1 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_1 = def_tJDBCOutput_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_1, topology_tJDBCOutput_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_1 = def_tJDBCOutput_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_1 = componentRuntime_tJDBCOutput_1.initialize(container_tJDBCOutput_1, props_tJDBCOutput_1);

if (initVr_tJDBCOutput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_1.getMessage());
}

if(componentRuntime_tJDBCOutput_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_1;
	compDriverInitialization_tJDBCOutput_1.runAtDriver(container_tJDBCOutput_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_1 = null;
if(componentRuntime_tJDBCOutput_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_1;
	org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_1 = sourceOrSink_tJDBCOutput_1.validate(container_tJDBCOutput_1);
	if (vr_tJDBCOutput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tJDBCOutput_1.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_1 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_1;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_1 = sink_tJDBCOutput_1.createWriteOperation();
    writeOperation_tJDBCOutput_1.initialize(container_tJDBCOutput_1);
    org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_1 = writeOperation_tJDBCOutput_1.createWriter(container_tJDBCOutput_1);
    writer_tJDBCOutput_1.open("tJDBCOutput_1");

    resourceMap.put("writer_tJDBCOutput_1", writer_tJDBCOutput_1);

    org.talend.components.api.component.Connector c_tJDBCOutput_1 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_1.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_1 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_1 = props_tJDBCOutput_1.getSchema(c_tJDBCOutput_1, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_1
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_1);
                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_1 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_1 = null;


 



/**
 * [tJDBCOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
out2Struct out2_tmp = new out2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tUniqRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_2", false);
		start_Hash.put("tUniqRow_2", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tUniqRow_2 = 0;
		

	
		class KeyStruct_tUniqRow_2 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					Integer id_state;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.id_state == null) ? 0 : this.id_state.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_2 other = (KeyStruct_tUniqRow_2) obj;
				
									if (this.id_state == null) {
										if (other.id_state != null) 
											return false;
								
									} else if (!this.id_state.equals(other.id_state))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_2 = 0;
int nb_duplicates_tUniqRow_2 = 0;
KeyStruct_tUniqRow_2 finder_tUniqRow_2 = new KeyStruct_tUniqRow_2();
java.util.Set<KeyStruct_tUniqRow_2> keystUniqRow_2 = new java.util.HashSet<KeyStruct_tUniqRow_2>(); 

 



/**
 * [tUniqRow_2 begin ] stop
 */






	
	/**
	 * [tJDBCOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_2", false);
		start_Hash.put("tJDBCOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out3");
					}
				
		int tos_count_tJDBCOutput_2 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_2 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_2 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_2.createRuntimeProperties();
 		                    props_tJDBCOutput_2.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.UPDATE_OR_INSERT);
 		                    
 		                    props_tJDBCOutput_2.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_2.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_2.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_2.tableSelection.setValue("tablename",
 		                    "sales_analyzer.city");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_2\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"tJDBCOutput_2\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_1_fisrt sst_tJDBCOutput_2_1_fisrt = new SchemaSettingTool_tJDBCOutput_2_1_fisrt();
 		                    
 		                    props_tJDBCOutput_2.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_2\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"tJDBCOutput_2\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_2_fisrt sst_tJDBCOutput_2_2_fisrt = new SchemaSettingTool_tJDBCOutput_2_2_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_2_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"parent_id\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"parent_id\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"parent_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_2\",\"di.table.label\":\"tJDBCOutput_2\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_2_3_fisrt sst_tJDBCOutput_2_3_fisrt = new SchemaSettingTool_tJDBCOutput_2_3_fisrt();
 		                    
 		                    props_tJDBCOutput_2.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_2_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_2.additionalColumns.setValue("referenceColumns",
 		                    "obj_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_2.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_2 = props_tJDBCOutput_2.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_2.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_2);
        }
    }
globalMap.put("tJDBCOutput_2_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tJDBCOutput_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_2_MAPPINGS_URL", mappings_url_tJDBCOutput_2);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_2 = null;
topology_tJDBCOutput_2 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_2 = def_tJDBCOutput_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_2, topology_tJDBCOutput_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_2 = def_tJDBCOutput_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_2 = componentRuntime_tJDBCOutput_2.initialize(container_tJDBCOutput_2, props_tJDBCOutput_2);

if (initVr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_2.getMessage());
}

if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_2;
	compDriverInitialization_tJDBCOutput_2.runAtDriver(container_tJDBCOutput_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_2 = null;
if(componentRuntime_tJDBCOutput_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_2;
	org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_2 = sourceOrSink_tJDBCOutput_2.validate(container_tJDBCOutput_2);
	if (vr_tJDBCOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tJDBCOutput_2.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_2 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_2;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_2 = sink_tJDBCOutput_2.createWriteOperation();
    writeOperation_tJDBCOutput_2.initialize(container_tJDBCOutput_2);
    org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_2 = writeOperation_tJDBCOutput_2.createWriter(container_tJDBCOutput_2);
    writer_tJDBCOutput_2.open("tJDBCOutput_2");

    resourceMap.put("writer_tJDBCOutput_2", writer_tJDBCOutput_2);

    org.talend.components.api.component.Connector c_tJDBCOutput_2 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_2.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_2 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_2 = props_tJDBCOutput_2.getSchema(c_tJDBCOutput_2, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_2
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_2);
                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_2 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_2 = null;


 



/**
 * [tJDBCOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
out3Struct out3_tmp = new out3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tUniqRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_3", false);
		start_Hash.put("tUniqRow_3", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tUniqRow_3 = 0;
		

	
		class KeyStruct_tUniqRow_3 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					Integer id_city;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.id_city == null) ? 0 : this.id_city.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_3 other = (KeyStruct_tUniqRow_3) obj;
				
									if (this.id_city == null) {
										if (other.id_city != null) 
											return false;
								
									} else if (!this.id_city.equals(other.id_city))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_3 = 0;
int nb_duplicates_tUniqRow_3 = 0;
KeyStruct_tUniqRow_3 finder_tUniqRow_3 = new KeyStruct_tUniqRow_3();
java.util.Set<KeyStruct_tUniqRow_3> keystUniqRow_3 = new java.util.HashSet<KeyStruct_tUniqRow_3>(); 

 



/**
 * [tUniqRow_3 begin ] stop
 */





	
	/**
	 * [tJDBCOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_4", false);
		start_Hash.put("tJDBCOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out5");
					}
				
		int tos_count_tJDBCOutput_4 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_4 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_4 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_4.createRuntimeProperties();
 		                    props_tJDBCOutput_4.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_4.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_4.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_4.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_4.tableSelection.setValue("tablename",
 		                    "sales_analyzer.product_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_4\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"amount\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"amount\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"amount\",\"talend.field.precision\":\"5\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATE\",\"talend.field.dbColumnName\":\"history_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"13\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"history_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"tJDBCOutput_4\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_1_fisrt sst_tJDBCOutput_4_1_fisrt = new SchemaSettingTool_tJDBCOutput_4_1_fisrt();
 		                    
 		                    props_tJDBCOutput_4.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_4\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"amount\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"amount\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"amount\",\"talend.field.precision\":\"5\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATE\",\"talend.field.dbColumnName\":\"history_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"13\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"history_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"tJDBCOutput_4\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_2_fisrt sst_tJDBCOutput_4_2_fisrt = new SchemaSettingTool_tJDBCOutput_4_2_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_4_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"amount\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"amount\",\"di.column.talendType\":\"id_BigDecimal\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"amount\",\"talend.field.precision\":\"5\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATE\",\"talend.field.dbColumnName\":\"history_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"13\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"history_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_4\",\"di.table.label\":\"tJDBCOutput_4\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_4_3_fisrt sst_tJDBCOutput_4_3_fisrt = new SchemaSettingTool_tJDBCOutput_4_3_fisrt();
 		                    
 		                    props_tJDBCOutput_4.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_4_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_4.additionalColumns.setValue("referenceColumns",
 		                    "obj_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_4.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_4 = props_tJDBCOutput_4.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_4.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_4);
        }
    }
globalMap.put("tJDBCOutput_4_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tJDBCOutput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_4_MAPPINGS_URL", mappings_url_tJDBCOutput_4);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_4 = null;
topology_tJDBCOutput_4 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_4 = def_tJDBCOutput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_4, topology_tJDBCOutput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_4 = def_tJDBCOutput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_4 = componentRuntime_tJDBCOutput_4.initialize(container_tJDBCOutput_4, props_tJDBCOutput_4);

if (initVr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_4.getMessage());
}

if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_4;
	compDriverInitialization_tJDBCOutput_4.runAtDriver(container_tJDBCOutput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_4 = null;
if(componentRuntime_tJDBCOutput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_4;
	org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_4 = sourceOrSink_tJDBCOutput_4.validate(container_tJDBCOutput_4);
	if (vr_tJDBCOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tJDBCOutput_4.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_4 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_4;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_4 = sink_tJDBCOutput_4.createWriteOperation();
    writeOperation_tJDBCOutput_4.initialize(container_tJDBCOutput_4);
    org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_4 = writeOperation_tJDBCOutput_4.createWriter(container_tJDBCOutput_4);
    writer_tJDBCOutput_4.open("tJDBCOutput_4");

    resourceMap.put("writer_tJDBCOutput_4", writer_tJDBCOutput_4);

    org.talend.components.api.component.Connector c_tJDBCOutput_4 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_4.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_4 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_4 = props_tJDBCOutput_4.getSchema(c_tJDBCOutput_4, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_4
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_4);
                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_4 = null;


 



/**
 * [tJDBCOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
out5Struct out5_tmp = new out5Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */




	
	/**
	 * [tAggregateRow_1_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGOUT", false);
		start_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tAggregateRow_1_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_1 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_1 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_1 utilClass_tAggregateRow_1 = new UtilClass_tAggregateRow_1();

	

	class AggOperationStruct_tAggregateRow_1 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				Integer id_city;
    				Integer id_state;
    				Integer country_id;
    				String product;
         			String name_country_first;
         			String name_state_first;
         			String name_city_first;BigDecimal amount_sum;
           			
         			java.util.Date date_first;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.id_city == null) ? 0 : this.id_city.hashCode());
							
							result = prime * result + ((this.id_state == null) ? 0 : this.id_state.hashCode());
							
							result = prime * result + ((this.country_id == null) ? 0 : this.country_id.hashCode());
							
							result = prime * result + ((this.product == null) ? 0 : this.product.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_1 other = (AggOperationStruct_tAggregateRow_1) obj;
			
							if (this.id_city == null) {
								if (other.id_city != null) 
									return false;
							} else if (!this.id_city.equals(other.id_city)) 
								return false;
						
							if (this.id_state == null) {
								if (other.id_state != null) 
									return false;
							} else if (!this.id_state.equals(other.id_state)) 
								return false;
						
							if (this.country_id == null) {
								if (other.country_id != null) 
									return false;
							} else if (!this.country_id.equals(other.country_id)) 
								return false;
						
							if (this.product == null) {
								if (other.product != null) 
									return false;
							} else if (!this.product.equals(other.product)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_1 operation_result_tAggregateRow_1 = null;
	AggOperationStruct_tAggregateRow_1 operation_finder_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();
	java.util.Map<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1> hash_tAggregateRow_1 = new java.util.HashMap<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1>();
	

 



/**
 * [tAggregateRow_1_AGGOUT begin ] stop
 */



	
	/**
	 * [tReplicate_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tReplicate_1", false);
		start_Hash.put("tReplicate_1", System.currentTimeMillis());
		
	
	currentComponent="tReplicate_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tReplicate_1 = 0;
		

 



/**
 * [tReplicate_1 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_1", false);
		start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_1";

	
		int tos_count_tFileInputDelimited_1 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try{
					
						Object filename_tFileInputDelimited_1 = context.outputDirectory+"MonthlyData_"+TalendDate.formatDate("yyyy-MM-dd", TalendDate.getFirstDayOfMonth(context.date))+"_"+ context.session+"_validated.csv";
						if(filename_tFileInputDelimited_1 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
			if(footer_value_tFileInputDelimited_1 >0 || random_value_tFileInputDelimited_1 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited(context.outputDirectory+"MonthlyData_"+TalendDate.formatDate("yyyy-MM-dd", TalendDate.getFirstDayOfMonth(context.date))+"_"+ context.session+"_validated.csv", "UTF-8",";","\n",true,0,0,
									limit_tFileInputDelimited_1
								,-1, false);
						} catch(java.lang.Exception e) {
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_1!=null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();
						
			    						row1 = null;			
												
									boolean whetherReject_tFileInputDelimited_1 = false;
									row1 = new row1Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_1 = 0;
				
					String temp = ""; 
				
					columnIndexWithD_tFileInputDelimited_1 = 0;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						if(temp.length() > 0) {
							
								try {
								
    								row1.id_city = ParserUtils.parseTo_Integer(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"id_city", "row1", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								
									row1.id_city = null;
								
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 1;
					
							row1.name_city = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 2;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						if(temp.length() > 0) {
							
								try {
								
    								row1.state_id = ParserUtils.parseTo_Integer(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"state_id", "row1", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								
									row1.state_id = null;
								
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 3;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						if(temp.length() > 0) {
							
								try {
								
    								row1.id_state = ParserUtils.parseTo_Integer(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"id_state", "row1", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								
									row1.id_state = null;
								
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 4;
					
							row1.name_state = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 5;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						if(temp.length() > 0) {
							
								try {
								
    								row1.country_id = ParserUtils.parseTo_Integer(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"country_id", "row1", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								
									row1.country_id = null;
								
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 6;
					
							row1.sortname_country = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 7;
					
							row1.name_country = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 8;
					
							row1.product = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 9;
					
							row1.customer = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 10;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						if(temp.length() > 0) {
							
								try {
								
    								row1.amount = ParserUtils.parseTo_Float(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"amount", "row1", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								
									row1.amount = null;
								
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 11;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						if(temp.length() > 0) {
							
								try {
								
    									row1.date = ParserUtils.parseTo_Date(temp, "dd-MM-yyyy");
    								
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"date", "row1", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								
									row1.date = null;
								
							
						}
					
				
				
										
										if(rowstate_tFileInputDelimited_1.getException()!=null) {
											throw rowstate_tFileInputDelimited_1.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
			        					whetherReject_tFileInputDelimited_1 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row1 = null;
			                				
			    					}
								

 



/**
 * [tFileInputDelimited_1 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	

 


	tos_count_tFileInputDelimited_1++;

/**
 * [tFileInputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	

 



/**
 * [tFileInputDelimited_1 process_data_begin ] stop
 */
// Start of branch "row1"
if(row1 != null) { 



	
	/**
	 * [tReplicate_1 main ] start
	 */

	

	
	
	currentComponent="tReplicate_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row1");
					}
					


	row3 = new row3Struct();
						
	row3.id_city = row1.id_city;								
	row3.name_city = row1.name_city;								
	row3.state_id = row1.state_id;								
	row3.id_state = row1.id_state;								
	row3.name_state = row1.name_state;								
	row3.country_id = row1.country_id;								
	row3.sortname_country = row1.sortname_country;								
	row3.name_country = row1.name_country;								
	row3.product = row1.product;								
	row3.customer = row1.customer;								
	row3.amount = row1.amount;								
	row3.date = row1.date;			
	row4 = new row4Struct();
						
	row4.id_city = row1.id_city;								
	row4.name_city = row1.name_city;								
	row4.state_id = row1.state_id;								
	row4.id_state = row1.id_state;								
	row4.name_state = row1.name_state;								
	row4.country_id = row1.country_id;								
	row4.sortname_country = row1.sortname_country;								
	row4.name_country = row1.name_country;								
	row4.product = row1.product;								
	row4.customer = row1.customer;								
	row4.amount = row1.amount;								
	row4.date = row1.date;			
	row6 = new row6Struct();
						
	row6.id_city = row1.id_city;								
	row6.name_city = row1.name_city;								
	row6.state_id = row1.state_id;								
	row6.id_state = row1.id_state;								
	row6.name_state = row1.name_state;								
	row6.country_id = row1.country_id;								
	row6.sortname_country = row1.sortname_country;								
	row6.name_country = row1.name_country;								
	row6.product = row1.product;								
	row6.customer = row1.customer;								
	row6.amount = row1.amount;								
	row6.date = row1.date;			
	row10 = new row10Struct();
						
	row10.id_city = row1.id_city;								
	row10.name_city = row1.name_city;								
	row10.state_id = row1.state_id;								
	row10.id_state = row1.id_state;								
	row10.name_state = row1.name_state;								
	row10.country_id = row1.country_id;								
	row10.sortname_country = row1.sortname_country;								
	row10.name_country = row1.name_country;								
	row10.product = row1.product;								
	row10.customer = row1.customer;								
	row10.amount = row1.amount;								
	row10.date = row1.date;			
	row8 = new row8Struct();
						
	row8.id_city = row1.id_city;								
	row8.name_city = row1.name_city;								
	row8.state_id = row1.state_id;								
	row8.id_state = row1.id_state;								
	row8.name_state = row1.name_state;								
	row8.country_id = row1.country_id;								
	row8.sortname_country = row1.sortname_country;								
	row8.name_country = row1.name_country;								
	row8.product = row1.product;								
	row8.customer = row1.customer;								
	row8.amount = row1.amount;								
	row8.date = row1.date;			


 


	tos_count_tReplicate_1++;

/**
 * [tReplicate_1 main ] stop
 */
	
	/**
	 * [tReplicate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_1";

	

 



/**
 * [tReplicate_1 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row3");
					}
					
row2 = null;			
finder_tUniqRow_1.country_id = row3.country_id;	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
new_tUniqRow_1.country_id = row3.country_id;
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row2 == null){ 
	
	row2 = new row2Struct();
}row2.id_city = row3.id_city;			row2.name_city = row3.name_city;			row2.state_id = row3.state_id;			row2.id_state = row3.id_state;			row2.name_state = row3.name_state;			row2.country_id = row3.country_id;			row2.sortname_country = row3.sortname_country;			row2.name_country = row3.name_country;			row2.product = row3.product;			row2.customer = row3.customer;			row2.amount = row3.amount;			row2.date = row3.date;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row2"
if(row2 != null) { 



	
	/**
	 * [tJavaFlex_1 main ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row2");
					}
					



globalMap.putIfAbsent(((String)globalMap.get("tFileList_1_CURRENT_FILEPATH")), row2.date);



 


	tos_count_tJavaFlex_1++;

/**
 * [tJavaFlex_1 main ] stop
 */
	
	/**
	 * [tJavaFlex_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";

	

 



/**
 * [tJavaFlex_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row13");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_2 = false;
		  boolean mainRowRejected_tMap_2 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

out1 = null;


// # Output table : 'out1'
out1_tmp.obj_id = row2.country_id ;
out1_tmp.active_date = TalendDate.getCurrentDate();
out1_tmp.create_date = TalendDate.getCurrentDate();
out1_tmp.exp_date = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss","2999-01-01 00:00:00") ;
out1_tmp.obj_status = "NA";
out1_tmp.obj_type = "NA";
out1_tmp.update_date = TalendDate.getCurrentDate();
out1_tmp.optlock = 0;
out1_tmp.name = row2.name_country ;
out1 = out1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tJDBCOutput_5 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"out1");
					}
					

        incomingEnforcer_tJDBCOutput_5.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("obj_id") != null){
                    incomingEnforcer_tJDBCOutput_5.put("obj_id", out1.obj_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("active_date") != null){
                    incomingEnforcer_tJDBCOutput_5.put("active_date", out1.active_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_5.put("create_date", out1.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("exp_date") != null){
                    incomingEnforcer_tJDBCOutput_5.put("exp_date", out1.exp_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("obj_status") != null){
                    incomingEnforcer_tJDBCOutput_5.put("obj_status", out1.obj_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("obj_type") != null){
                    incomingEnforcer_tJDBCOutput_5.put("obj_type", out1.obj_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_5.put("update_date", out1.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("optlock") != null){
                    incomingEnforcer_tJDBCOutput_5.put("optlock", out1.optlock);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_5.getRuntimeSchema().getField("name") != null){
                    incomingEnforcer_tJDBCOutput_5.put("name", out1.name);
                }
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_5 = incomingEnforcer_tJDBCOutput_5.getCurrentRecord();
        

        writer_tJDBCOutput_5.write(data_tJDBCOutput_5);
        
        nb_line_tJDBCOutput_5++;

 


	tos_count_tJDBCOutput_5++;

/**
 * [tJDBCOutput_5 main ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	


 



/**
 * [tJDBCOutput_5 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaFlex_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";

	

 



/**
 * [tJavaFlex_1 process_data_end ] stop
 */

} // End of branch "row2"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */




	
	/**
	 * [tUniqRow_2 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row4");
					}
					
row5 = null;			
finder_tUniqRow_2.id_state = row4.id_state;	
finder_tUniqRow_2.hashCodeDirty = true;
if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
		KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

		
new_tUniqRow_2.id_state = row4.id_state;
		
		keystUniqRow_2.add(new_tUniqRow_2);if(row5 == null){ 
	
	row5 = new row5Struct();
}row5.id_city = row4.id_city;			row5.name_city = row4.name_city;			row5.state_id = row4.state_id;			row5.id_state = row4.id_state;			row5.name_state = row4.name_state;			row5.country_id = row4.country_id;			row5.sortname_country = row4.sortname_country;			row5.name_country = row4.name_country;			row5.product = row4.product;			row5.customer = row4.customer;			row5.amount = row4.amount;			row5.date = row4.date;					
		nb_uniques_tUniqRow_2++;
	} else {
	  nb_duplicates_tUniqRow_2++;
	}

 


	tos_count_tUniqRow_2++;

/**
 * [tUniqRow_2 main ] stop
 */
	
	/**
	 * [tUniqRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	

 



/**
 * [tUniqRow_2 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row5");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_1 = false;
		  boolean mainRowRejected_tMap_1 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

out2 = null;


// # Output table : 'out2'
out2_tmp.obj_id = row5.id_state ;
out2_tmp.active_date = TalendDate.getCurrentDate();
out2_tmp.create_date = TalendDate.getCurrentDate();
out2_tmp.exp_date = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss","2999-01-01 00:00:00") ;
out2_tmp.obj_status = "NA";
out2_tmp.obj_type = "NA";
out2_tmp.update_date = TalendDate.getCurrentDate();
out2_tmp.optlock = 0;
out2_tmp.name = row5.name_state ;
out2_tmp.parent_id = (long)row5.country_id ;
out2 = out2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "out2"
if(out2 != null) { 



	
	/**
	 * [tJDBCOutput_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"out2");
					}
					

        incomingEnforcer_tJDBCOutput_1.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("obj_id") != null){
                    incomingEnforcer_tJDBCOutput_1.put("obj_id", out2.obj_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("active_date") != null){
                    incomingEnforcer_tJDBCOutput_1.put("active_date", out2.active_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_1.put("create_date", out2.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("exp_date") != null){
                    incomingEnforcer_tJDBCOutput_1.put("exp_date", out2.exp_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("obj_status") != null){
                    incomingEnforcer_tJDBCOutput_1.put("obj_status", out2.obj_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("obj_type") != null){
                    incomingEnforcer_tJDBCOutput_1.put("obj_type", out2.obj_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_1.put("update_date", out2.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("optlock") != null){
                    incomingEnforcer_tJDBCOutput_1.put("optlock", out2.optlock);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("name") != null){
                    incomingEnforcer_tJDBCOutput_1.put("name", out2.name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_1.getRuntimeSchema().getField("parent_id") != null){
                    incomingEnforcer_tJDBCOutput_1.put("parent_id", out2.parent_id);
                }
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_1 = incomingEnforcer_tJDBCOutput_1.getCurrentRecord();
        

        writer_tJDBCOutput_1.write(data_tJDBCOutput_1);
        
        nb_line_tJDBCOutput_1++;

 


	tos_count_tJDBCOutput_1++;

/**
 * [tJDBCOutput_1 main ] stop
 */
	
	/**
	 * [tJDBCOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	


 



/**
 * [tJDBCOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	


 



/**
 * [tJDBCOutput_1 process_data_end ] stop
 */

} // End of branch "out2"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tUniqRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	

 



/**
 * [tUniqRow_2 process_data_end ] stop
 */




	
	/**
	 * [tUniqRow_3 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row6");
					}
					
row7 = null;			
finder_tUniqRow_3.id_city = row6.id_city;	
finder_tUniqRow_3.hashCodeDirty = true;
if (!keystUniqRow_3.contains(finder_tUniqRow_3)) {
		KeyStruct_tUniqRow_3 new_tUniqRow_3 = new KeyStruct_tUniqRow_3();

		
new_tUniqRow_3.id_city = row6.id_city;
		
		keystUniqRow_3.add(new_tUniqRow_3);if(row7 == null){ 
	
	row7 = new row7Struct();
}row7.id_city = row6.id_city;			row7.name_city = row6.name_city;			row7.state_id = row6.state_id;			row7.id_state = row6.id_state;			row7.name_state = row6.name_state;			row7.country_id = row6.country_id;			row7.sortname_country = row6.sortname_country;			row7.name_country = row6.name_country;			row7.product = row6.product;			row7.customer = row6.customer;			row7.amount = row6.amount;			row7.date = row6.date;					
		nb_uniques_tUniqRow_3++;
	} else {
	  nb_duplicates_tUniqRow_3++;
	}

 


	tos_count_tUniqRow_3++;

/**
 * [tUniqRow_3 main ] stop
 */
	
	/**
	 * [tUniqRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	

 



/**
 * [tUniqRow_3 process_data_begin ] stop
 */
// Start of branch "row7"
if(row7 != null) { 



	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row7");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_3 = false;
		  boolean mainRowRejected_tMap_3 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

out3 = null;


// # Output table : 'out3'
out3_tmp.obj_id = row7.id_city ;
out3_tmp.active_date = TalendDate.getCurrentDate();
out3_tmp.create_date = TalendDate.getCurrentDate();
out3_tmp.exp_date = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss","2999-01-01 00:00:00") ;
out3_tmp.obj_status = "NA";
out3_tmp.obj_type = "NA";
out3_tmp.update_date = TalendDate.getCurrentDate();
out3_tmp.optlock = 0;
out3_tmp.name = row7.name_city ;
out3_tmp.parent_id = (long)row7.id_state;
out3 = out3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "out3"
if(out3 != null) { 



	
	/**
	 * [tJDBCOutput_2 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"out3");
					}
					

        incomingEnforcer_tJDBCOutput_2.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("obj_id") != null){
                    incomingEnforcer_tJDBCOutput_2.put("obj_id", out3.obj_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("active_date") != null){
                    incomingEnforcer_tJDBCOutput_2.put("active_date", out3.active_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_2.put("create_date", out3.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("exp_date") != null){
                    incomingEnforcer_tJDBCOutput_2.put("exp_date", out3.exp_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("obj_status") != null){
                    incomingEnforcer_tJDBCOutput_2.put("obj_status", out3.obj_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("obj_type") != null){
                    incomingEnforcer_tJDBCOutput_2.put("obj_type", out3.obj_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_2.put("update_date", out3.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("optlock") != null){
                    incomingEnforcer_tJDBCOutput_2.put("optlock", out3.optlock);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("name") != null){
                    incomingEnforcer_tJDBCOutput_2.put("name", out3.name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_2.getRuntimeSchema().getField("parent_id") != null){
                    incomingEnforcer_tJDBCOutput_2.put("parent_id", out3.parent_id);
                }
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_2 = incomingEnforcer_tJDBCOutput_2.getCurrentRecord();
        

        writer_tJDBCOutput_2.write(data_tJDBCOutput_2);
        
        nb_line_tJDBCOutput_2++;

 


	tos_count_tJDBCOutput_2++;

/**
 * [tJDBCOutput_2 main ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	


 



/**
 * [tJDBCOutput_2 process_data_end ] stop
 */

} // End of branch "out3"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_end ] stop
 */

} // End of branch "row7"




	
	/**
	 * [tUniqRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	

 



/**
 * [tUniqRow_3 process_data_end ] stop
 */




	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row10");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_5 = false;
		  boolean mainRowRejected_tMap_5 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

out5 = null;


// # Output table : 'out5'
out5_tmp.obj_id = java.util.UUID.randomUUID();
out5_tmp.active_date = TalendDate.getCurrentDate();
out5_tmp.create_date = TalendDate.getCurrentDate();
out5_tmp.exp_date = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss","2999-01-01 00:00:00") ;
out5_tmp.obj_status = "NA";
out5_tmp.obj_type = "NA";
out5_tmp.update_date = TalendDate.getCurrentDate();
out5_tmp.optlock = 0;
out5_tmp.country_id = row10.country_id ;
out5_tmp.country_name = row10.name_country ;
out5_tmp.state_id = row10.id_state ;
out5_tmp.state_name = row10.name_state ;
out5_tmp.city_id = row10.id_city ;
out5_tmp.city_name = row10.name_city ;
out5_tmp.product = row10.product ;
out5_tmp.amount = BigDecimal.valueOf(row10.amount) ;
out5_tmp.history_date = row10.date ;
out5 = out5_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "out5"
if(out5 != null) { 



	
	/**
	 * [tJDBCOutput_4 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"out5");
					}
					

        incomingEnforcer_tJDBCOutput_4.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("obj_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("obj_id", out5.obj_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("active_date") != null){
                    incomingEnforcer_tJDBCOutput_4.put("active_date", out5.active_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_4.put("create_date", out5.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("exp_date") != null){
                    incomingEnforcer_tJDBCOutput_4.put("exp_date", out5.exp_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("obj_status") != null){
                    incomingEnforcer_tJDBCOutput_4.put("obj_status", out5.obj_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("obj_type") != null){
                    incomingEnforcer_tJDBCOutput_4.put("obj_type", out5.obj_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_4.put("update_date", out5.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("optlock") != null){
                    incomingEnforcer_tJDBCOutput_4.put("optlock", out5.optlock);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("country_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("country_id", out5.country_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("country_name") != null){
                    incomingEnforcer_tJDBCOutput_4.put("country_name", out5.country_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("state_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("state_id", out5.state_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("state_name") != null){
                    incomingEnforcer_tJDBCOutput_4.put("state_name", out5.state_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("city_id") != null){
                    incomingEnforcer_tJDBCOutput_4.put("city_id", out5.city_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("city_name") != null){
                    incomingEnforcer_tJDBCOutput_4.put("city_name", out5.city_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("product") != null){
                    incomingEnforcer_tJDBCOutput_4.put("product", out5.product);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("amount") != null){
                    incomingEnforcer_tJDBCOutput_4.put("amount", out5.amount);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_4.getRuntimeSchema().getField("history_date") != null){
                    incomingEnforcer_tJDBCOutput_4.put("history_date", out5.history_date);
                }
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_4 = incomingEnforcer_tJDBCOutput_4.getCurrentRecord();
        

        writer_tJDBCOutput_4.write(data_tJDBCOutput_4);
        
        nb_line_tJDBCOutput_4++;

 


	tos_count_tJDBCOutput_4++;

/**
 * [tJDBCOutput_4 main ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	


 



/**
 * [tJDBCOutput_4 process_data_end ] stop
 */

} // End of branch "out5"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_end ] stop
 */




	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row8");
					}
					
	
operation_finder_tAggregateRow_1.id_city = row8.id_city;
			operation_finder_tAggregateRow_1.id_state = row8.id_state;
			operation_finder_tAggregateRow_1.country_id = row8.country_id;
			operation_finder_tAggregateRow_1.product = row8.product;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	
		boolean isFirstAdd_tAggregateRow_1 = false;
	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.id_city = operation_finder_tAggregateRow_1.id_city;
				operation_result_tAggregateRow_1.id_state = operation_finder_tAggregateRow_1.id_state;
				operation_result_tAggregateRow_1.country_id = operation_finder_tAggregateRow_1.country_id;
				operation_result_tAggregateRow_1.product = operation_finder_tAggregateRow_1.product;
				
		
		
			isFirstAdd_tAggregateRow_1 = true;
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(isFirstAdd_tAggregateRow_1 ) {
					operation_result_tAggregateRow_1.name_country_first = row8.name_country;
				}
				
				if(isFirstAdd_tAggregateRow_1 ) {
					operation_result_tAggregateRow_1.name_state_first = row8.name_state;
				}
				
				if(isFirstAdd_tAggregateRow_1 ) {
					operation_result_tAggregateRow_1.name_city_first = row8.name_city;
				}
				
					if(operation_result_tAggregateRow_1.amount_sum == null) {
						operation_result_tAggregateRow_1.amount_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_1.amount_sum = operation_result_tAggregateRow_1.amount_sum.add(
						new BigDecimal(
							String.valueOf(
								row8.amount
							)
						)
					);
					
				if(isFirstAdd_tAggregateRow_1 ) {
					operation_result_tAggregateRow_1.date_first = row8.date;
				}
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";

	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";

	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tReplicate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_1";

	

 



/**
 * [tReplicate_1 process_data_end ] stop
 */

} // End of branch "row1"




	
	/**
	 * [tFileInputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	

 



/**
 * [tFileInputDelimited_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	



            }
            }finally{
                if(!((Object)(context.outputDirectory+"MonthlyData_"+TalendDate.formatDate("yyyy-MM-dd", TalendDate.getFirstDayOfMonth(context.date))+"_"+ context.session+"_validated.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_1!=null){
                		fid_tFileInputDelimited_1.close();
                	}
                }
                if(fid_tFileInputDelimited_1!=null){
                	globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_1", true);
end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());




/**
 * [tFileInputDelimited_1 end ] stop
 */

	
	/**
	 * [tReplicate_1 end ] start
	 */

	

	
	
	currentComponent="tReplicate_1";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tReplicate_1", true);
end_Hash.put("tReplicate_1", System.currentTimeMillis());




/**
 * [tReplicate_1 end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());




/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tJavaFlex_1 end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";

	


// end of the component, outside/closing the loop
      

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tJavaFlex_1", true);
end_Hash.put("tJavaFlex_1", System.currentTimeMillis());




/**
 * [tJavaFlex_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tJDBCOutput_5 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_5", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_5 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_5.close();
    final java.util.Map<String, Object> resultMap_tJDBCOutput_5 = writer_tJDBCOutput_5.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_5), container_tJDBCOutput_5);
if(resultMap_tJDBCOutput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_5 : resultMap_tJDBCOutput_5.entrySet()) {
		switch(entry_tJDBCOutput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "ERROR_MESSAGE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_LINE", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_SUCCESS", entry_tJDBCOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", "NB_REJECT", entry_tJDBCOutput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_5 = new StringBuilder();
            for (int i_tJDBCOutput_5 = 0; i_tJDBCOutput_5 < entry_tJDBCOutput_5.getKey().length(); i_tJDBCOutput_5++) {
                char ch_tJDBCOutput_5 = entry_tJDBCOutput_5.getKey().charAt(i_tJDBCOutput_5);
                if(Character.isUpperCase(ch_tJDBCOutput_5) && i_tJDBCOutput_5> 0) {
                	studio_key_tJDBCOutput_5.append('_');
                }
                studio_key_tJDBCOutput_5.append(ch_tJDBCOutput_5);
            }
			container_tJDBCOutput_5.setComponentData("tJDBCOutput_5", studio_key_tJDBCOutput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_5.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out1");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_5", true);
end_Hash.put("tJDBCOutput_5", System.currentTimeMillis());




/**
 * [tJDBCOutput_5 end ] stop
 */













	
	/**
	 * [tUniqRow_2 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	

globalMap.put("tUniqRow_2_NB_UNIQUES",nb_uniques_tUniqRow_2);
globalMap.put("tUniqRow_2_NB_DUPLICATES",nb_duplicates_tUniqRow_2);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tUniqRow_2", true);
end_Hash.put("tUniqRow_2", System.currentTimeMillis());




/**
 * [tUniqRow_2 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tJDBCOutput_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_1", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_1 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_1.close();
    final java.util.Map<String, Object> resultMap_tJDBCOutput_1 = writer_tJDBCOutput_1.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_1), container_tJDBCOutput_1);
if(resultMap_tJDBCOutput_1!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_1 : resultMap_tJDBCOutput_1.entrySet()) {
		switch(entry_tJDBCOutput_1.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", "ERROR_MESSAGE", entry_tJDBCOutput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", "NB_LINE", entry_tJDBCOutput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", "NB_SUCCESS", entry_tJDBCOutput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", "NB_REJECT", entry_tJDBCOutput_1.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_1 = new StringBuilder();
            for (int i_tJDBCOutput_1 = 0; i_tJDBCOutput_1 < entry_tJDBCOutput_1.getKey().length(); i_tJDBCOutput_1++) {
                char ch_tJDBCOutput_1 = entry_tJDBCOutput_1.getKey().charAt(i_tJDBCOutput_1);
                if(Character.isUpperCase(ch_tJDBCOutput_1) && i_tJDBCOutput_1> 0) {
                	studio_key_tJDBCOutput_1.append('_');
                }
                studio_key_tJDBCOutput_1.append(ch_tJDBCOutput_1);
            }
			container_tJDBCOutput_1.setComponentData("tJDBCOutput_1", studio_key_tJDBCOutput_1.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_1.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out2");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_1", true);
end_Hash.put("tJDBCOutput_1", System.currentTimeMillis());




/**
 * [tJDBCOutput_1 end ] stop
 */










	
	/**
	 * [tUniqRow_3 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	

globalMap.put("tUniqRow_3_NB_UNIQUES",nb_uniques_tUniqRow_3);
globalMap.put("tUniqRow_3_NB_DUPLICATES",nb_duplicates_tUniqRow_3);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tUniqRow_3", true);
end_Hash.put("tUniqRow_3", System.currentTimeMillis());




/**
 * [tUniqRow_3 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tJDBCOutput_2 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_2", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_2 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_2.close();
    final java.util.Map<String, Object> resultMap_tJDBCOutput_2 = writer_tJDBCOutput_2.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_2), container_tJDBCOutput_2);
if(resultMap_tJDBCOutput_2!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_2 : resultMap_tJDBCOutput_2.entrySet()) {
		switch(entry_tJDBCOutput_2.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "ERROR_MESSAGE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_LINE", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_SUCCESS", entry_tJDBCOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", "NB_REJECT", entry_tJDBCOutput_2.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_2 = new StringBuilder();
            for (int i_tJDBCOutput_2 = 0; i_tJDBCOutput_2 < entry_tJDBCOutput_2.getKey().length(); i_tJDBCOutput_2++) {
                char ch_tJDBCOutput_2 = entry_tJDBCOutput_2.getKey().charAt(i_tJDBCOutput_2);
                if(Character.isUpperCase(ch_tJDBCOutput_2) && i_tJDBCOutput_2> 0) {
                	studio_key_tJDBCOutput_2.append('_');
                }
                studio_key_tJDBCOutput_2.append(ch_tJDBCOutput_2);
            }
			container_tJDBCOutput_2.setComponentData("tJDBCOutput_2", studio_key_tJDBCOutput_2.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_2.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out3");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_2", true);
end_Hash.put("tJDBCOutput_2", System.currentTimeMillis());




/**
 * [tJDBCOutput_2 end ] stop
 */










	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tJDBCOutput_4 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_4", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_4 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_4.close();
    final java.util.Map<String, Object> resultMap_tJDBCOutput_4 = writer_tJDBCOutput_4.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_4), container_tJDBCOutput_4);
if(resultMap_tJDBCOutput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_4 : resultMap_tJDBCOutput_4.entrySet()) {
		switch(entry_tJDBCOutput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "ERROR_MESSAGE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_LINE", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_SUCCESS", entry_tJDBCOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", "NB_REJECT", entry_tJDBCOutput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_4 = new StringBuilder();
            for (int i_tJDBCOutput_4 = 0; i_tJDBCOutput_4 < entry_tJDBCOutput_4.getKey().length(); i_tJDBCOutput_4++) {
                char ch_tJDBCOutput_4 = entry_tJDBCOutput_4.getKey().charAt(i_tJDBCOutput_4);
                if(Character.isUpperCase(ch_tJDBCOutput_4) && i_tJDBCOutput_4> 0) {
                	studio_key_tJDBCOutput_4.append('_');
                }
                studio_key_tJDBCOutput_4.append(ch_tJDBCOutput_4);
            }
			container_tJDBCOutput_4.setComponentData("tJDBCOutput_4", studio_key_tJDBCOutput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_4.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out5");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_4", true);
end_Hash.put("tJDBCOutput_4", System.currentTimeMillis());




/**
 * [tJDBCOutput_4 end ] stop
 */







	
	/**
	 * [tAggregateRow_1_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";

	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_1_AGGOUT", true);
end_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGOUT end ] stop
 */



	
	/**
	 * [tJDBCOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_3", false);
		start_Hash.put("tJDBCOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out4");
					}
				
		int tos_count_tJDBCOutput_3 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_3 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_3 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_3.createRuntimeProperties();
 		                    props_tJDBCOutput_3.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_3.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_3.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_3.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_3.tableSelection.setValue("tablename",
 		                    "sales_analyzer.product_group_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_3\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"amount\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"default\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\",\"di.column.talendType\":\"id_BigDecimal\",\"talend.field.pattern\":\"\",\"di.table.label\":\"amount\",\"talend.field.precision\":\"5\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"amount\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATE\",\"talend.field.dbColumnName\":\"history_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"13\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"history_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"tJDBCOutput_3\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_1_fisrt sst_tJDBCOutput_3_1_fisrt = new SchemaSettingTool_tJDBCOutput_3_1_fisrt();
 		                    
 		                    props_tJDBCOutput_3.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_3\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"amount\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"default\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\",\"di.column.talendType\":\"id_BigDecimal\",\"talend.field.pattern\":\"\",\"di.table.label\":\"amount\",\"talend.field.precision\":\"5\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"amount\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATE\",\"talend.field.dbColumnName\":\"history_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"13\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"history_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"tJDBCOutput_3\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_2_fisrt sst_tJDBCOutput_3_2_fisrt = new SchemaSettingTool_tJDBCOutput_3_2_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_3_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"amount\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"default\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\",\"di.column.talendType\":\"id_BigDecimal\",\"talend.field.pattern\":\"\",\"di.table.label\":\"amount\",\"talend.field.precision\":\"5\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"amount\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATE\",\"talend.field.dbColumnName\":\"history_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"13\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"history_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_3\",\"di.table.label\":\"tJDBCOutput_3\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_3_3_fisrt sst_tJDBCOutput_3_3_fisrt = new SchemaSettingTool_tJDBCOutput_3_3_fisrt();
 		                    
 		                    props_tJDBCOutput_3.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_3_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_3.additionalColumns.setValue("referenceColumns",
 		                    "obj_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_3.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_3 = props_tJDBCOutput_3.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_3.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_3);
        }
    }
globalMap.put("tJDBCOutput_3_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tJDBCOutput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_3_MAPPINGS_URL", mappings_url_tJDBCOutput_3);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_3 = null;
topology_tJDBCOutput_3 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_3 = def_tJDBCOutput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_3, topology_tJDBCOutput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_3 = def_tJDBCOutput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_3 = componentRuntime_tJDBCOutput_3.initialize(container_tJDBCOutput_3, props_tJDBCOutput_3);

if (initVr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_3.getMessage());
}

if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_3;
	compDriverInitialization_tJDBCOutput_3.runAtDriver(container_tJDBCOutput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_3 = null;
if(componentRuntime_tJDBCOutput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_3;
	org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_3 = sourceOrSink_tJDBCOutput_3.validate(container_tJDBCOutput_3);
	if (vr_tJDBCOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tJDBCOutput_3.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_3 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_3;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_3 = sink_tJDBCOutput_3.createWriteOperation();
    writeOperation_tJDBCOutput_3.initialize(container_tJDBCOutput_3);
    org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_3 = writeOperation_tJDBCOutput_3.createWriter(container_tJDBCOutput_3);
    writer_tJDBCOutput_3.open("tJDBCOutput_3");

    resourceMap.put("writer_tJDBCOutput_3", writer_tJDBCOutput_3);

    org.talend.components.api.component.Connector c_tJDBCOutput_3 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_3.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_3 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_3 = props_tJDBCOutput_3.getSchema(c_tJDBCOutput_3, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_3
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_3);
                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_3 = null;


 



/**
 * [tJDBCOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
out4Struct out4_tmp = new out4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGIN", false);
		start_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";

	
		int tos_count_tAggregateRow_1_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_1> values_tAggregateRow_1 = hash_tAggregateRow_1.values();

globalMap.put("tAggregateRow_1_NB_LINE", values_tAggregateRow_1.size());

for(AggOperationStruct_tAggregateRow_1 aggregated_row_tAggregateRow_1 : values_tAggregateRow_1) { // G_AggR_600



 



/**
 * [tAggregateRow_1_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";

	

            				    row9.country_id = aggregated_row_tAggregateRow_1.country_id;
            				    
            				    row9.id_state = aggregated_row_tAggregateRow_1.id_state;
            				    
            				    row9.id_city = aggregated_row_tAggregateRow_1.id_city;
            				    
            				    row9.product = aggregated_row_tAggregateRow_1.product;
            				    
                                row9.name_country = aggregated_row_tAggregateRow_1.name_country_first;
                                row9.name_state = aggregated_row_tAggregateRow_1.name_state_first;
                                row9.name_city = aggregated_row_tAggregateRow_1.name_city_first;
    								if(aggregated_row_tAggregateRow_1.amount_sum != null) {
    								row9.amount = aggregated_row_tAggregateRow_1.amount_sum.floatValue();
										
    								}else{
    								
    									row9.amount = null;
    									
    								}
    								
                                row9.date = aggregated_row_tAggregateRow_1.date_first;

 


	tos_count_tAggregateRow_1_AGGIN++;

/**
 * [tAggregateRow_1_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";

	

 



/**
 * [tAggregateRow_1_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row9");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_4 = false;
		  boolean mainRowRejected_tMap_4 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

out4 = null;


// # Output table : 'out4'
out4_tmp.obj_id = java.util.UUID.randomUUID();
out4_tmp.active_date = TalendDate.getCurrentDate();
out4_tmp.create_date = TalendDate.getCurrentDate();
out4_tmp.exp_date = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss","2999-01-01 00:00:00") ;
out4_tmp.obj_status = "NA";
out4_tmp.obj_type = "NA";
out4_tmp.update_date = TalendDate.getCurrentDate();
out4_tmp.optlock = 0;
out4_tmp.country_id = row9.country_id ;
out4_tmp.country_name = row9.name_country ;
out4_tmp.state_id = row9.id_state ;
out4_tmp.state_name = row9.name_state ;
out4_tmp.city_id = row9.id_city ;
out4_tmp.city_name = row9.name_city ;
out4_tmp.product = row9.product ;
out4_tmp.amount = BigDecimal.valueOf(row9.amount); ;
out4_tmp.history_date = row9.date ;
out4 = out4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "out4"
if(out4 != null) { 



	
	/**
	 * [tJDBCOutput_3 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"out4");
					}
					

        incomingEnforcer_tJDBCOutput_3.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("obj_id") != null){
                    incomingEnforcer_tJDBCOutput_3.put("obj_id", out4.obj_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("active_date") != null){
                    incomingEnforcer_tJDBCOutput_3.put("active_date", out4.active_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_3.put("create_date", out4.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("exp_date") != null){
                    incomingEnforcer_tJDBCOutput_3.put("exp_date", out4.exp_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("obj_status") != null){
                    incomingEnforcer_tJDBCOutput_3.put("obj_status", out4.obj_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("obj_type") != null){
                    incomingEnforcer_tJDBCOutput_3.put("obj_type", out4.obj_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_3.put("update_date", out4.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("optlock") != null){
                    incomingEnforcer_tJDBCOutput_3.put("optlock", out4.optlock);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("country_id") != null){
                    incomingEnforcer_tJDBCOutput_3.put("country_id", out4.country_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("country_name") != null){
                    incomingEnforcer_tJDBCOutput_3.put("country_name", out4.country_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("state_id") != null){
                    incomingEnforcer_tJDBCOutput_3.put("state_id", out4.state_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("state_name") != null){
                    incomingEnforcer_tJDBCOutput_3.put("state_name", out4.state_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("city_id") != null){
                    incomingEnforcer_tJDBCOutput_3.put("city_id", out4.city_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("city_name") != null){
                    incomingEnforcer_tJDBCOutput_3.put("city_name", out4.city_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("product") != null){
                    incomingEnforcer_tJDBCOutput_3.put("product", out4.product);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("amount") != null){
                    incomingEnforcer_tJDBCOutput_3.put("amount", out4.amount);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_3.getRuntimeSchema().getField("history_date") != null){
                    incomingEnforcer_tJDBCOutput_3.put("history_date", out4.history_date);
                }
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_3 = incomingEnforcer_tJDBCOutput_3.getCurrentRecord();
        

        writer_tJDBCOutput_3.write(data_tJDBCOutput_3);
        
        nb_line_tJDBCOutput_3++;

 


	tos_count_tJDBCOutput_3++;

/**
 * [tJDBCOutput_3 main ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	


 



/**
 * [tJDBCOutput_3 process_data_end ] stop
 */

} // End of branch "out4"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";

	

 



/**
 * [tAggregateRow_1_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";

	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_1_AGGIN", true);
end_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGIN end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tJDBCOutput_3 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_3", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_3 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_3.close();
    final java.util.Map<String, Object> resultMap_tJDBCOutput_3 = writer_tJDBCOutput_3.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_3), container_tJDBCOutput_3);
if(resultMap_tJDBCOutput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_3 : resultMap_tJDBCOutput_3.entrySet()) {
		switch(entry_tJDBCOutput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "ERROR_MESSAGE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_LINE", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_SUCCESS", entry_tJDBCOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", "NB_REJECT", entry_tJDBCOutput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_3 = new StringBuilder();
            for (int i_tJDBCOutput_3 = 0; i_tJDBCOutput_3 < entry_tJDBCOutput_3.getKey().length(); i_tJDBCOutput_3++) {
                char ch_tJDBCOutput_3 = entry_tJDBCOutput_3.getKey().charAt(i_tJDBCOutput_3);
                if(Character.isUpperCase(ch_tJDBCOutput_3) && i_tJDBCOutput_3> 0) {
                	studio_key_tJDBCOutput_3.append('_');
                }
                studio_key_tJDBCOutput_3.append(ch_tJDBCOutput_3);
            }
			container_tJDBCOutput_3.setComponentData("tJDBCOutput_3", studio_key_tJDBCOutput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_3.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out4");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_3", true);
end_Hash.put("tJDBCOutput_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tJDBCInput_1Process(globalMap);



/**
 * [tJDBCOutput_3 end ] stop
 */















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_1_AGGIN"
							globalMap.remove("tAggregateRow_1");
						
				try{
					
	
	/**
	 * [tFileInputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	

 



/**
 * [tFileInputDelimited_1 finally ] stop
 */

	
	/**
	 * [tReplicate_1 finally ] start
	 */

	

	
	
	currentComponent="tReplicate_1";

	

 



/**
 * [tReplicate_1 finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tJavaFlex_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";

	

 



/**
 * [tJavaFlex_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_5";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_5")==null){
    if(resourceMap.get("writer_tJDBCOutput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_5")).close();
		} catch (java.io.IOException e_tJDBCOutput_5) {
			String errorMessage_tJDBCOutput_5 = "failed to release the resource in tJDBCOutput_5 :" + e_tJDBCOutput_5.getMessage();
			System.err.println(errorMessage_tJDBCOutput_5);
		}
	}
}
 



/**
 * [tJDBCOutput_5 finally ] stop
 */













	
	/**
	 * [tUniqRow_2 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	

 



/**
 * [tUniqRow_2 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_1";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_1")==null){
    if(resourceMap.get("writer_tJDBCOutput_1")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_1")).close();
		} catch (java.io.IOException e_tJDBCOutput_1) {
			String errorMessage_tJDBCOutput_1 = "failed to release the resource in tJDBCOutput_1 :" + e_tJDBCOutput_1.getMessage();
			System.err.println(errorMessage_tJDBCOutput_1);
		}
	}
}
 



/**
 * [tJDBCOutput_1 finally ] stop
 */










	
	/**
	 * [tUniqRow_3 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	

 



/**
 * [tUniqRow_3 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_2";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_2")==null){
    if(resourceMap.get("writer_tJDBCOutput_2")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_2")).close();
		} catch (java.io.IOException e_tJDBCOutput_2) {
			String errorMessage_tJDBCOutput_2 = "failed to release the resource in tJDBCOutput_2 :" + e_tJDBCOutput_2.getMessage();
			System.err.println(errorMessage_tJDBCOutput_2);
		}
	}
}
 



/**
 * [tJDBCOutput_2 finally ] stop
 */










	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_4";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_4")==null){
    if(resourceMap.get("writer_tJDBCOutput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_4")).close();
		} catch (java.io.IOException e_tJDBCOutput_4) {
			String errorMessage_tJDBCOutput_4 = "failed to release the resource in tJDBCOutput_4 :" + e_tJDBCOutput_4.getMessage();
			System.err.println(errorMessage_tJDBCOutput_4);
		}
	}
}
 



/**
 * [tJDBCOutput_4 finally ] stop
 */







	
	/**
	 * [tAggregateRow_1_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";

	

 



/**
 * [tAggregateRow_1_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";

	

 



/**
 * [tAggregateRow_1_AGGIN finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_3";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_3")==null){
    if(resourceMap.get("writer_tJDBCOutput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_3")).close();
		} catch (java.io.IOException e_tJDBCOutput_3) {
			String errorMessage_tJDBCOutput_3 = "failed to release the resource in tJDBCOutput_3 :" + e_tJDBCOutput_3.getMessage();
			System.err.println(errorMessage_tJDBCOutput_3);
		}
	}
}
 



/**
 * [tJDBCOutput_3 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 1);
	}
	


public static class out6Struct implements routines.system.IPersistableRow<out6Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Object obj_id;

				public Object getObj_id () {
					return this.obj_id;
				}
				
			    public java.util.Date active_date;

				public java.util.Date getActive_date () {
					return this.active_date;
				}
				
			    public java.util.Date create_date;

				public java.util.Date getCreate_date () {
					return this.create_date;
				}
				
			    public java.util.Date exp_date;

				public java.util.Date getExp_date () {
					return this.exp_date;
				}
				
			    public String obj_status;

				public String getObj_status () {
					return this.obj_status;
				}
				
			    public String obj_type;

				public String getObj_type () {
					return this.obj_type;
				}
				
			    public java.util.Date update_date;

				public java.util.Date getUpdate_date () {
					return this.update_date;
				}
				
			    public Integer optlock;

				public Integer getOptlock () {
					return this.optlock;
				}
				
			    public long country_id;

				public long getCountry_id () {
					return this.country_id;
				}
				
			    public String country_name;

				public String getCountry_name () {
					return this.country_name;
				}
				
			    public long state_id;

				public long getState_id () {
					return this.state_id;
				}
				
			    public String state_name;

				public String getState_name () {
					return this.state_name;
				}
				
			    public long city_id;

				public long getCity_id () {
					return this.city_id;
				}
				
			    public String city_name;

				public String getCity_name () {
					return this.city_name;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				
			    public BigDecimal amount;

				public BigDecimal getAmount () {
					return this.amount;
				}
				
			    public java.util.Date history_date;

				public java.util.Date getHistory_date () {
					return this.history_date;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.obj_id == null) ? 0 : this.obj_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out6Struct other = (out6Struct) obj;
		
						if (this.obj_id == null) {
							if (other.obj_id != null)
								return false;
						
						} else if (!this.obj_id.equals(other.obj_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(out6Struct other) {

		other.obj_id = this.obj_id;
	            other.active_date = this.active_date;
	            other.create_date = this.create_date;
	            other.exp_date = this.exp_date;
	            other.obj_status = this.obj_status;
	            other.obj_type = this.obj_type;
	            other.update_date = this.update_date;
	            other.optlock = this.optlock;
	            other.country_id = this.country_id;
	            other.country_name = this.country_name;
	            other.state_id = this.state_id;
	            other.state_name = this.state_name;
	            other.city_id = this.city_id;
	            other.city_name = this.city_name;
	            other.product = this.product;
	            other.amount = this.amount;
	            other.history_date = this.history_date;
	            
	}

	public void copyKeysDataTo(out6Struct other) {

		other.obj_id = this.obj_id;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
						this.obj_id = (Object) dis.readObject();
					
					this.active_date = readDate(dis);
					
					this.create_date = readDate(dis);
					
					this.exp_date = readDate(dis);
					
					this.obj_status = readString(dis);
					
					this.obj_type = readString(dis);
					
					this.update_date = readDate(dis);
					
						this.optlock = readInteger(dis);
					
			        this.country_id = dis.readLong();
					
					this.country_name = readString(dis);
					
			        this.state_id = dis.readLong();
					
					this.state_name = readString(dis);
					
			        this.city_id = dis.readLong();
					
					this.city_name = readString(dis);
					
					this.product = readString(dis);
					
						this.amount = (BigDecimal) dis.readObject();
					
					this.history_date = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.obj_id);
					
					// java.util.Date
				
						writeDate(this.active_date,dos);
					
					// java.util.Date
				
						writeDate(this.create_date,dos);
					
					// java.util.Date
				
						writeDate(this.exp_date,dos);
					
					// String
				
						writeString(this.obj_status,dos);
					
					// String
				
						writeString(this.obj_type,dos);
					
					// java.util.Date
				
						writeDate(this.update_date,dos);
					
					// Integer
				
						writeInteger(this.optlock,dos);
					
					// long
				
		            	dos.writeLong(this.country_id);
					
					// String
				
						writeString(this.country_name,dos);
					
					// long
				
		            	dos.writeLong(this.state_id);
					
					// String
				
						writeString(this.state_name,dos);
					
					// long
				
		            	dos.writeLong(this.city_id);
					
					// String
				
						writeString(this.city_name,dos);
					
					// String
				
						writeString(this.product,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.amount);
					
					// java.util.Date
				
						writeDate(this.history_date,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("obj_id="+String.valueOf(obj_id));
		sb.append(",active_date="+String.valueOf(active_date));
		sb.append(",create_date="+String.valueOf(create_date));
		sb.append(",exp_date="+String.valueOf(exp_date));
		sb.append(",obj_status="+obj_status);
		sb.append(",obj_type="+obj_type);
		sb.append(",update_date="+String.valueOf(update_date));
		sb.append(",optlock="+String.valueOf(optlock));
		sb.append(",country_id="+String.valueOf(country_id));
		sb.append(",country_name="+country_name);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",state_name="+state_name);
		sb.append(",city_id="+String.valueOf(city_id));
		sb.append(",city_name="+city_name);
		sb.append(",product="+product);
		sb.append(",amount="+String.valueOf(amount));
		sb.append(",history_date="+String.valueOf(history_date));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out6Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.obj_id, other.obj_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_ETL_Load_Monthly_Data = new byte[0];
    static byte[] commonByteArray_ETL_Load_Monthly_Data = new byte[0];

	
			    public Long country_id;

				public Long getCountry_id () {
					return this.country_id;
				}
				
			    public String country_name;

				public String getCountry_name () {
					return this.country_name;
				}
				
			    public Long state_id;

				public Long getState_id () {
					return this.state_id;
				}
				
			    public String state_name;

				public String getState_name () {
					return this.state_name;
				}
				
			    public Long city_id;

				public Long getCity_id () {
					return this.city_id;
				}
				
			    public String city_name;

				public String getCity_name () {
					return this.city_name;
				}
				
			    public String product;

				public String getProduct () {
					return this.product;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_ETL_Load_Monthly_Data.length) {
				if(length < 1024 && commonByteArray_ETL_Load_Monthly_Data.length == 0) {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[1024];
				} else {
   					commonByteArray_ETL_Load_Monthly_Data = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_ETL_Load_Monthly_Data, 0, length);
			strReturn = new String(commonByteArray_ETL_Load_Monthly_Data, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_ETL_Load_Monthly_Data) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.country_id = null;
           				} else {
           			    	this.country_id = dis.readLong();
           				}
					
					this.country_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.state_id = null;
           				} else {
           			    	this.state_id = dis.readLong();
           				}
					
					this.state_name = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.city_id = null;
           				} else {
           			    	this.city_id = dis.readLong();
           				}
					
					this.city_name = readString(dis);
					
					this.product = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.country_id == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.country_id);
		            	}
					
					// String
				
						writeString(this.country_name,dos);
					
					// Long
				
						if(this.state_id == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.state_id);
		            	}
					
					// String
				
						writeString(this.state_name,dos);
					
					// Long
				
						if(this.city_id == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.city_id);
		            	}
					
					// String
				
						writeString(this.city_name,dos);
					
					// String
				
						writeString(this.product,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("country_id="+String.valueOf(country_id));
		sb.append(",country_name="+country_name);
		sb.append(",state_id="+String.valueOf(state_id));
		sb.append(",state_name="+state_name);
		sb.append(",city_id="+String.valueOf(city_id));
		sb.append(",city_name="+city_name);
		sb.append(",product="+product);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tJDBCInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJDBCInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();
out6Struct out6 = new out6Struct();





	
	/**
	 * [tJDBCOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCOutput_6", false);
		start_Hash.put("tJDBCOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tJDBCOutput_6";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out6");
					}
				
		int tos_count_tJDBCOutput_6 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tJDBCOutput_6 =
        new org.talend.components.jdbc.tjdbcoutput.TJDBCOutputDefinition();

org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties props_tJDBCOutput_6 =
        (org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties) def_tJDBCOutput_6.createRuntimeProperties();
 		                    props_tJDBCOutput_6.setValue("dataAction",
 		                        org.talend.components.jdbc.tjdbcoutput.TJDBCOutputProperties.DataAction.INSERT);
 		                    
 		                    props_tJDBCOutput_6.setValue("clearDataInTable",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("dieOnError",
 		                    true);
 		                    
 		                    props_tJDBCOutput_6.setValue("enableFieldOptions",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("debug",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.setValue("useBatch",
 		                    true);
 		                    
 		                    props_tJDBCOutput_6.setValue("batchSize",
 		                    10000);
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCOutput_6.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCOutput_6.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tJDBCOutput_6.tableSelection.setValue("tablename",
 		                    "sales_analyzer.product_group_history");
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_6\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"amount\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"default\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\",\"di.column.talendType\":\"id_BigDecimal\",\"talend.field.pattern\":\"\",\"di.table.label\":\"amount\",\"talend.field.precision\":\"5\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"amount\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATE\",\"talend.field.dbColumnName\":\"history_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"13\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"history_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"tJDBCOutput_6\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_1_fisrt sst_tJDBCOutput_6_1_fisrt = new SchemaSettingTool_tJDBCOutput_6_1_fisrt();
 		                    
 		                    props_tJDBCOutput_6.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCOutput_6\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"amount\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"default\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\",\"di.column.talendType\":\"id_BigDecimal\",\"talend.field.pattern\":\"\",\"di.table.label\":\"amount\",\"talend.field.precision\":\"5\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"amount\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATE\",\"talend.field.dbColumnName\":\"history_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"13\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"history_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"tJDBCOutput_6\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_2_fisrt sst_tJDBCOutput_6_2_fisrt = new SchemaSettingTool_tJDBCOutput_6_2_fisrt();
 		                    
 		                    props_tJDBCOutput_6.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_2_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tJDBCOutput_6_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"UUID\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"obj_id\",\"di.column.talendType\":\"id_Object\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"2147483647\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_id\",\"talend.field.precision\":\"0\",\"talend.field.isKey\":\"true\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"active_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"active_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"active_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"create_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"create_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"create_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"exp_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"exp_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"exp_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_status\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_status\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_status\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"obj_type\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"obj_type\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"obj_type\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"update_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"TIMESTAMP\",\"talend.field.dbColumnName\":\"update_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"29\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"update_date\",\"talend.field.precision\":\"6\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"optlock\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT4\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"optlock\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"10\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"optlock\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":\"long\",\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"19\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"amount\",\"type\":[{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"},\"null\"],\"default\":\"\",\"talend.field.dbType\":\"NUMERIC\",\"talend.field.default\":\"\",\"di.column.talendType\":\"id_BigDecimal\",\"talend.field.pattern\":\"\",\"di.table.label\":\"amount\",\"talend.field.precision\":\"5\",\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"amount\",\"di.column.isNullable\":\"true\",\"talend.field.length\":\"20\",\"di.column.relationshipType\":\"\",\"di.column.originalLength\":\"10\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"history_date\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"DATE\",\"talend.field.dbColumnName\":\"history_date\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"dd-MM-yyyy\",\"talend.field.length\":\"13\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"history_date\",\"talend.field.precision\":\"0\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tJDBCOutput_6\",\"di.table.label\":\"tJDBCOutput_6\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCOutput_6_3_fisrt sst_tJDBCOutput_6_3_fisrt = new SchemaSettingTool_tJDBCOutput_6_3_fisrt();
 		                    
 		                    props_tJDBCOutput_6.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCOutput_6_3_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCOutput_6.additionalColumns.setValue("positions",
 		                    "BEFORE");
 		                    
 		                    props_tJDBCOutput_6.additionalColumns.setValue("referenceColumns",
 		                    "obj_id");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCOutput_6.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCOutput_6 = props_tJDBCOutput_6.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCOutput_6 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCOutput_6 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCOutput_6 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCOutput_6.referencedComponent.setReference(referencedComponentProperties_tJDBCOutput_6);
        }
    }
globalMap.put("tJDBCOutput_6_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCOutput_6);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tJDBCOutput_6= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCOutput_6_MAPPINGS_URL", mappings_url_tJDBCOutput_6);

org.talend.components.api.container.RuntimeContainer container_tJDBCOutput_6 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCOutput_6";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCOutput_6 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCOutput_6 = null;
topology_tJDBCOutput_6 = org.talend.components.api.component.ConnectorTopology.INCOMING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCOutput_6 = def_tJDBCOutput_6.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCOutput_6, topology_tJDBCOutput_6);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCOutput_6 = def_tJDBCOutput_6.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCOutput_6 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCOutput_6.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCOutput_6 = componentRuntime_tJDBCOutput_6.initialize(container_tJDBCOutput_6, props_tJDBCOutput_6);

if (initVr_tJDBCOutput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCOutput_6.getMessage());
}

if(componentRuntime_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCOutput_6 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCOutput_6;
	compDriverInitialization_tJDBCOutput_6.runAtDriver(container_tJDBCOutput_6);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCOutput_6 = null;
if(componentRuntime_tJDBCOutput_6 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCOutput_6 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCOutput_6;
	org.talend.daikon.properties.ValidationResult vr_tJDBCOutput_6 = sourceOrSink_tJDBCOutput_6.validate(container_tJDBCOutput_6);
	if (vr_tJDBCOutput_6.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tJDBCOutput_6.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tJDBCOutput_6 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tJDBCOutput_6;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tJDBCOutput_6 = sink_tJDBCOutput_6.createWriteOperation();
    writeOperation_tJDBCOutput_6.initialize(container_tJDBCOutput_6);
    org.talend.components.api.component.runtime.Writer writer_tJDBCOutput_6 = writeOperation_tJDBCOutput_6.createWriter(container_tJDBCOutput_6);
    writer_tJDBCOutput_6.open("tJDBCOutput_6");

    resourceMap.put("writer_tJDBCOutput_6", writer_tJDBCOutput_6);

    org.talend.components.api.component.Connector c_tJDBCOutput_6 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tJDBCOutput_6.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tJDBCOutput_6 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tJDBCOutput_6 = props_tJDBCOutput_6.getSchema(c_tJDBCOutput_6, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tJDBCOutput_6
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tJDBCOutput_6);
                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCOutput_6 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCOutput_6 = null;


 



/**
 * [tJDBCOutput_6 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
out6Struct out6_tmp = new out6Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tJDBCInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJDBCInput_1", false);
		start_Hash.put("tJDBCInput_1", System.currentTimeMillis());
		
	
	currentComponent="tJDBCInput_1";

	
		int tos_count_tJDBCInput_1 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tJDBCInput_1 =
        new org.talend.components.jdbc.tjdbcinput.TJDBCInputDefinition();

org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties props_tJDBCInput_1 =
        (org.talend.components.jdbc.tjdbcinput.TJDBCInputProperties) def_tJDBCInput_1.createRuntimeProperties();
 		                    props_tJDBCInput_1.setValue("sql",
 		                    "\nselect  country_id,country_name,state_id,state_name,city_id,city_name,product from sales_analyzer.product_group_histor"
+"y where to_char( history_date,'MM-YYYY') ='"+ TalendDate.formatDate("MM-YYYY", TalendDate.addDate(  TalendDate.getFirstDayOfMonth(context.date),-1,"MM"))+"'\nexcept\nselect  country_id,country_name,state_id,state_name,city_id,city_name,product from sales_analyzer.product_grou"
+"p_history where to_char( history_date,'MM-YYYY') ='"+ TalendDate.formatDate("MM-YYYY",  TalendDate.getFirstDayOfMonth(context.date)) +"'\n");
 		                    
 		                    props_tJDBCInput_1.setValue("useCursor",
 		                    false);
 		                    
 		                    props_tJDBCInput_1.setValue("trimStringOrCharColumns",
 		                    false);
 		                    
 		                    props_tJDBCInput_1.setValue("enableDBMapping",
 		                    false);
 		                    
 		                    props_tJDBCInput_1.setValue("usePreparedStatement",
 		                    false);
 		                    
 		                    props_tJDBCInput_1.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tJDBCInput_1.referencedComponent.setValue("componentInstanceId",
 		                    "tJDBCConnection_1");
 		                    
 		                    props_tJDBCInput_1.referencedComponent.setValue("referenceDefinitionName",
 		                    "tJDBCConnection");
 		                    
 		                    props_tJDBCInput_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    class SchemaSettingTool_tJDBCInput_1_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"tJDBCInput_1\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"country_id\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"country_id\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"country_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"country_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"country_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_id\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"state_id\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"state_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"state_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"state_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_id\",\"type\":[\"long\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"INT8\",\"talend.field.default\":\"\",\"talend.field.dbColumnName\":\"city_id\",\"di.column.talendType\":\"id_Long\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"city_name\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"city_name\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"city_name\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"product\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"VARCHAR\",\"talend.field.dbColumnName\":\"product\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"product\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tJDBCInput_1\",\"di.table.label\":\"tJDBCInput_1\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tJDBCInput_1_1_fisrt sst_tJDBCInput_1_1_fisrt = new SchemaSettingTool_tJDBCInput_1_1_fisrt();
 		                    
 		                    props_tJDBCInput_1.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tJDBCInput_1_1_fisrt.getSchemaValue()));
 		                    
 		                    props_tJDBCInput_1.tableSelection.setValue("tablename",
 		                    "sales_analyzer.product_group_history");
 		                    
 		                    java.util.List<Object> tJDBCInput_1_trimTable_trim = new java.util.ArrayList<Object>();
 		                    
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                                tJDBCInput_1_trimTable_trim.add(false);
 		                                
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_1.trimTable).setValue("trim",tJDBCInput_1_trimTable_trim);
 		                    
 		                    java.util.List<Object> tJDBCInput_1_trimTable_columnName = new java.util.ArrayList<Object>();
 		                    
 		                            tJDBCInput_1_trimTable_columnName.add("country_id");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("country_name");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("state_id");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("state_name");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("city_id");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("city_name");
 		                            
 		                            tJDBCInput_1_trimTable_columnName.add("product");
 		                            
 		                    ((org.talend.daikon.properties.Properties)props_tJDBCInput_1.trimTable).setValue("columnName",tJDBCInput_1_trimTable_columnName);
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tJDBCInput_1.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tJDBCInput_1 = props_tJDBCInput_1.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tJDBCInput_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tJDBCInput_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tJDBCInput_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tJDBCInput_1.referencedComponent.setReference(referencedComponentProperties_tJDBCInput_1);
        }
    }
globalMap.put("tJDBCInput_1_COMPONENT_RUNTIME_PROPERTIES", props_tJDBCInput_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tJDBCInput_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tJDBCInput_1_MAPPINGS_URL", mappings_url_tJDBCInput_1);

org.talend.components.api.container.RuntimeContainer container_tJDBCInput_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tJDBCInput_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tJDBCInput_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tJDBCInput_1 = null;
topology_tJDBCInput_1 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tJDBCInput_1 = def_tJDBCInput_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tJDBCInput_1, topology_tJDBCInput_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tJDBCInput_1 = def_tJDBCInput_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tJDBCInput_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tJDBCInput_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tJDBCInput_1 = componentRuntime_tJDBCInput_1.initialize(container_tJDBCInput_1, props_tJDBCInput_1);

if (initVr_tJDBCInput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tJDBCInput_1.getMessage());
}

if(componentRuntime_tJDBCInput_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tJDBCInput_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tJDBCInput_1;
	compDriverInitialization_tJDBCInput_1.runAtDriver(container_tJDBCInput_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tJDBCInput_1 = null;
if(componentRuntime_tJDBCInput_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tJDBCInput_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tJDBCInput_1;
	org.talend.daikon.properties.ValidationResult vr_tJDBCInput_1 = sourceOrSink_tJDBCInput_1.validate(container_tJDBCInput_1);
	if (vr_tJDBCInput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tJDBCInput_1.getMessage());
	}
}

    org.talend.components.api.component.runtime.Source source_tJDBCInput_1 =
            (org.talend.components.api.component.runtime.Source)sourceOrSink_tJDBCInput_1;
    org.talend.components.api.component.runtime.Reader reader_tJDBCInput_1 =
            source_tJDBCInput_1.createReader(container_tJDBCInput_1);
	reader_tJDBCInput_1 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tJDBCInput_1, container_tJDBCInput_1);

        boolean multi_output_is_allowed_tJDBCInput_1 = false;
        org.talend.components.api.component.Connector c_tJDBCInput_1 = null;
        for (org.talend.components.api.component.Connector currentConnector : props_tJDBCInput_1.getAvailableConnectors(null, true)) {
            if (currentConnector.getName().equals("MAIN")) {
                c_tJDBCInput_1 = currentConnector;
            }

            if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                multi_output_is_allowed_tJDBCInput_1 = true;
            }
        }
        org.apache.avro.Schema schema_tJDBCInput_1 = props_tJDBCInput_1.getSchema(c_tJDBCInput_1, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tJDBCInput_1 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tJDBCInput_1, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tJDBCInput_1 = null;

    // Iterate through the incoming data.
    boolean available_tJDBCInput_1 = reader_tJDBCInput_1.start();

    resourceMap.put("reader_tJDBCInput_1", reader_tJDBCInput_1);

    for (; available_tJDBCInput_1; available_tJDBCInput_1 = reader_tJDBCInput_1.advance()) {
    	nb_line_tJDBCInput_1++;

    	
        if (multi_output_is_allowed_tJDBCInput_1) {
                row12 = null;

        }

        try {
            Object data_tJDBCInput_1 = reader_tJDBCInput_1.getCurrent();

                if(multi_output_is_allowed_tJDBCInput_1) {
                    row12 = new row12Struct();
                }

        // Construct the factory once when the first data arrives.
        if (factory_tJDBCInput_1 == null) {
            factory_tJDBCInput_1 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tJDBCInput_1.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tJDBCInput_1.setWrapped(factory_tJDBCInput_1.convertToAvro(data_tJDBCInput_1));
                Object columnValue_0_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(0);
                        row12.country_id = (Long) (columnValue_0_tJDBCInput_1);
                Object columnValue_1_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(1);
                        row12.country_name = (String) (columnValue_1_tJDBCInput_1);
                Object columnValue_2_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(2);
                        row12.state_id = (Long) (columnValue_2_tJDBCInput_1);
                Object columnValue_3_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(3);
                        row12.state_name = (String) (columnValue_3_tJDBCInput_1);
                Object columnValue_4_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(4);
                        row12.city_id = (Long) (columnValue_4_tJDBCInput_1);
                Object columnValue_5_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(5);
                        row12.city_name = (String) (columnValue_5_tJDBCInput_1);
                Object columnValue_6_tJDBCInput_1 = outgoingEnforcer_tJDBCInput_1.get(6);
                        row12.product = (String) (columnValue_6_tJDBCInput_1);
        } catch (org.talend.components.api.exception.DataRejectException e_tJDBCInput_1) {
        	java.util.Map<String,Object> info_tJDBCInput_1 = e_tJDBCInput_1.getRejectInfo();
            	//TODO use a method instead of getting method by the special key "error/errorMessage"
            	Object errorMessage_tJDBCInput_1 = null;
            	if(info_tJDBCInput_1.containsKey("error")){
            		errorMessage_tJDBCInput_1 = info_tJDBCInput_1.get("error");
        		}else if(info_tJDBCInput_1.containsKey("errorMessage")){
            		errorMessage_tJDBCInput_1 = info_tJDBCInput_1.get("errorMessage");
        		}else{
        			errorMessage_tJDBCInput_1 = "Rejected but error message missing";
        		}
        		errorMessage_tJDBCInput_1 = "Row "+ nb_line_tJDBCInput_1 + ": "+errorMessage_tJDBCInput_1;
    			System.err.println(errorMessage_tJDBCInput_1);
            	// If the record is reject, the main line record should put NULL
            	row12 = null;
    }
                java.lang.Iterable<?> outgoingMainRecordsList_tJDBCInput_1 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tJDBCInput_1 = null;


 



/**
 * [tJDBCInput_1 begin ] stop
 */
	
	/**
	 * [tJDBCInput_1 main ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	


 


	tos_count_tJDBCInput_1++;

/**
 * [tJDBCInput_1 main ] stop
 */
	
	/**
	 * [tJDBCInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	


 



/**
 * [tJDBCInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row12");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_6 = false;
		  boolean mainRowRejected_tMap_6 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

out6 = null;


// # Output table : 'out6'
out6_tmp.obj_id = java.util.UUID.randomUUID();
out6_tmp.active_date = TalendDate.getCurrentDate();
out6_tmp.create_date = TalendDate.getCurrentDate();
out6_tmp.exp_date = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss","2999-01-01 00:00:00") ;
out6_tmp.obj_status = "NA";
out6_tmp.obj_type = "NA";
out6_tmp.update_date = TalendDate.getCurrentDate();
out6_tmp.optlock = 0;
out6_tmp.country_id = row12.country_id ;
out6_tmp.country_name = row12.country_name ;
out6_tmp.state_id = row12.state_id ;
out6_tmp.state_name = row12.state_name ;
out6_tmp.city_id = row12.city_id ;
out6_tmp.city_name = row12.city_name ;
out6_tmp.product = row12.product ;
out6_tmp.amount = BigDecimal.ZERO ;
out6_tmp.history_date = TalendDate.getFirstDayOfMonth(context.date) ;
out6 = out6_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "out6"
if(out6 != null) { 



	
	/**
	 * [tJDBCOutput_6 main ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"out6");
					}
					

        incomingEnforcer_tJDBCOutput_6.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("obj_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("obj_id", out6.obj_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("active_date") != null){
                    incomingEnforcer_tJDBCOutput_6.put("active_date", out6.active_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("create_date") != null){
                    incomingEnforcer_tJDBCOutput_6.put("create_date", out6.create_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("exp_date") != null){
                    incomingEnforcer_tJDBCOutput_6.put("exp_date", out6.exp_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("obj_status") != null){
                    incomingEnforcer_tJDBCOutput_6.put("obj_status", out6.obj_status);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("obj_type") != null){
                    incomingEnforcer_tJDBCOutput_6.put("obj_type", out6.obj_type);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("update_date") != null){
                    incomingEnforcer_tJDBCOutput_6.put("update_date", out6.update_date);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("optlock") != null){
                    incomingEnforcer_tJDBCOutput_6.put("optlock", out6.optlock);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("country_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("country_id", out6.country_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("country_name") != null){
                    incomingEnforcer_tJDBCOutput_6.put("country_name", out6.country_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("state_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("state_id", out6.state_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("state_name") != null){
                    incomingEnforcer_tJDBCOutput_6.put("state_name", out6.state_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("city_id") != null){
                    incomingEnforcer_tJDBCOutput_6.put("city_id", out6.city_id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("city_name") != null){
                    incomingEnforcer_tJDBCOutput_6.put("city_name", out6.city_name);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("product") != null){
                    incomingEnforcer_tJDBCOutput_6.put("product", out6.product);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("amount") != null){
                    incomingEnforcer_tJDBCOutput_6.put("amount", out6.amount);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tJDBCOutput_6.getRuntimeSchema().getField("history_date") != null){
                    incomingEnforcer_tJDBCOutput_6.put("history_date", out6.history_date);
                }
        org.apache.avro.generic.IndexedRecord data_tJDBCOutput_6 = incomingEnforcer_tJDBCOutput_6.getCurrentRecord();
        

        writer_tJDBCOutput_6.write(data_tJDBCOutput_6);
        
        nb_line_tJDBCOutput_6++;

 


	tos_count_tJDBCOutput_6++;

/**
 * [tJDBCOutput_6 main ] stop
 */
	
	/**
	 * [tJDBCOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	


 



/**
 * [tJDBCOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tJDBCOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	


 



/**
 * [tJDBCOutput_6 process_data_end ] stop
 */

} // End of branch "out6"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tJDBCInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	


 



/**
 * [tJDBCInput_1 process_data_end ] stop
 */
	
	/**
	 * [tJDBCInput_1 end ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	
// end of generic


resourceMap.put("finish_tJDBCInput_1", Boolean.TRUE);

    } // while
    reader_tJDBCInput_1.close();
    final java.util.Map<String, Object> resultMap_tJDBCInput_1 = reader_tJDBCInput_1.getReturnValues();
if(resultMap_tJDBCInput_1!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCInput_1 : resultMap_tJDBCInput_1.entrySet()) {
		switch(entry_tJDBCInput_1.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", "ERROR_MESSAGE", entry_tJDBCInput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", "NB_LINE", entry_tJDBCInput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", "NB_SUCCESS", entry_tJDBCInput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", "NB_REJECT", entry_tJDBCInput_1.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCInput_1 = new StringBuilder();
            for (int i_tJDBCInput_1 = 0; i_tJDBCInput_1 < entry_tJDBCInput_1.getKey().length(); i_tJDBCInput_1++) {
                char ch_tJDBCInput_1 = entry_tJDBCInput_1.getKey().charAt(i_tJDBCInput_1);
                if(Character.isUpperCase(ch_tJDBCInput_1) && i_tJDBCInput_1> 0) {
                	studio_key_tJDBCInput_1.append('_');
                }
                studio_key_tJDBCInput_1.append(ch_tJDBCInput_1);
            }
			container_tJDBCInput_1.setComponentData("tJDBCInput_1", studio_key_tJDBCInput_1.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCInput_1.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tJDBCInput_1", true);
end_Hash.put("tJDBCInput_1", System.currentTimeMillis());




/**
 * [tJDBCInput_1 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tJDBCOutput_6 end ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
// end of generic


resourceMap.put("finish_tJDBCOutput_6", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tJDBCOutput_6 = (org.talend.components.api.component.runtime.Result)writer_tJDBCOutput_6.close();
    final java.util.Map<String, Object> resultMap_tJDBCOutput_6 = writer_tJDBCOutput_6.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tJDBCOutput_6), container_tJDBCOutput_6);
if(resultMap_tJDBCOutput_6!=null) {
	for(java.util.Map.Entry<String,Object> entry_tJDBCOutput_6 : resultMap_tJDBCOutput_6.entrySet()) {
		switch(entry_tJDBCOutput_6.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "ERROR_MESSAGE", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_LINE", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_SUCCESS", entry_tJDBCOutput_6.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", "NB_REJECT", entry_tJDBCOutput_6.getValue());
			break;
		default :
            StringBuilder studio_key_tJDBCOutput_6 = new StringBuilder();
            for (int i_tJDBCOutput_6 = 0; i_tJDBCOutput_6 < entry_tJDBCOutput_6.getKey().length(); i_tJDBCOutput_6++) {
                char ch_tJDBCOutput_6 = entry_tJDBCOutput_6.getKey().charAt(i_tJDBCOutput_6);
                if(Character.isUpperCase(ch_tJDBCOutput_6) && i_tJDBCOutput_6> 0) {
                	studio_key_tJDBCOutput_6.append('_');
                }
                studio_key_tJDBCOutput_6.append(ch_tJDBCOutput_6);
            }
			container_tJDBCOutput_6.setComponentData("tJDBCOutput_6", studio_key_tJDBCOutput_6.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tJDBCOutput_6.getValue());
			break;
		}
	}
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out6");
			  	}
			  	
 

ok_Hash.put("tJDBCOutput_6", true);
end_Hash.put("tJDBCOutput_6", System.currentTimeMillis());




/**
 * [tJDBCOutput_6 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJDBCInput_1 finally ] start
	 */

	

	
	
	currentComponent="tJDBCInput_1";

	
// finally of generic


if(resourceMap.get("finish_tJDBCInput_1")==null){
    if(resourceMap.get("reader_tJDBCInput_1")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tJDBCInput_1")).close();
		} catch (java.io.IOException e_tJDBCInput_1) {
			String errorMessage_tJDBCInput_1 = "failed to release the resource in tJDBCInput_1 :" + e_tJDBCInput_1.getMessage();
			System.err.println(errorMessage_tJDBCInput_1);
		}
	}
}
 



/**
 * [tJDBCInput_1 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tJDBCOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tJDBCOutput_6";

	
// finally of generic


if(resourceMap.get("finish_tJDBCOutput_6")==null){
    if(resourceMap.get("writer_tJDBCOutput_6")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tJDBCOutput_6")).close();
		} catch (java.io.IOException e_tJDBCOutput_6) {
			String errorMessage_tJDBCOutput_6 = "failed to release the resource in tJDBCOutput_6 :" + e_tJDBCOutput_6.getMessage();
			System.err.println(errorMessage_tJDBCOutput_6);
		}
	}
}
 



/**
 * [tJDBCOutput_6 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJDBCInput_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Development";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    private PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    private final org.talend.components.common.runtime.SharedConnectionsPool connectionPool = new org.talend.components.common.runtime.SharedConnectionsPool() {
    	public java.sql.Connection getDBConnection(String dbDriver, String url, String userName, String password, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, userName, password, dbConnectionName);
        }

    	public java.sql.Connection getDBConnection(String dbDriver, String url, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, dbConnectionName);
        }
    };
    
    private static final String GLOBAL_CONNECTION_POOL_KEY = "GLOBAL_CONNECTION_POOL";
    
    {
    	globalMap.put(GLOBAL_CONNECTION_POOL_KEY, connectionPool);
    }

    public static void main(String[] args){
        final Load_Monthly_Data Load_Monthly_DataClass = new Load_Monthly_Data();

        int exitCode = Load_Monthly_DataClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("monitoring"));

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }

        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = Load_Monthly_Data.class.getClassLoader().getResourceAsStream("etl/load_monthly_data_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = Load_Monthly_Data.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                //defaultProps is in order to keep the original context value
                if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                }
                
                inContext.close();
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("date", "id_Date");
                        try{
                            String context_date_value = context.getProperty("date");
                            if (context_date_value == null){
                                context_date_value = "";
                            }
                            int context_date_pos = context_date_value.indexOf(";");
                            String context_date_pattern =  "yyyy-MM-dd HH:mm:ss";
                            if(context_date_pos > -1){
                                context_date_pattern = context_date_value.substring(0, context_date_pos);
                                context_date_value = context_date_value.substring(context_date_pos + 1);
                            }

                            context.date=(java.util.Date)(new java.text.SimpleDateFormat(context_date_pattern).parse(context_date_value));

                        } catch(ParseException e) {
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "date", e.getMessage()));
                            context.date=null;
                        }
                        context.setContextType("inputDirectory", "id_String");
                            context.inputDirectory=(String) context.getProperty("inputDirectory");
                        context.setContextType("outputDirectory", "id_String");
                            context.outputDirectory=(String) context.getProperty("outputDirectory");
                        context.setContextType("session", "id_String");
                            context.session=(String) context.getProperty("session");
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("date")) {
                context.date = (java.util.Date) parentContextMap.get("date");
            }if (parentContextMap.containsKey("inputDirectory")) {
                context.inputDirectory = (String) parentContextMap.get("inputDirectory");
            }if (parentContextMap.containsKey("outputDirectory")) {
                context.outputDirectory = (String) parentContextMap.get("outputDirectory");
            }if (parentContextMap.containsKey("session")) {
                context.session = (String) parentContextMap.get("session");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));

if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();




this.globalResumeTicket = true;//to run tPreJob




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tJDBCConnection_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tJDBCConnection_1) {
globalMap.put("tJDBCConnection_1_SUBPROCESS_STATE", -1);

e_tJDBCConnection_1.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : Load_Monthly_Data");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;
    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tJDBCConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tJDBCConnection_1", globalMap.get("conn_tJDBCConnection_1"));







        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--monitoring") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     520616 characters generated by Talend Open Studio for Data Integration 
 *     on the February 8, 2020 at 3:21:34 p.m. EST
 ************************************************************************************************/