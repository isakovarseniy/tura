[%
import "platform:/plugin/org.tura.metamodel.generation/template/commons/typeElementUtil.eol";
%]


[% 
 @template
operation  maven_builder(hash) {
    
    var recipe = hash.get("recipe");
    var ingredient =  hash.get("ingredient");
    var component = hash.get("component");
    var model_mapper = hash.get("model_mapper");
    var alltypes = hash.get("alltypes");

    var path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId;  
    var util = new Native('org.tura.metamodel.commons.Util');
    util.populateTechnologies(hash,model_mapper);

     var builder : Template   = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/Services/EJB-WS/MavenClientProxyPomBuilder.egl",hash,TemplateFactory);
     var f = new Native("org.eclipse.epsilon.egl.formatter.language.XmlFormatter"); 
     builder.setFormatter(f);

     var buffer = builder.process();
     util.saveFile( path, "pom.xml",buffer); 
 
}

 @template
operation maven_build_runner(hash){

    var util = new Native('org.tura.metamodel.commons.Util');
     
    var configuration = hash.get("configuration");
    var component = hash.get("component");
    var path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId;  
    var model_mapper = hash.get("model_mapper");
 %]
[%=mavenBuilder_mavenCleanInstall(configuration, util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId,hash)%]
[%    

    util.saveArtifactExecution( model_mapper,  os_shell_executor()+" "+path+"/"+"builder."+os_batch_extension());
    util.saveFile( path, "builder."+os_batch_extension(),out.toString()); 
}

 @template
operation  ant_builder(hash) {
    
 
}

 @template
operation ant_build_runner(hash){

}

%]