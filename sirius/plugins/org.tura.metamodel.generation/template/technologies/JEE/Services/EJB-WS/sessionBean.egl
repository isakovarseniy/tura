[%
 import "platform:/plugin/org.tura.metamodel.generation/template/commons/typeElementUtil.eol";
 import "platform:/plugin/org.tura.metamodel.generation/template/commons/serviceMethods.egl";
 var util = new Native('org.tura.metamodel.commons.Util');
%]
package [%=type.~package%];  

@javax.ejb.Stateless
@javax.jws.WebService(endpointInterface = "[%=type.~fullName%]",serviceName="[%=type.~class%]Remote")
public class  [%=type.~class%]  extends org.tura.platform.commons.jpa.TuraJPAEntityService  implements   [%=type.~fullName%]Remote, [%=type.~fullName%]Local {

    @javax.persistence.PersistenceContext(unitName="[%=util.mergeAndCapitalize(component.name)%]")
    private javax.persistence.EntityManager em;

[%for ( method in type.operations){ %]    
 [%=method.generate(recipe,ingredient,typeGeneric)%]
[%}%]
}


[%@template
operation domain::Operation create() { %]
throws javax.ejb.EJBException
    {
    	try{
    	       this.setEntityManager(em);
        	   return ([%=self.returnValue.typeRef.~fullName%])this.create("[%=self.returnValue.typeRef.~fullName%]");
    		
    	}catch (Exception e )
    	{
			throw new javax.ejb.EJBException(e);
    	}
    }	
[% } 

 @template
operation domain::Operation insert() { %]
throws javax.ejb.EJBException
    {
    	try{
        	this.setEntityManager(em);
            this.insert(obj);
    	}catch (RuntimeException e )
    	{
			throw new javax.ejb.EJBException(e);
    	}
	}	
[% } 

 @template
operation domain::Operation update() { %]
throws javax.ejb.EJBException
   {
    	try{
        	this.setEntityManager(em);
        	this.update(obj);
    	}catch (RuntimeException e )
    	{
			throw new javax.ejb.EJBException(e);
    	}
	}	
[% } 

 @template
operation domain::Operation remove() { %]
throws javax.ejb.EJBException
  {
    	try{
        	this.setEntityManager(em);
            this.remove(obj);
    	}catch (RuntimeException e )
    	{
			throw new javax.ejb.EJBException(e);
    	}
   }	
[% } 

 @template
operation domain::Operation find(generic:domain::Type) { %]
throws javax.ejb.EJBException
  {
	 try{
        	this.setEntityManager(em);
	      [%=self.returnValue.typeRef.~fullName%]  ls =  ([%=self.returnValue.typeRef.~fullName%] )this.find(search, startIndex,endIndex, "[%=generic.~fullName%]" ); 
         return ls; 
		}catch(Exception e){
			throw new javax.ejb.EJBException(e);
		}
	}	
[% } %]