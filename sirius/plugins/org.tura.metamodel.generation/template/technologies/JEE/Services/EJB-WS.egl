[%
 import "platform:/plugin/org.tura.metamodel.generation/template/commons/categorizedUtil.eol";
 import "platform:/plugin/org.tura.metamodel.generation/template/commons/typeElementUtil.eol";
%]

[% @template
operation  service_generation(hash) {

    var util = new Native('org.tura.metamodel.commons.Util');
    var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 
    var typeRemote;
    var typeLocal;
    var typeGeneric;
    var typeExtens;
        
    var type =  hash.get("type");
    var recipe = hash.get("recipe");
    var ingredient =  hash.get("ingredient");
    var  component = hash.get("component");
    var  model_mapper = hash.get("model_mapper");
 
     var path = component.getComponentRoot+"/"+component.getArtifactId()+"/"+component.getArtifactId()+"-ejb/src/main/java/";  
    
    util.populateTechnologies(hash,model_mapper);

    for (  extension in type.getExtension() ){
        if (extension.findClassifier("Service","Service","Generics")){
                 typeGeneric = extension.getTarget();
                 typeGeneric.mappingType2Java(recipe,ingredient);
        }
    }
    
    hash.put("typeGeneric",typeGeneric);

    var sessionBean : Template = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/Services/EJB-WS/sessionBean.egl",hash,TemplateFactory);
    sessionBean.setFormatter(f);
    var buffer = sessionBean.process();
    util.saveFile( path+type.~package.replaceAll("\\.","\\/"), type.~class + ".java",buffer);   

    var localinterface : Template = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/Services/EJB-WS/localInterface.egl",hash,TemplateFactory);
    localinterface.setFormatter(f);
    var buffer = localinterface.process();
    util.saveFile( path+type.~package.replaceAll("\\.","\\/"), type.~class + "Local.java",buffer);   


    var remoteinterface : Template = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/Services/EJB-WS/remoteinterface.egl",hash,TemplateFactory);
    remoteinterface.setFormatter(f);
    var buffer = remoteinterface.process();
    util.saveFile( path+type.~package.replaceAll("\\.","\\/"), type.~class + "Remote.java",buffer);   

  }
%]
