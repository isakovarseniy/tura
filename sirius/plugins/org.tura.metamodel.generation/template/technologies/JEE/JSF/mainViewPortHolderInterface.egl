[%

     var util = new Native('org.tura.metamodel.commons.Util');
     var forms = util.runQuery(model_mapper,"Query form",model_mapper);
     var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 

    if (forms.size() <> 0 ){
       for (form in forms){

         var hash = new Native("java.util.HashMap"); 
   
         var javaPath = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/"+component.basePackage.replaceAll("\\.","\\/")+"/";  
         var resourcePath =  util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/resources/";
         var webapp =  util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/webapp/";
         var uipackage = form.eContainer();

         hash.put("recipe",recipe);
         hash.put("ingredient",ingredient);
         hash.put("component",component);
         hash.put("model_mapper",model_mapper);
         hash.put("javaPath",javaPath);
         hash.put("resourcePath",resourcePath);
         hash.put("webapp",webapp);
         hash.put("form",form);
         hash.put("configuration",configuration);
         hash.put("uipackage",uipackage);
         
         var allPorts = new Native('java.util.ArrayList'); 
         
         for (canvas in form.view.canvases){
              if (not canvas.isKindOf(form::TabCanvas) ){
                  var ports = canvas.viewElement->select(p|p.isKindOf(form::ViewPort)); 
                   allPorts.addAll(ports);
              }
        }         
         
         hash.put("allPorts",allPorts);

         if (allPorts.size() <> 0 ){
            var viewportclass : Template = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/JSF/viewPortHolderInterface.egl",hash,TemplateFactory);
            viewportclass.setFormatter(f);
            var buffer = viewportclass.process();
            util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/viewmodel/"  , "IViewPortHolder.java",buffer);
         }     
       }
     }  

%]