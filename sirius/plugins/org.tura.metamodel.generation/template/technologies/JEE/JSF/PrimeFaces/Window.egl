[%@template
operation  form::Window draw(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     var model_mapper = hash.get('model_mapper');

     if (self.findClassifier(util.getHint(model_mapper,"jsf.template"))){
        self.drawAsGenericTemplate(hash);
     }else{
        self.drawAsComponent(hash);
     }
     
}


@template
operation form::Window addStylesAndTriggers(hash){
     var form = hash.get("form");
     var recipe = hash.get("recipe");
     var ingredient = hash.get("ingredient");


     var scriptTriggers = hash.get("scriptTriggers");
     var urlHash = new Native('java.util.HashMap');
     for (trigger in scriptTriggers){
         var action = trigger.expression.get( trigger.expression.size()-1);
         var method = action.objRef;
         var type = null;
         if (method <> null)
             type = action.objRef.eContainer();
      
           if (type <> null  and  type.~url.isDefined()){  
              urlHash.put(type.~url,type.~url);
       }
     }
        for (url in urlHash.values()){
%]
      <h:outputScript library="js" name="[%=url%]" targer="head"></h:outputScript>
[% 
 }    
%]

[%

        var app = form.eContainer().eContainer().eContainer();
        if (app.getApplicationStyle() <> null){
            for (pkg in app.getApplicationStyle().styleLibraries ){
               if (pkg.libraries <> null ){
                 for (lib in pkg.libraries ){
                 lib.mappingStyleLibrary2CSS(recipe, ingredient );
                 if (lib.~url.isDefined()){
              %]<h:outputStylesheet library="css" name="[%=lib.~url%]" targer="head"/>[%
                  }
                 }
               }
            }
        }
}

%]