[%@template
operation form::Column draw(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     util.traceIfDebug("UI element","Column start: "+self.uid);     
%]
     [%=self.generateBody(hash)%]     
[%
     util.traceIfDebug("UI element","Column end: "+self.uid);     
}

@template
operation form::Column generateBody(hash){
     var hints = new Native('java.util.HashMap');
     var util = new Native('org.tura.metamodel.commons.Util');
     var model_mapper = hash.get('model_mapper');
     
     var sortBy="";
     if ( not self.sortable.toString().equals("Not") ){
         if ( self.element <> null  and self.element.isKindOf(form::InputElement) )   {
               sortBy = "sortBy = \""+ self.element.expFunction(hash) +"\"";
         }
     }
     var priority = "";
     if ( self.priority <> 0  ){
         priority = "priority = \""+ self.priority +"\"";
     }

     var title = buildExpression(self.multiLangLabel,hints,hash);
     if (title <> "" )
        title = "headerText=\"" + title + "\"";
     else
        title="";   
        
%]
           <p:column [%=title%]   [%=sortBy%]   [%=priority%]  [%=self.styleAttributes(hash)%]>
[%      if ( self.element <> null and "tree".equals(hash.get("context") ))  {%]
                   [%=self.treecontext(hash)%]
                   
[%  }
     if ( self.element <> null and  "table".equals(hash.get("context") ))  {  %]
                   [%=self.tablecontext(hash)%]
[% }
     if ( self.element = null  and  "table".equals(hash.get("context"))  and self.findClassifier(util.getHint(model_mapper,"table.edit.column"))   )  {  %]
                  <p:rowEditor />
[% }%]        
            </p:column>   
[%
}

@template
operation form::Column treecontext(hash){
%]
             [%=self.element.draw(hash)%]
[%                    
}

@template
operation form::Column tablecontext(hash){
%]
                    [%=self.element.draw(hash)%]
[%                    
}
%]