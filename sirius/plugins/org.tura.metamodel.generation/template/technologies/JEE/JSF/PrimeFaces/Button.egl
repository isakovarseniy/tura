[%@template
operation form::Button draw(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     util.traceIfDebug("UI element","Button start: "+self.uid);     
     
     var recipe = hash.get("recipe");
     var ingredient = hash.get("ingredient");
     var form = hash.get("form");
     var uipackage = hash.get("uipackage");
     var hints = new Native('java.util.HashMap');
     var model_mapper = hash.get('model_mapper');
     
     var title =  " value=\"" + buildExpression(self.multiLangLabel,hints,hash) + "\" ";  
     var icon = " icon=\""+buildExpression(self.icon,hints,hash)+"\" ";
 
     var immediate = "";
     var eventListener="";
     if (self.findClassifier(util.getHint(model_mapper,"immediate"))){
        immediate = " immediate=\"true\"";
     }

 %]
<p:commandButton  [%=immediate%]  [%=title%] [%=self.mkUIDBinding()%] [%=self.uiElementAttributes(hash)%][%  
       var expression = constructExpression(self,'trigger.onclick',hints, hash);
       if (expression <> ""){
       %] onclick="[%=expression%]"[%
       }
       expression = constructExpression(self,'oncomplete',hints, hash);
       if (expression <> ""){
       %] oncomplete="[%=expression%]"[%
       }
       for ( field in  self.fields){
          if (field.classifiers.size() <> 0 )
            continue;
           hints.put("actionListener",true); 
           %] actionListener="[%=buildExpression(field,hints,hash)%]"[%
           hints.remove("actionListener"); 
      }
%] [%=icon%]    [%=self.refreshArias()%] >
[%
        for (param in self.findAllClassifiers(util.getHint(model_mapper,"parameter"))){%]
             [%=param.details%]        
        [%
        }
%]
</p:commandButton>
 [%
     util.traceIfDebug("UI element","Button end: "+self.uid);     
 
}
%]