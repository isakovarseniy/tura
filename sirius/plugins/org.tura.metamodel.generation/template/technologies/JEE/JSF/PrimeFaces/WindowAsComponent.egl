[%@template
operation  form::Window drawAsComponent(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     var webapp = hash.get("webapp");   
     var form = hash.get("form");   
     var uipackage = hash.get("uipackage");
     var model_mapper = hash.get('model_mapper');
     
     util.traceIfDebug("UI element","Window start: "+self.name);     
     
     
     
%]
     [%=self.generateComponentBody(hash)%]     
[%
     var x = new Native("org.eclipse.epsilon.egl.formatter.language.XmlFormatter"); 
     out.formatWith(x);
     util.saveFile( webapp+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase(),  util.mergeAndUnCapitalize(self.name)+".xhtml",out.toString());   

     util.traceIfDebug("UI element","Window end: "+self.name);     
     
}

@template
operation form::Window generateComponentBody(hash){

     var form = hash.get("form");   
     var recipe =  hash.get("recipe");
     var ingredient  = hash.get("ingredient");
     var hints = new Native('java.util.HashMap');
     var model_mapper = hash.get('model_mapper');
     var util = new Native('org.tura.metamodel.commons.Util');
     var defaultName = "content";

     var nosection = false;
     if (self.findClassifier(util.getHint(model_mapper,"jsf.template.nosection"))){
       nosection = true;
     }

      
     var title = buildExpression(self.multiLangLabel,hints,hash);
        
%]
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
[%
        for (namespace in self.findAllClassifiers(util.getHint(model_mapper,"additional.namespace"))){%]
             [%=namespace.details%]        
        [%
        }

	   hints.put("relativePath",true); 
	   var expression = constructExpression(self,'jsf.template',hints, hash);
	   hints.remove("relativePath"); 
       if (expression <> ""){
       %] template="[%=expression%]"[%
       }
%]>
                
[%
                var first = true;
                for (element in self.viewElement.sortBy(q|q.order)){
                  var  list = self.findAllClassifiers(util.getHint(model_mapper,"jsf.composition.section"));
                  var name =defaultName;
                  if ( list.size() <> 0 ){
                     name = list.get(0).details;
                  }
                  var newSection =   not first and  not defaultName.equals(name);
                  
                  if (first and not nosection){
                  %]
                  <ui:define name="[%=name%]">
                  [%
                  first = false;
                  }
                  
                  if ( newSection and not nosection  ){
                  %]
                  </ui:define>
                  <ui:define name="[%=name%]">
                  [%
                  }
                  %]
                  <h:form>
                    [%=element.draw(hash)%]
                 </h:form>
[%
                }  
%]                    
                [%=self.addStylesAndTriggers(hash)%]
                
[%if ( not nosection ){%]
             </ui:define>
[%}%]
</ui:composition>
[%
}
%]