[%@template
operation  form::OverlayCanvas draw(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     var webapp = hash.get("webapp");   
     var form = hash.get("form");   
     var uipackage = hash.get("uipackage");
     var model_mapper = hash.get('model_mapper');
     util.traceIfDebug("UI element","OverlayCanvas start: "+self.name);     
     
     
     var widvar = "";
      if (self.findClassifier(util.getHint(model_mapper,"widget.var"))){
         widvar = " widgetVar=\""+ self.~hintDetails +"\"  ";
      }
     var modal =" modal=\""+ self.modal+ "\"";

     var triggers = self.sourceTarget->select(r|r.group == 1)->sortBy(q|q.group);
     
     
     
%]
     <p:overlayPanel xmlns="http://www.w3.org/1999/xhtml"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:p="http://primefaces.org/ui" dynamic="true"  [%=modal%] [%=widvar%]  [%=self.mkUIDBinding()%] [%=self.styleAttributes(hash)%]  for="[%=refreshAriasGroup(triggers, self)%]" >
     [%=self.generateBody(hash)%]     
     </p:overlayPanel>
[%
     var x = new Native("org.eclipse.epsilon.egl.formatter.language.XmlFormatter"); 
     out.formatWith(x);
     util.saveFile( webapp+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase(),  util.mergeAndUnCapitalize(self.name)+".xhtml",out.toString());   
     util.traceIfDebug("UI element","OverlayCanvas end: "+self.name);     
     
}


@template
operation form::OverlayCanvas generateBody(hash){
                for (element in self.viewElement.sortBy(q|q.order)){
%]                
                    [%=element.draw(hash)%]
[%
                }  
}
%]
