[%@template
operation form::BlockUI draw(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     util.traceIfDebug("UI element","BlockUI start: "+self.uid);     
     
     var recipe = hash.get("recipe");
     var ingredient = hash.get("ingredient");
     var form = hash.get("form");
     var uipackage = hash.get("uipackage");
     var hints = new Native('java.util.HashMap');
     var model_mapper = hash.get('model_mapper');
     
     var block = self.sourceTarget->select(r|r.group > 1);
     var triggers = self.sourceTarget->select(r|r.group == 1)->sortBy(q|q.group);
     
     %]
            <p:blockUI block="[%=refreshAriasGroup(block, self)%]" trigger="[%=refreshAriasGroup(triggers, self)%]" >
            [%=self.generateBody(hash)%]     
            </p:blockUI>
     [%
     

     util.traceIfDebug("UI element","BlockUI end: "+self.uid);     
 
}

@template
operation form::BlockUI  generateBody(hash){
                for (element in self.children.sortBy(q|q.order)){
%]                
                    [%=element.draw(hash)%]
[%
                }  
}
%]

