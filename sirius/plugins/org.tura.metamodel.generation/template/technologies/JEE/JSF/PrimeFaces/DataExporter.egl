[%@template
operation form::DataExporter draw(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     var hints = new Native('java.util.HashMap');
     
     var value;
     util.traceIfDebug("UI element","DataExporter start: "+self.uid);     

     var block = self.sourceTarget->select(r|r.group > 1);
     var triggers = self.sourceTarget->select(r|r.group == 1)->sortBy(q|q.group);

     
     if (hash.get("context") == null )
         value = buildExpression(util.createArtificialContextValue(self.sourcePointer,self.sourcePointer.findTreeRoot(),self.valuePointer),hints,hash);
     else{
          if (hash.get("context").equals("table") )
               value =  "#{row[2]."+self.valuePointer.name+"}";  
          if (hash.get("context").equals("tree") )
               value =  "#{row[1]."+self.valuePointer.name+"}";
    }
 %]
 
 
 <h:commandLink>
     <p:graphicImage library="images" [%=self.mkUIDBinding()%] [%=self.uiElementAttributes(hash)%] name="[%=value%]" />
     <p:dataExporter type="[%=self.type%]" target="[%=refreshAriasGroup(triggers, self)%]" fileName="[%=self.type%]" pageOnly="true"/>
 </h:commandLink>
 
[%
     util.traceIfDebug("UI element","DataExporter end: "+self.uid);     
}
%]