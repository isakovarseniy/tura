<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "platform:/plugin/org.tura.metamodel.generation/template/commons/typeElementUtil.eol";
import "platform:/plugin/org.tura.metamodel.generation/template/commons/categorizedUtil.eol";
import "platform:/plugin/org.tura.metamodel.generation/template/commons/assosiation.eol";
import "platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/JPA/Repository/repositoryCommon.egl";


 ${percent}${end}
 
 

[%
      var util = new Native('org.tura.metamodel.commons.Util');
%]
     package [%=t2view.get(masterType).get("package")%].commands;  
      
      
      public class Add[%=t2view.get(detailType).get("class")%]2[%=t2view.get(masterType).get("class")%]On[%=util.mergeAndCapitalize(property)%]Command implements org.tura.platform.repository.core.Command {
         javax.persistence.EntityManager em;
	     public void setEntityManager(javax.persistence.EntityManager em){
	           this.em=em;
	     }
        public Object execute( Object obj ){
           [%=t2view.get(masterType).get("package")%].Add[%=t2view.get(detailType).get("class")%]2[%=t2view.get(masterType).get("class")%]On[%=util.mergeAndCapitalize(property)%]Data data = ([%=t2view.get(masterType).get("package")%].Add[%=t2view.get(detailType).get("class")%]2[%=t2view.get(masterType).get("class")%]On[%=util.mergeAndCapitalize(property)%]Data) obj;
           [%=PK(masterType,"pk","data",t2model.get(masterType).get("fullName"),recipe,ingredient)%]
           [%=t2model.get(masterType).get("fullName")%] jpa = em.find([%=t2model.get(masterType).get("fullName")%].class,pk);
           [%=t2view.get(masterType).get("package")%].commands.Load[%=t2view.get(masterType).get("class")%]Command serializer = new [%=t2view.get(masterType).get("package")%].commands.Load[%=t2view.get(masterType).get("class")%]Command();

           java.util.HashMap<String, Object> context = new java.util.HashMap<String, Object> ();
           java.util.HashMap<String, org.tura.platform.repository.core.Rule> rules = new java.util.HashMap<String, org.tura.platform.repository.core.Rule> ();

           serializer.setEntityManager(em);
           [%=t2view.get(masterType).get("fullName")%]  [%=util.mergeAndUnCapitalize(t2view.get(masterType).get("class"))%] = serializer.load(jpa,context,rules);
           for (org.tura.platform.repository.core.Rule r:rules.values()){
              r.execute();
           }

           [%=util.mergeAndUnCapitalize(t2view.get(masterType).get("class"))%].setOperation("C");
           
           
      [%
             var suffix = "";
             if (rel.source == rel.target){
                 suffix="Detail";
             }
             var source=util.mergeAndUnCapitalize(t2view.get(masterType).get("class"));
             var target = "data.get" +t2view.get(detailType).get("class")+suffix+"()";
             if (rel.source == detailType){
                target=util.mergeAndUnCapitalize(t2view.get(masterType).get("class"));
                source = "data.get" +t2view.get(detailType).get("class")+suffix+"()";
             }
             var hash = rel.sourceSideNamesCalculation();

	  	     switch  (rel.type.toString()){
	         case "One2One" : %]      [%=source%].set[%=hash.get("sourceMethodName")%]([%=target%]);[%
	         case "One2Many" : %]    [%=source%].get[%=hash.get("sourceMethodName")%]().add([%=target%]);[%
	         case "Many2Many" : %]  [%=source%].get[%=hash.get("sourceMethodName")%]().add([%=target%]);[%
	         }           
	         

            var hash = rel.targetSideNamesCalculation();
	         
	         
	  	     switch  (rel.type.toString()){
	         case "One2One" : %]       [%=target%].set[%=hash.get("targetMethodName")%]([%=source%]);[%
	         case "One2Many" : %]      [%=target%].set[%=hash.get("targetMethodName")%]([%=source%]);[%
	         case "Many2Many" : %]     [%=target%].get[%=hash.get("targetMethodName")%]().add([%=source%]);[%
	         }                
      %]
           
           [%=t2view.get(masterType).get("package")%].commands.InternalAdd[%=t2view.get(detailType).get("class")%]Command cmd = new [%=t2view.get(masterType).get("package")%].commands.InternalAdd[%=t2view.get(detailType).get("class")%]Command();
           cmd.setEntityManager(em);
           rules = new java.util.HashMap<String, org.tura.platform.repository.core.Rule> ();
           cmd.insert(data.get[%=t2view.get(detailType).get("class")%][%=suffix%](),rules);
           for (org.tura.platform.repository.core.Rule r:rules.values()){
              r.execute();
           }
           return null;
        }
        
      }

