<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "platform:/plugin/org.tura.metamodel.generation/template/commons/typeElementUtil.eol";
import "platform:/plugin/org.tura.metamodel.generation/template/commons/categorizedUtil.eol";
import "platform:/plugin/org.tura.metamodel.generation/template/commons/assosiation.eol";

 ${percent}${end}
 
 [%
 
     var util = new Native('org.tura.metamodel.commons.Util');
      var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 
     var assosiations = type::Assosiation.allInstances()->select(t|t.target.uid = type.uid);
     var topObject = true;
     for (rel in assosiations){
        for (cmdtype in Sequence{"Add","Remove"}){
        
	        var hash = rel.findTypeOfAssosiation(model_mapper);
		    hash.put("recipe",recipe);
		    hash.put("ingredient",ingredient);
		    hash.put("component",component);
		    hash.put("model_mapper",model_mapper);
		    hash.put("cmdtype",cmdtype);
		    hash.put("rel",rel);
	        if (cmdtype == "Add"){
	           hash.put("hyphen","2");
	        }else{
	           hash.put("hyphen","From");
	        }
		    
	        var masterType =   hash.get("masterType");
	        var detailType = hash.get("detailType");
	        var property =  hash.get("property");
            var containment = hash.get("containment");
		    
	
	        if (detailType.uid == type.uid  and not hash.get("noAssosiation") and  rel.type.toString() <> "Many2Many"  and containment){
	           topObject = false;
	        }
	        
		   var cmd : Template =   util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/RepositoryProxy/assosiationtObjectCommand.egl",hash,TemplateFactory);
	       cmd.setFormatter(f);
	       var buffer = cmd.process();
	       util.saveFile( path+type.~package.replaceAll("\\.","\\/")+"/proxy/commands", cmdtype+detailType.~class +hash.get("hyphen")+masterType.~class+ "On" + util.mergeAndCapitalize(property)+"Command.java",buffer);   
				     
	     }
     }
     if (topObject  ){
	        for (cmdtype in Sequence{"Add","Remove"}){
	     
		        var hash = new Native('java.util.HashMap');
		     
			    hash.put("masterType",type);
			    hash.put("recipe",recipe);
			    hash.put("ingredient",ingredient);
			    hash.put("component",component);
			    hash.put("model_mapper",model_mapper);
		        hash.put("cmdtype",cmdtype);
		        
		        
			    var cmd : Template =   util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/RepositoryProxy/topObjectCommand.egl",hash,TemplateFactory);
		        cmd.setFormatter(f);
		        var buffer = cmd.process();
		        util.saveFile( path+type.~package.replaceAll("\\.","\\/")+"/proxy/commands", cmdtype+"Top"+type.~class+ "Command.java",buffer);   
	
	     }
     }
 
%]