<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "platform:/plugin/org.tura.metamodel.generation/template/commons/typeElementUtil.eol";
import "platform:/plugin/org.tura.metamodel.generation/template/commons/categorizedUtil.eol";
import "platform:/plugin/org.tura.metamodel.generation/template/commons/assosiation.eol";

 ${percent}${end}
 
 [%
     var util = new Native('org.tura.metamodel.commons.Util');
     var alltypes = new Native('java.util.ArrayList');
     var hash = new Native('java.util.HashMap');
     var templateStore = new Native('java.util.HashMap');
      var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 
     var pkg = new Native("java.util.HashMap"); 



     var types = util.runQuery(model_mapper,"Query model classes",model_mapper);
     var nsHash = new Native("java.util.HashMap"); 
 
      if (types <> null and types.size <> 0 ){
        var typeCollection = new Native("java.util.ArrayList"); 
	    for (type in types){
	       type.collectType(typeCollection,model_mapper,null,null,null);
	    }
	    
      for(type in typeCollection){
         type.mappingType2Java(recipe,ingredient);
	     pkg.put(type.~package,type.~artifactId);
         
      }   
	    
 
	  var path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/";  
      for( type in types  ){

       if (type.~primaryKey.size()==0){
          continue;
       }

	    hash.put("type",type);
	    hash.put("recipe",recipe);
	    hash.put("ingredient",ingredient);
	    hash.put("component",component);
	    hash.put("model_mapper",model_mapper);
	    hash.put("path",path);
	    hash.put("templateStore",templateStore);
		    
	    util.populateTechnologies(hash,model_mapper);
		
  		var cmd : Template =   util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/RepositoryProxy/updatePropertyCommand.egl",hash,TemplateFactory,templateStore);
	    cmd.setFormatter(f);
	    var buffer = cmd.process();
        util.saveFile( path+type.~package.replaceAll("\\.","\\/")+"/proxy/commands", "Update"+type.~class + "Command.java",buffer);   
      
      
	   var cmd : Template = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/RepositoryProxy/assosiationProcessingCommand.egl",hash,TemplateFactory,templateStore);
	   cmd.process();
      
      
      }
	 var path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId();  
      
    hash.put("path",path);
    hash.put("pkg",pkg);
    hash.put("alltypes",typeCollection);
     
      var candy : Template = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/RepositoryProxy/jsweetAdapter.egl",hash,TemplateFactory);
     candy.process();
    
     candy  = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/RepositoryProxy/jsweetconfig.egl",hash,TemplateFactory);
     candy.process();
    
    
     candy  = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/RepositoryProxy/header_js.egl",hash,TemplateFactory);
     candy.process();
    
    
     candy  = util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JEE/RepositoryProxy/candymetadata.egl",hash,TemplateFactory);
     candy.process();
       
   }
%]