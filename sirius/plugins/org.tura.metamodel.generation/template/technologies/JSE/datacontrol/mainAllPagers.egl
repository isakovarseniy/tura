<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "platform:/plugin/org.tura.metamodel.generation/template/commons/typeElementUtil.eol";
import "platform:/plugin/org.tura.metamodel.generation/template/commons/categorizedUtil.eol";
import "platform:/plugin/org.tura.metamodel.generation/template/commons/assosiation.eol";

 ${percent}${end}
 
 
  [%
     var util = new Native('org.tura.metamodel.commons.Util');
     var alltypes = new Native('java.util.ArrayList');
     var hash = new Native('java.util.HashMap');
     var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 
     var templateStore = new Native('java.util.HashMap');
     
     var types = util.runQuery(model_mapper,"Query model classes",model_mapper);
 
      if (types <> null and types.size <> 0 ){
            var typeCollection = new Native("java.util.ArrayList");

		    for (type in types){
		       type.collectType(typeCollection,model_mapper,null,null,null);
		    }
	
	        var path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/";
	      
	      
		    for(type in typeCollection){
		         type.mappingType2Java(recipe,ingredient);
		    }   
	      
	        for(type in typeCollection){
		        if (not type.~primaryKey.isDefined()  ){
		           continue;
		        }
	             var topObject = true;
		         var assosiations = type::Assosiation.allInstances()->select(t|t.target.uid = type.uid);
	             for (rel in assosiations){
			        var hash = rel.findTypeOfAssosiation(model_mapper);
				    hash.put("recipe",recipe);
				    hash.put("ingredient",ingredient);
				    hash.put("component",component);
				    hash.put("model_mapper",model_mapper);


			        var masterType =   hash.get("masterType");
			        var detailType = hash.get("detailType");
			        var property =  hash.get("property");
		            var containment = hash.get("containment");

			        if (detailType.uid == type.uid  and   rel.type.toString() <> "Many2Many"  and containment){
			           topObject = false;
			        }else{
			           continue;
			        }

                   hash.put("parent",masterType);
                   hash.put("type",detailType);
                   hash.put("rel",rel);
                   hash.put("objPackage",detailType.~package+".pager");
                   
				   var pager : Template =   util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JSE/datacontrol/internalPager.egl",hash,TemplateFactory,templateStore);
			       pager.setFormatter(f);
			       var buffer = pager.process();
			       util.saveFile( path+detailType.~package.replaceAll("\\.","\\/")+"/pager", masterType.~class +"2"+detailType.~class+ "Pager.java",buffer);   
			        
	             }
	             if (topObject  ){
			         var assosiations = type::Assosiation.allInstances()->select(t|t.source.uid = type.uid);
		             for (rel in assosiations){
				        var hash = rel.findTypeOfAssosiation(model_mapper);
					    hash.put("recipe",recipe);
					    hash.put("ingredient",ingredient);
					    hash.put("component",component);
					    hash.put("model_mapper",model_mapper);
	
	
				        var masterType =   hash.get("masterType");
				        var detailType = hash.get("detailType");
				        var property =  hash.get("property");
			            var containment = hash.get("containment");
	
			           if (detailType.uid == type.uid  and   rel.type.toString() <> "Many2Many"  and containment){
				           topObject = false;
				        }else{
				           continue;
				        }
	
	                   hash.put("parent",masterType);
	                   hash.put("type",detailType);
	                   hash.put("rel",rel);
                       hash.put("objPackage",detailType.~package+".pager");
	                   
					   var pager : Template =   util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JSE/datacontrol/internalPager.egl",hash,TemplateFactory,templateStore);
				       pager.setFormatter(f);
				       var buffer = pager.process();
				       util.saveFile( path+detailType.~package.replaceAll("\\.","\\/")+"/pager", masterType.~class +"2"+detailType.~class+ "Pager.java",buffer);   
	             
	              }
	             }
	             if (topObject  ){
			        var hash = new Native('java.util.HashMap');
				    hash.put("recipe",recipe);
				    hash.put("ingredient",ingredient);
				    hash.put("component",component);
				    hash.put("model_mapper",model_mapper);
                    hash.put("type",type);
                    hash.put("objPackage",type.~package+".pager");

				   var pager : Template =   util.loadTemplate("platform:/plugin/org.tura.metamodel.generation/template/technologies/JSE/datacontrol/topObjectPager.egl",hash,TemplateFactory,templateStore);
			       pager.setFormatter(f);
			       var buffer = pager.process();
			       util.saveFile( path+type.~package.replaceAll("\\.","\\/")+"/pager", type.~class+ "Pager.java",buffer);   
	             
	             }
	       }  
      }
%]