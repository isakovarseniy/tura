<#assign number = "#" >
package [%=objPackage%];


import com.octo.java.sql.query.SelectQuery;
import org.tura.platform.datacontrol.commons.TuraException;

public class [%=type.~class%]Pager<T> extends org.tura.platform.datacontrol.Pager<T>{
    private org.tura.platform.datacontrol.DataControl<T> datacontrol;
    private org.tura.platform.repository.core.Repository repository;

    public [%=type.~class%]Pager(org.tura.platform.datacontrol.DataControl<T> datacontrol){
       this.datacontrol = datacontrol;
        this.datacontrol .setPager(this);
    }

	@Override
	protected Object connectObject(Object obj) {
        ((ObjectControl) obj).addListener(new UpdateListener());
		org.tura.platform.datacontrol.command.base.CommandStackProvider sp = new org.tura.platform.datacontrol.command.base.CommandStackProvider();
		sp.setDataControl(datacontrol);
		sp.setCommandStack(this.getCommandStack());
        ((ObjectControl) obj).setStackProvider(sp);
        
	    ((org.tura.platform.repository.core.ObjectControl)obj).getAttributes().put(Constants.DATA_CONTROL, datacontrol);
        
		return obj;
	}


	@SuppressWarnings("unchecked")
	@Override
	public T create() throws TuraException{
	try{
	    org.tura.platform.datacontrol.command.base.CreateObjectParameters createObjectParameters = datacontrol.getCreateObjectParameters();
	    prepareParameter(createObjectParameters.getObjectType());
		[%=type.~fullName%] obj =   ([%=type.~fullName%])repository.create((String)createObjectParameters.getObjectType().getObj());
		((org.tura.platform.repository.core.ObjectControl)obj).getAttributes().put(org.tura.platform.datacontrol.commons.Constants.DATA_CONTROL, datacontrol);
		
		getShifter().add(datacontrol.getCurrentPosition(), obj);
		putObjectToPool(obj, org.tura.platform.datacontrol.pool.PoolCommand.C);
		
		org.tura.platform.datacontrol.command.base.PostCreateTrigger trigger = getDataControl().getPostCreateTrigger(); 
		if (trigger != null){
		   trigger.execute(datacontrol,((org.tura.platform.repository.core.ObjectControl)obj).getWrappedObject());
		}
		return (T)connectObject(obj);
		}catch(Exception e){
		  throw new TuraException(e);
		}		
		
	}

	@Override
	@SuppressWarnings("unchecked")
	public LazyList<T> search() throws TuraException{
	   try{
	    org.tura.platform.datacontrol.command.base.SearchObjectParameters searchObjectParameters = datacontrol.getSearchObjectParameters();
	    prepareParameter(searchObjectParameters.getSearchCriteria());
	    prepareParameter(searchObjectParameters.getOrderByCriteria());
	    prepareParameter(searchObjectParameters.getStartIndex());
	    prepareParameter(searchObjectParameters.getEndIndex());
	    prepareParameter(searchObjectParameters.getObjectType());
	    
	    org.tura.platform.repository.core.SearchResult result = repository.find(
	    (List<org.tura.platform.datacontrol.commons.SearchCriteria>)searchObjectParameters.getSearchCriteria().getObj(), 
	    (List<org.tura.platform.datacontrol.commons.OrderCriteria>)searchObjectParameters.getOrderByCriteria().getObj(),
	    (Integer)searchObjectParameters.getStartIndex().getObj(),
	    (Integer)searchObjectParameters.getEndIndex().getObj(),
	    (String)searchObjectParameters.getObjectType().getObj());
 
        for(Object o :   result.getSearchResult()){
		    connectObject(o);
        }
        org.tura.platform.datacontrol.commons.LazyList<T> list = new org.tura.platform.datacontrol.commons.LazyList<T>((java.util.List<T>)result.getSearchResult(),result.getNumberOfRows(),(int)searchObjectParameters.getStartIndex().getObj());  	
		return list;
		}catch(Exception e){
		  throw new TuraException(e);
		}		
		
	}

	@Override
	public void delete(Object obj) throws TuraException{
		org.tura.platform.datacontrol.command.base.PreDeleteTrigger trigger = getDataControl().getPreDeleteTrigger(); 
		if (trigger != null){
		   trigger.execute(datacontrol,obj);
		}
		
		try{
			repository.remove(obj, ((org.tura.platform.repository.core.ObjectControl)obj).getWrappedObject().getClass().getName());
	        getShifter().remove(datacontrol.getCurrentPosition());
			putObjectToPool(obj, org.tura.platform.datacontrol.pool.PoolCommand.R);   
			}catch(Exception e){
			   throw new TuraException(e);
			}     
		
	}

	@Override
	protected boolean prepareQuery() throws TuraException {
     try {
           com.rits.cloning.Cloner cloner = new com.rits.cloning.Cloner();
			datacontrol
					.setSearchCriteria(cloner.deepClone(datacontrol.getDefaultSearchCriteria()));

			datacontrol
			       .setOrderCriteria(cloner.deepClone(datacontrol.getDefaultOrderCriteria()));

			java.util.Collection<org.tura.platform.datacontrol.commons.SearchCriteria> sc = null;

			if (datacontrol.getParent() != null) {
				sc = datacontrol.getParent().getChildSearchCriteria();

				for (SearchCriteria criteria : sc) {
					if (!criteria.getValue().equals(
							org.tura.platform.datacontrol.commons.Constants.UNDEFINED_PARAMETER)) {
						datacontrol.getSearchCriteria().add(criteria);
					} else {
						return false;
					}
				}

			}
			
            org.tura.platform.datacontrol.command.base.PreQueryTrigger trigger = getDataControl().getPreQueryTrigger();
            if (trigger != null) {
                trigger.execute(datacontrol);
            }
			
			for (SearchCriteria criteria: datacontrol.getSearchCriteria()){
				if (criteria .getValue() instanceof String ){
					criteria.setValue(resolver((String) criteria .getValue()));
				}
			}
			return true;
		} catch (Exception  e) {
			throw new TuraException(e);
		}
	}

	@Override
	protected SelectQuery getSelectQuery() throws TuraException {
			return  org.tura.platform.datacontrol.commons.DefaulQueryFactory.builder(datacontrol.getSearchCriteria(), datacontrol.getOrderCriteria(), datacontrol.getBaseClass()) ;
	}

	@Override
	protected Object getParent() throws TuraException {
	  if (datacontrol.getParent() != null) {
				Object obj = datacontrol.getParent().getMasterCurrentObject();
		      	return obj;
	  }else{
	     return null;
	  }	
	}

	@Override
	protected Class<?> getBaseClass() {
		return datacontrol.getBaseClass();
	}

	@Override
	protected org.tura.platform.datacontrol.command.base.PostQueryTrigger getPostQueryTrigger() {
		return datacontrol.getPostQueryTrigger();
	}

	@Override
	protected org.tura.platform.datacontrol.command.base.PreDeleteTrigger getPreDeleteTrigger() {
		return datacontrol.getPreDeleteTrigger();
	}

	@Override
	protected List<org.tura.platform.datacontrol.commons.SearchCriteria> getSearchCriteria() {
        return datacontrol.getSearchCriteria();
	}

	@Override
	protected org.tura.platform.datacontrol.DataControl<T> getDataControl() {
		return datacontrol;
	}


public void prepareParameter(org.tura.platform.datacontrol.command.base.CallParameter parameter) throws Exception {

        com.rits.cloning.Cloner cloner = new com.rits.cloning.Cloner();

		String exp = parameter.getExpression();
		Object val = parameter.getValue();
		Class<?> clazz = parameter.getClazz();
		if ((exp != null && !exp.equals(""))
				&& (val != null && !val.equals(""))) {
			new TuraException("Wrong combination of method's parameter");
		}
		if (exp != null && !exp.equals("")) {
			Object obj = datacontrol.getElResolver().getValue(exp);

			Object o = cloner.deepClone(obj);
			parameter.setObj(o);
		}
		if (val != null && !val.equals("")) {
			java.lang.reflect.Constructor<?> cnt =  clazz.getDeclaredConstructor(String.class);
			Object o = cnt.newInstance(val);
			parameter.setObj(o);
		}

	}

	private Object resolver(String str) {
		int lastindex = str.length() - 1;
		if (str.length() > 3 && "${number}{".equals(str.substring(0, 2))
				&& "}".equals(str.substring(lastindex))) {
			return datacontrol.getElResolver().getValue(str);
		} else
			return str;
	}

    public org.tura.platform.repository.core.Repository getRepository() {
		return repository;
	}

	public void setRepository(org.tura.platform.repository.core.Repository repository) {
		this.repository = repository;
	}



  public class UpdateListener implements org.tura.platform.repository.proxy.ProxyObjectUpdateListener{
      public void listener( org.tura.platform.repository.core.ObjectControl  obj , String property ) throws  TuraException{
         try{
           if (obj.getAttached() == null || !obj.getAttached()){
                 repository.insert(obj,obj.getWrappedObject().getClass().getName());
                 putObjectToPool(obj, org.tura.platform.datacontrol.pool.PoolCommand.U);
		         getShifter().update(getDataControl().getCurrentPosition(), obj);                 
           }else{
                 getShifter().update(getDataControl().getCurrentPosition(), obj);
		         putObjectToPool(obj, org.tura.platform.datacontrol.pool.PoolCommand.U);           
           }
	     }catch(Exception e){
	        throw new TuraException(e);
	     } 
      }
  }

}
