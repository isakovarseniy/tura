@namespace(uri="http://tura.org/2016/v2/artifact", prefix="tura.artifact")
package artifact;
	
class ArtifactGroup{
    id attr EString uid;
    attr EString name;
   val Artifact[*] artifacts;

}


class TechLeaf{
    id attr EString uid;
    attr EString name;
   val  GenerationHint[*] hints;
   val  ConfigVariable[*] configVariables;
   val TechLeaf[*] techLeafs;
}

class Artifact{
    id attr EString uid;
   attr EString name;
   attr EString description;
   
   // Variables resolved by configuration of recipe (for example server IP)  
   ref   ConfigVariable[*] configVariables;
   
   val   ConfigHash[*] configHashes;

   // Variables to query model ( for example FormName or service name)
   val   ModelQuery[*]modelQuery;
   
   //For navigation in the template (for example choosing specific technologies EclipseLink vs Hibernate)
   val   Technology[*]   technologies;

   //Hint to help template generate specific code
   ref   GenerationHint[*] hints;


   attr EString template;
}

class GenerationHint{
   id attr EString uid;
  attr EString name;
}

class ConfigVariable{
   id attr EString uid;
  attr EString name;
}

class ConfigHash{
   id attr EString uid;
  attr EString name;
}


class ModelQuery{
    id attr EString uid;
   attr EString name;
   attr EString query;
   val  QueryParameter[*] parameters;  

}

class QueryParameter{
    id attr EString uid;
   attr EString name;
}

class Technology{
    id attr EString uid;
   attr EString name;
   val  Option[1..*] options;  
}

class Option{
    id attr EString uid;
   attr EString value;
}


