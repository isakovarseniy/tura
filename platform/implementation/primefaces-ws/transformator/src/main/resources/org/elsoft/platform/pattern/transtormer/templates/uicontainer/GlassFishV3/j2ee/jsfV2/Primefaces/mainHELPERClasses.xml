<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2012 Arseniy Isakov Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:u="jelly:util"
	xmlns:a="jelly:ant" xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core" xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui" xmlns:x="jelly:xml">


	<j:set var="applicationOutputDir"
		value="${GeneratedCodeRoot}/${domain}/${functionalDomain}/${application}/uicontainer" />

	<a:mkdir dir="${applicationOutputDir}/src/main/java/org/primefaces/component/api"/>

	<j:file name="${applicationOutputDir}/src/main/java/org/primefaces/component/api/FixState.java"
		trim="true" omitXmlDeclaration="true" escapeText="false" prettyPrint="true">

package org.primefaces.component.api;

import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.List;

import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;

public class FixState
{
    public void viewClean( String updated )
                   throws Exception
    {
    	if (updated == null) return;
        java.util.StringTokenizer token = new java.util.StringTokenizer( updated );

        while ( token.hasMoreElements(  ) )
        {
            UIComponent ui = FacesContext.getCurrentInstance(  ).getViewRoot(  ).findComponent( token.nextToken(  ) );
            clearSubmittedValues( ui );
        }
    }

    @SuppressWarnings( "rawtypes" )
    private void fix( UIComponent obj )
              throws Exception
    {
        Method privateStringMethod = javax.faces.component.UIComponent.class.getDeclaredMethod( "getStateHelper" );

        privateStringMethod.setAccessible( true );

        javax.faces.component.StateHelper state = (javax.faces.component.StateHelper) privateStringMethod.invoke( obj );

        state.put( UIData.PropertyKeys.saved,
                   new HashMap(  ) );
    }

    public void clearSubmittedValues( String pattern )
                              throws Exception
    {
        javax.faces.component.UIComponent obj =
            javax.faces.context.FacesContext.getCurrentInstance(  ).getViewRoot(  ).findComponent( pattern );

        if ( ( obj == null ) || ( obj instanceof javax.faces.component.UIComponent == false ) )
        {
            return;
        }

        clearSubmittedValues( obj );
    }

    public void clearSubmittedValues( javax.faces.component.UIComponent obj )
                              throws Exception
    {
        List&lt;javax.faces.component.UIComponent&gt; chld = ( (javax.faces.component.UIComponent) obj ).getChildren(  );

        if ( chld.size(  ) != 0 )
        {
            for ( int i = 0; i &lt; chld.size(  ); i++ )
            {
                clearSubmittedValues( chld.get( i ) );
            }
        }

        if ( obj instanceof org.primefaces.component.datatable.DataTable )
        {
            fix( obj );
        }

        if ( obj instanceof javax.faces.component.UIInput )
        {
            ( (javax.faces.component.UIInput) obj ).setSubmittedValue( null );
            ( (javax.faces.component.UIInput) obj ).setLocalValueSet( false );
        }
    }
}


    </j:file>	
    
    <j:import file="${RootTemplate}/GlassFishV3/j2ee/jsfV2/transactionManagerBuilder.xml"
			inherit="true" />
    
</j:jelly>	