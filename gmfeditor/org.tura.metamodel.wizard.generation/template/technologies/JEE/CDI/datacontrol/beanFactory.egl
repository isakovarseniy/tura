<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "platform:/plugin/org.tura.metamodel.wizard.generation/template/technologies/${Environment}.egl";
${percent}${end}

[%
     var util = new Native('org.tura.metamodel.commons.Util');
%]
package  [%=component.basePackage%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].datacontrol;  

@javax.inject.Named("beanFactory")
[%=datacontrol_scope()%]
public class BeanFactory {
    @javax.inject.Inject
    org.tura.platform.datacontrol.ELResolver elResolver;
    
    [%
     var controls =  form.datacontrols.formControl.controls;
     for (control in controls){
       if (control.~masterControl = true){%]
          public     [%=component.basePackage%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].datacontrol.[%if (control.~treeRoot=true){%]TreeRoot[%}%][%=util.mergeAndCapitalize(control.name)%]DC   get[%if (control.~treeRoot=true){%]TreeRoot[%}%][%=util.mergeAndCapitalize(control.name)%]DC(){
               return ([%=component.basePackage%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].datacontrol.[%if (control.~treeRoot=true){%]TreeRoot[%}%][%=util.mergeAndCapitalize(control.name)%]DC) elResolver.getValue("[%if (control.~treeRoot=true){%]treeRoot[%}%][%=util.mergeAndCapitalize(control.name).toLowerCase()%]");
         }
       [%}
     }    
    %]
    
    
[%
     for (control in controls){
         var relations = domain::Relation.allInstances()->select(r|r.master= control);   
         for ( relation in relations ){
         if (relation.isTree = false){%]
          public     [%=component.basePackage%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].datacontrol.[%if (relation.detail.~treeRoot=true){%]TreeRoot[%}%][%=util.mergeAndCapitalize(relation.detail.name)%]DC   get[%if (relation.detail.~treeRoot=true){%]TreeRoot[%}%][%=util.mergeAndCapitalize(relation.detail.name)%]DC(){
       [%if (relation.detail.~dependObject =  null ){ %] 
          try {
               [%=component.basePackage%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].datacontrol.[%=util.mergeAndCapitalize(relation.master.name)%]DC  master=  get[%=util.mergeAndCapitalize(relation.master.name)%]DC();
               return ([%=component.basePackage%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].datacontrol.[%if (relation.detail.~treeRoot=true){%]TreeRoot[%}%][%=util.mergeAndCapitalize(relation.detail.name)%]DC)master.get[%=util.mergeAndCapitalize(relation.master.name)%]2[%=util.mergeAndCapitalize(relation.detail.name)%]();
		     } catch (org.tura.platform.datacontrol.commons.TuraException e) {
			   return null;
		     }
         [%}%]

       [%if (relation.detail.~dependObject <>  null ){ %] 
          try {
               getTreeRoot[%=util.mergeAndCapitalize(relation.detail.~masterRoot.name)%]DC().getCurrentObject();
               return ([%=component.basePackage%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].datacontrol.[%=util.mergeAndCapitalize(relation.detail.name)%]DC) elResolver.getValue("[%=util.mergeAndCapitalize(relation.detail.name).toLowerCase()%]");
		     } catch (org.tura.platform.datacontrol.commons.TuraException e) {
			   return null;
		     }
         [%}%]
          }
          [%}
         }
     }    
     
     
%]

   


}
