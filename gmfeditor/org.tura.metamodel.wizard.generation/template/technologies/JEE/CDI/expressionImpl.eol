
operation  ApplicationRoleImpl(expression:String, contextValue , paramId: Integer, array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation ArtifactImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation AttributeImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   var attr =  contextValue.expression.get(paramId).objRef;
   return expression+attr.name;
}

operation ControlsImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+"beanFactory";
}

operation DataControlFakeAttribute(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation DataControlFakeMethod(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation DataControlImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";

    var util = new Native('org.tura.metamodel.commons.Util');
    
    var masters =  domain::Relation.allInstances()->select(r|r.isTree=true and r.detail = contextValue.expression.get(paramId).objRef )->collect(w|w.master);
    var roots = domain::Relation.allInstances()->select(r|r.isTree=true and r.master = contextValue.expression.get(paramId).objRef )->collect(w|w.detail);
    if (masters.size() = 0 and roots.size = 0 )  {
         return expression+util.mergeAndUnCapitalize(contextValue.expression.get(paramId).objRef.name);
    }else{
       var dc = contextValue.expression.get(paramId).objRef.findTreeRoot();
       return    expression+"treeRoot"+ util.mergeAndCapitalize(dc.name)+".currentControl";
    }
}

operation TreeDataControlImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
    var util = new Native('org.tura.metamodel.commons.Util');
    var dc = contextValue.expression.get(paramId).objRef.findTreeRoot();

   return    expression+"treeRoot"+ util.mergeAndCapitalize(dc.name);
}


operation DomainArtifactImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
}

operation DomainArtifactsImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation GroupImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation MessageLibraryImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation MessageImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation MessagesImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation OperationImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation PackageImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation RoleImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation RolesImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation TriggerImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation TypeElementImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation TypesImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}


operation DataControl findTreeRoot(  ) : DataControl {
      var masters =  domain::Relation.allInstances()->select(r|r.isTree=true and  r.detail = self )->collect(w|w.master);
      for ( master in masters ){
         if (master = self )
            return self;
            
         return master.findTreeRoot();   
      }
     return self;
}

