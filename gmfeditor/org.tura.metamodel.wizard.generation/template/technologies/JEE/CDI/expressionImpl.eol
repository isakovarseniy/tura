operation ArtificialFieldImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation DataControlHolder(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+"beanFactory.";
}

operation TreeRootDataControlHolder(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+"beanFactory.treeRoot";
}

operation DataControlImpl(expression:String, contextValue , paramId: Integer , array ) : String {
       var util = new Native('org.tura.metamodel.commons.Util');
       var dc = contextValue.expression.get(paramId).objRef;
       if (contextValue.expression.get(paramId).~treeDC <> null){
          dc = contextValue.expression.get(paramId).~treeDC;
          return expression+util.mergeAndCapitalize(dc.name);
       }
       return    expression+util.mergeAndUnCapitalize(dc.name);

}

operation TriggerImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation TypeElementImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation AttributeImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   var attr =  contextValue.expression.get(paramId).objRef;
   return expression+attr.name;
}

operation TypesImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation PackageImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation OperationImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation GroupImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation RoleImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation MessageLibraryImpl(expression:String, contextValue , paramId: Integer , array ) : String {
     var util = new Native('org.tura.metamodel.commons.Util');
     var library = contextValue.expression.get(paramId).objRef;
     
   return util.mergeAndCapitalize(library.name);
}

operation MessagesImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return "";
}


operation MessageImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression+"["+array.get(paramId).replaceAll(" ","")+"]";
}

operation DomainArtifactsImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation DomainArtifactImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
}

operation ArtifactImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}


operation  GeneratioinHintImpl(expression:String, contextValue , paramId: Integer, array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}

operation DataControlFakeAttribute(expression:String, contextValue , paramId: Integer , array ) : String {
       if (contextValue.expression.get(paramId-1).~treeDC <> null){
            if (array.get(paramId) <> "currentObject")
               return expression+".currentControl."+array.get(paramId);
            else
               return expression+".currentObject";
        }
        else{
            return expression+"."+array.get(paramId);
        }
}

operation DataControlFakeMethod(expression:String, contextValue , paramId: Integer , array ) : String {
       if (contextValue.expression.get(paramId-1).~treeDC <> null){
            if (array.get(paramId) <> "currentObject")
               return expression+".currentControl."+array.get(paramId);
            else
               return expression+".currentObject";
        }
        else{
            return expression+"."+array.get(paramId);
        }
}

operation TreeDataControl(expression:String, contextValue , paramId: Integer , array ) : String {
    var dc = contextValue.expression.get(paramId+1).objRef.findTreeRoot();
    contextValue.expression.get(paramId+1).~treeDC = dc;

   return expression;
}

operation ExtendedType(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression;
}
operation  RolesImpl(expression:String, contextValue , paramId: Integer, array ) : String {
   if (expression <> "")
     expression = expression+".";
   return expression+array.get(paramId);
}
