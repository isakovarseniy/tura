operation ArtificialFieldImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}

operation DataControlHolder(expression:String, contextValue , paramId: Integer , array ) : String {
   return "#{beanFactory.<holder>}";
}

operation TreeRootDataControlHolder(expression:String, contextValue , paramId: Integer , array ) : String {
   return "#{beanFactory.treeRoot<holder>}";
}

operation DataControlImpl(expression:String, contextValue , paramId: Integer , array ) : String {
       var util = new Native('org.tura.metamodel.commons.Util');
       var dc = contextValue.expression.get(paramId).objRef;
       if (contextValue.expression.get(paramId).~treeDC <> null){
          dc = contextValue.expression.get(paramId).~treeDC;
          return expression.replaceAll("<holder>",util.mergeAndCapitalize(dc.name)+".<holder>");
       }
       return    expression.replaceAll("<holder>",util.mergeAndUnCapitalize(dc.name)+".<holder>");

}

operation TriggerImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}

operation TypeElementImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}

operation AttributeImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   var attr =  contextValue.expression.get(paramId).objRef;
   return expression.replaceAll("<holder>", attr.name+".<holder>");
}

operation TypesImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}

operation PackageImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}

operation OperationImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}

operation GroupImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}

operation RoleImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}

operation MessageLibraryImpl(expression:String, contextValue , paramId: Integer , array ) : String {
     var util = new Native('org.tura.metamodel.commons.Util');
     var library = contextValue.expression.get(paramId).objRef;
   return expression.replaceAll("<holder>", util.mergeAndCapitalize(library.name)+"<holder>");
}

operation MessagesImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return "#{<holder>}";
}


operation MessageImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", "['"+array.get(paramId).replaceAll(" ","")+"']"+".<holder>");
}

operation DomainArtifactsImpl(expression:String, contextValue , paramId: Integer , array ) : String {
}

operation DomainArtifactImpl(expression:String, contextValue , paramId: Integer , array ) : String {
}

operation ArtifactImpl(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}


operation  GeneratioinHintImpl(expression:String, contextValue , paramId: Integer, array ) : String {
   return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
}

operation DataControlFakeAttribute(expression:String, contextValue , paramId: Integer , array ) : String {
       if (contextValue.expression.get(paramId-1).~treeDC <> null){
            if (array.get(paramId) <> "currentObject")
              return expression.replaceAll("<holder>", "currentControl."+array.get(paramId)+".<holder>");
            else
              return expression.replaceAll("<holder>", "currentObject"+".<holder>");
        }
        else{
              return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
        }
}

operation DataControlFakeMethod(expression:String, contextValue , paramId: Integer , array ) : String {
       if (contextValue.expression.get(paramId-1).~treeDC <> null){
            if (array.get(paramId) <> "currentObject")
              return expression.replaceAll("<holder>", "currentControl."+array.get(paramId)+".<holder>");
            else
              return expression.replaceAll("<holder>", "currentObject"+".<holder>");
        }
        else{
              return expression.replaceAll("<holder>", array.get(paramId)+".<holder>");
        }
}

operation TreeDataControl(expression:String, contextValue , paramId: Integer , array ) : String {
    var dc = contextValue.expression.get(paramId+1).objRef.findTreeRoot();
    contextValue.expression.get(paramId+1).~treeDC = dc;

    return expression;
}

operation ExtendedType(expression:String, contextValue , paramId: Integer , array ) : String {
   return expression;
}

operation  RolesImpl(expression:String, contextValue , paramId: Integer, array ) : String {
    return "'<holder>'";
}

operation  ApplicationStyleImpl(expression:String, contextValue , paramId: Integer, array ) : String {
    return "'<holder>'";
}

operation  StylesPackageImpl(expression:String, contextValue , paramId: Integer, array ) : String {
   return expression;
}

operation  StyleLibraryImpl(expression:String, contextValue , paramId: Integer, array ) : String {
   return expression;
}

operation  StyleSetImpl(expression:String, contextValue , paramId: Integer, array ) : String {
     var util = new Native('org.tura.metamodel.commons.Util');
     var set = contextValue.expression.get(paramId).objRef;

     return expression.replaceAll("<holder>", util.dashmergeAndUnCapitalize(set.name)+".<holder>");
     
}     






