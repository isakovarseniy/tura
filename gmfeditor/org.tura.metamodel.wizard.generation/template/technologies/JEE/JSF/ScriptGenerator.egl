[%@template
operation   scriptGenerator(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     var recipe = hash.get("recipe");
     var ingredient = hash.get("ingredient");
     var component = hash.get("component");
     var form = hash.get("form");
     var actionElements = hash.get("actionElements");
     var  javaPath =  hash.get("javaPath");  
 %]

package  [%=component.basePackage%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].action;

public class ScriptGenerator{

	@javax.inject.Inject
	private  java.util.logging.Logger logger;

	@javax.inject.Inject
	private org.tura.platform.datacontrol.ELResolver elResolver;
    
    private java.util.HashMap<String,Object> hash = new  java.util.HashMap<String,Object>();
[%
     var map = new Native('java.util.HashMap'); 

     for ( action in actionElements){
         if (action.typeRef <> null ){
             var type = action.typeRef;
             type.mappingType2JavaScript(recipe,ingredient);
         }
     }
%]

     public ScriptGenerator(){
[%      
     for ( action in actionElements){
      if (action.methodRef <> null  and  action.typeRef.~url.isDefined()){  
%]
      hash.put("[%=action.mkuid()%]",new Object[]{
            new Object[]{[%
           if (action.parameters <> null and action.parameters.size() <> 0 ){
              var i = 0;
               for (parameter  in action.parameters){
                  if ( i <> 0)
                     %],[%
                  %]"[%=buildExpression(parameter.value)%]"[%
                  i = 1;
               }
           }
            %]},
            "[%=util.mergeAndUnCapitalize(action.methodRef.name)%]"
         }
      );

[%     
      }
     }      
%]
   }
   
	public String scriptBuilder(String clientId) {
		String result="";
		try {
			Object[] array = (Object[]) hash.get(clientId);

			result = (String) array[1] + "(";
			int i = 0;
			for (String expression : (String[]) array[0]) {
				if (i != 0)
					result = result + ",";
				Object obj = expression;
				if ("#{".equals(expression.substring(0, 2))) {
					obj = elResolver.getValue(expression);
				}
				result = result + obj.toString();
			}
             result =result+")";
 		} catch (Exception e) {
			logger.fine(e.getMessage());
		}
		return result;
	}
   
}
[%
      var f = new Native("org.tura.metamodel.wizard.infrastructure.JavaFormatter");
      out.formatWith(f);
      util.saveFile( javaPath+util.mergeAndCapitalize(form.name).toLowerCase()+"/action/"  , "ScriptGenerator.java",out.toString());  
}
%]