[%@template
operation  domain::Window draw(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     var webapp = hash.get("webapp");   
     var form = hash.get("form");   
%]
     [%=self.generateBody(hash)%]     
[%
     var x = new Native("org.eclipse.epsilon.egl.formatter.language.XmlFormatter"); 
     out.formatWith(x);
     util.saveFile( webapp+"/"+util.mergeAndCapitalize(form.name).toLowerCase(),  util.mergeAndCapitalize(self.name)+".xhtml",out.toString());   
     
}
%]

[%@template
operation domain::Window generateBody(hash){

     var form = hash.get("form");   
     var recipe =  hash.get("recipe");
     var ingredient  = hash.get("ingredient");

     var title = buildParameterizedExpression(self.multiLangLabel);
        
%]
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
		<html xmlns="http://www.w3.org/1999/xhtml"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:p="http://primefaces.org/ui">

			<f:view contentType="text/html">
				<h:head>
					<title>
						<ui:insert name="title">[%=title%]</ui:insert>
					</title>
					<meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
					<ui:insert name="head">[%=title%]</ui:insert>
				</h:head>

				<h:body>
				
[%

		var app = form.eContainer().getParent().getParent().getParent();
		if (app.getApplicationStyle() <> null){
            for (pkg in app.getApplicationStyle().stylesPackage ){
               if (pkg.styles <> null ){
                 for (lib in pkg.styles.libraries ){
                 lib.mappingStyleLibrary2CSS(recipe, ingredient );
                 if (lib.~url.isDefined()){
              %]<h:outputStylesheet library="css" name="[%=lib.~url%]" />[%
                  }
                 }
               }
            }
		}
%]				
					<h:form id="window">
                         <p:panelGrid [%=self.mkUIDBinding()%] columns="[%=self.columns%]"  [%=self.styleAttributes(hash)%] >
[%
                for (element in self.viewElement){
%]                
                    [%=element.draw(hash)%]
[%
                }  
%]					
                         </p:panelGrid>
					</h:form>
				</h:body>
			</f:view>
		</html>
[%
}
%]