[%@template
operation InputText draw(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     var value;
     util.traceIfDebug("UI element","InputText start: "+self.uid);     
     if (hash.get("context") == null )
         value = buildExpression(util.createArtificialContextValue(self.sourcePointer,self.sourcePointer.findTreeRoot(),self.valuePointer));
     else{
          if (hash.get("context").equals("table") )
               value =  "#{row[2]."+self.valuePointer.name+"}";  
          if (hash.get("context").equals("tree") )
               value =  "#{row[1]."+self.valuePointer.name+"}";
     }
 %]
<p:inputText   [%=self.mkUIDBinding()%] value="[%=value%]"   [%=self.uiElementAttributes(hash)%]>
   [%=self.validator(hash)%]
   [%=self.convertor(hash)%]
</p:inputText>
[%
     util.traceIfDebug("UI element","InputText end: "+self.uid);     
}
%]