[%
 import "platform:/plugin/org.tura.metamodel.wizard.generation/template/commons/typeElementUtil.eol";
 import "ejbMethods.egl";
 var util = new Native('org.tura.metamodel.commons.Util');
%]
package [%=type.~package%];  
import javax.ejb.Stateless;
import java.rmi.RemoteException;
import javax.jws.WebService;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

@Stateless
[%if (typeRemote <> null){%]
@WebService(endpointInterface = "[%=typeRemote.~fullName%]",serviceName="[%=typeRemote.~class%]")
[%}%]
public class  [%=type.~class%]  extends org.elsoft.platform.persistence.ELsoftEntityService [%if (typeRemote <> null or typeLocal <> null) {%]  implements  [%} if (typeRemote <> null ){%]  [%=typeRemote.~fullName%] [%} if (typeLocal <> null ){ if (typeRemote <> null ){%],[%}%] [%=typeLocal.~fullName%] [%}%]{

    @PersistenceContext(unitName="[%=util.mergeAndCapitalize(component.name)%]")
    private EntityManager em;

[%for ( method in type.operations){ %]    
 [%=method.generate(recipe,ingredient,typeGeneric)%]
[%}%]
}


[% @template
operation Operation create() { %]
throws Exception
    {
    	try{
    		[%=self.returnValue.typeRef.~fullName%]  obj = new [%=self.returnValue.typeRef.~fullName%]();
        	obj.setObjId(this.getObjsectID(em));
        	return obj;
    		
    	}catch (RuntimeException t )
    	{
    		return null;
    	}
    }	
[% } %]

[% @template
operation Operation insert() { %]
throws Exception
    {
		this.persistObject(obj, em);
	}	
[% } %]

[% @template
operation Operation update() { %]
throws Exception
   {
		this.mergeObject(obj, em);
	}	
[% } %]

[% @template
operation Operation remove() { %]
throws Exception
  {
		this.removeObject(obj, em);
   }	
[% } %]

[% @template
operation Operation find(generic:Type) { %]
throws Exception
  {
	 try{
        return ([%=self.returnValue.typeRef.~fullName%] )this.getObjects([%=generic.~fullName%].class, search, order, em, startIndex,endIndex); 

		}catch(Exception e){
			throw new RemoteException(e.getMessage());
		}
	}	
[% } %]

