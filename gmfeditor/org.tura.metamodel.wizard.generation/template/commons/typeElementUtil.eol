operation TypeElement mappingType2Java( recipe:Recipe, ingredient :Ingredient) { 

    var appmappers =   new Native('java.util.ArrayList');  
    var util = new Native('org.tura.metamodel.commons.Util');
    
    appmappers.addAll(recipe.mappers);
    appmappers.addAll(ingredient.mappers);


    for( appmapper in appmappers ){
         var selfUID = self.uid;
         var tp = self;
         if (self.isTypeOf(domain::TypeReference)){
             selfUID = self.typeRef.uid;
             tp = self.typeRef;
         }
          var set = appmapper.mapper.mappers.select(r|r.isKindOf(JavaMapper) and r.typeRef.uid= selfUID);
          if ( set.size() <> 0 ){
              var type =  util.mapType(set,ingredient,tp) ;
              if ( type <> null){
                 self.~class=type.mappedToClassName;
                 self.~package= type.mappedToPackageName;
                 if (type.mappedToPackageName <>'')
                     self.~fullName=type.mappedToPackageName+"."+type.mappedToClassName;
                  else
                     self.~fullName=type.mappedToClassName;
                 self.~artifactId=type.artifactId;
                 self.~groupId=type.groupId;
                 self.~version= type.version;
                 if (type.libraryName <> null)
                     self.~library = type.libraryName;
                 else{
                    if ( type.artifactId<> null and type.version <> null )
                        self.~library=type.artifactId+"-"+type.version+"."+type.artifactType;
                    else
                        self.~library=null;
                 }    
              }  
          }    
     }
} 
