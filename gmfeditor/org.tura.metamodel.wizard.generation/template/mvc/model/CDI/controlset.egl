[%
     var util = new Native('org.tura.metamodel.commons.Util');

    var f = new Native("org.tura.metamodel.wizard.infrastructure.JavaFormatter"); 
    var datacontrol : Template = TemplateFactory.load("platform:/plugin/org.tura.metamodel.wizard.generation/template/mvc/model/CDI/datacontrol.egl");
    datacontrol.setFormatter(f);


    datacontrol.populate("recipe",recipe);
    datacontrol.populate("ingredient",ingredient);
    datacontrol.populate("component",component);
    datacontrol.populate("model_mapper",model_mapper);
    datacontrol.populate("form",form);
    datacontrol.populate("control",control);

    var buffer = datacontrol.process();

    util.saveFile( path+util.mergeAndCapitalize(form.name).toLowerCase()+"/datacontrol/"  , util.mergeAndCapitalize(control.name) + "DC.java",buffer);   


     if (control.~treeRoot <> null){

         var treedatacontrol : Template = TemplateFactory.load("platform:/plugin/org.tura.metamodel.wizard.generation/template/mvc/model/CDI/treedatacontrol.egl");
         treedatacontrol.setFormatter(f);


         treedatacontrol.populate("recipe",recipe);
         treedatacontrol.populate("ingredient",ingredient);
         treedatacontrol.populate("component",component);
         treedatacontrol.populate("model_mapper",model_mapper);
         treedatacontrol.populate("form",form);
         treedatacontrol.populate("control",control);

         buffer = treedatacontrol.process();

         util.saveFile( path+util.mergeAndCapitalize(form.name).toLowerCase()+"/datacontrol/"  , "TreeRoot"+util.mergeAndCapitalize(control.name) + "DC.java",buffer);   

   }


         var producercontrol : Template = TemplateFactory.load("platform:/plugin/org.tura.metamodel.wizard.generation/template/mvc/model/CDI/producer.egl");
         producercontrol.setFormatter(f);


         producercontrol.populate("recipe",recipe);
         producercontrol.populate("ingredient",ingredient);
         producercontrol.populate("component",component);
         producercontrol.populate("model_mapper",model_mapper);
         producercontrol.populate("form",form);
         producercontrol.populate("control",control);

         buffer = producercontrol.process();

         util.saveFile( path+util.mergeAndCapitalize(form.name).toLowerCase()+"/producer/"  , util.mergeAndCapitalize(control.name) + "Producer.java",buffer);   



%]