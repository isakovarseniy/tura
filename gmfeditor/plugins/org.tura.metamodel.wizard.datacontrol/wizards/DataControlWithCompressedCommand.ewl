import "platform:/plugin/org.tura.metamodel.wizard.generation/template/commons/dcWithCompressedCommand.eol";


/*
wizard AllDataContorlInitialization {
	guard : self.isKindOf(domain::DataControl) 
		
	title : 'All Data control initialization'
	do {
			var commandSelector = new Native('org.tura.metamodel.wizard.datacontrol.DataControlCommandSelector');
			var queryHelper =  new Native('org.tura.metamodel.commons.QueryHelper');
			
			
			for (form in Form.all){
			  var commandList := commandSelector.propertiesList(form);
			  var treeRoots  :=   queryHelper.findTreeRootControls(form);
			  for ( tR in treeRoots ){
			            var treeRoot = tR.getDc();
			            treeRoot.~treeRoot=true;       
			   }
			   for(  dc in form.datacontrols.formControl.controls)  { 
				   for( command in commandList ) {
				        comperssorComandProcessor(dc,command);
					}
				}	
			}
    }

}
*/

wizard DataControlWithCompressedCommand {
	
	guard : self.isKindOf(domain::DataControl) 
		
	title : 'Data control with Compressed Command'
	do {
       var queryHelper =  new Native('org.tura.metamodel.commons.QueryHelper');

       if (not self.baseType.isDefined()){
          var util = new Native('org.tura.metamodel.commons.Util');
          util.message("Info","Base type is not defined");
          return;
	   }
       
	   
	   var commandList =queryHelper.queryTypesByHint(self,"DataControl command","Data control","datacontrol.command","UIGeneration");
	   
        var form = queryHelper.getForm(self);
        var treeRoots =   queryHelper.findTreeRootControls(form);
        for ( tR in treeRoots ){
            var treeRoot = tR.getDc();
            treeRoot.~treeRoot=true;       
        }
	   
       for( command in commandList ) {
           comperssorComandProcessor(self,command);
	   }
     }
}

