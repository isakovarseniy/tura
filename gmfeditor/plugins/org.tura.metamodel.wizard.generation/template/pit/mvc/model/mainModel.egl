<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "platform:/plugin/org.tura.metamodel.wizard.generation/template/technologies/${Model_management_framework}.egl";
import "platform:/plugin/org.tura.metamodel.wizard.generation/template/technologies/${Model_management_framework}/expressionImpl.eol";
import "platform:/plugin/org.tura.metamodel.wizard.generation/template/pit/mvc/model/datacontrolUtil.eol";
${percent}${end}
[%

     var util = new Native('org.tura.metamodel.commons.Util');
     var forms = util.runQuery(model_mapper,"Query form",model_mapper);

    if (forms.size() <> 0 ){

       for (form in forms){
       var i = 0;

         var hash = new Native("java.util.HashMap"); 
   
         var javaPath = component.getComponentRoot+"/"+component.getArtifactId()+"/src/main/java/"+component.basePackage.replaceAll("\\.","\\/")+"/";  
         var resourcePath =  component.getComponentRoot+"/"+component.getArtifactId()+"/src/main/resources/";
         var uipackage = form.eContainer().parent;

         hash.put("recipe",recipe);
         hash.put("ingredient",ingredient);
         hash.put("component",component);
         hash.put("model_mapper",model_mapper);
         hash.put("javaPath",javaPath);
         hash.put("resourcePath",resourcePath);
         hash.put("form",form);
         hash.put("uipackage",uipackage);
         hash.put("configuration",configuration);
         
         
         util.setBeanFactoryName(util.mergeAndCapitalize(uipackage.name)+util.mergeAndCapitalize(form.name));
         
         form.datacontrols.formControl.processRootElement(recipe,ingredient);
         var controls =  form.datacontrols.formControl.controls;
         
         for (control in controls){

           control.processKeys(recipe,ingredient);
           control.processArtificialFields(recipe,ingredient);

           control.processTriggers(recipe,ingredient);
           
           //Process relations only ones for all datacontrols;
           if (i = 0 ){
              control.processRelations(recipe,ingredient);
              control.processDependencies(recipe,ingredient);
           }
           
           i=i+1;   

           control.processDefaultQuery(recipe,ingredient);
           
         }
         datacontrolgeneration(hash);
       }
     }  

%]