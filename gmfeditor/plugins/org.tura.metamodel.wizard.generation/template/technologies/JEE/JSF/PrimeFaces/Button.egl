[%@template
operation domain::Button draw(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     util.traceIfDebug("UI element","Button start: "+self.uid);     
     
     var recipe = hash.get("recipe");
     var ingredient = hash.get("ingredient");
     var form = hash.get("form");
     var uipackage = hash.get("uipackage");
     
     hash.get("actionElements").add(self);
     
     var title =  " value=\"" + buildParameterizedExpression(self.multiLangLabel) + "\" ";  
     var icon = " icon=\""+util.apostropheRemover(buildParameterizedExpression(self.icon))+"\" ";
 
     var immediate = "";
     var eventListener="";
     if (self.findClassifier('UIGeneration','JSF','immediate')){
        immediate = "immediate=\"true\"";
     }
     
     

 %]
<p:commandButton  [%=immediate%]  [%=title%] [%=self.mkUIDBinding()%] [%=self.uiElementAttributes(hash)%][%  
       for ( trigger in  self.triggers){
          var type = trigger.typeRef;
          if (type <> null ){
             type.mappingType2Java(recipe,ingredient);
             type.mappingType2JavaScript(recipe,ingredient);
           }
           if (trigger.findClassifier('UIGeneration','JSF','trigger.onclick') and type <> null  and type.~mapper.isDefined() and "Type2JavaScript".equals(type.~mapper) ){
             %] onclick="[%=trigger.scriptTrigger(util.mergeAndCapitalize(uipackage.name)+util.mergeAndCapitalize(form.name))%]"[%
           }else{      
              if (trigger.findClassifier('UIGeneration','JSF','trigger.oncomplete') and type <> null  and type.~mapper.isDefined() and "Type2JavaScript".equals(type.~mapper)){
                %] oncomplete="[%=trigger.scriptTrigger(util.mergeAndCapitalize(uipackage.name)+util.mergeAndCapitalize(form.name))%]"[%
              }
              else{
                if (type <> null and type.~mapper.isDefined() and "Type2Java".equals(type.~mapper) ){
           %] actionListener="[%=trigger.javaTrigger(util.mergeAndCapitalize(uipackage.name)+util.mergeAndCapitalize(form.name))%]"[%
              }
            }      
         }
      }
%] [%=icon%]    [%=self.refreshArias()%] >
[%
        for (param in self.findAllClassifiers('UIGeneration','JSF','parameter')){%]
             [%=param.details%]        
        [%
        }
%]
</p:commandButton>
 [%
     util.traceIfDebug("UI element","Button end: "+self.uid);     
 
}
%]