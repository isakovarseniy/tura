[%
@template
operation  domain::Button accessor(id,methodName) {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("button[id$=\''+id+'\']")';
   %]
     public org.tura.platform.selenium.Button get[%=util.mergeAndCapitalize(methodName)%](){
      return new org.tura.platform.selenium.primefaces.ButtonPrimeFaces (webDriver.findElement([%=s%]),webDriver);
      }
      
     public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }      
    [%
}

@template
operation  domain::CheckBox accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("div[id$=\''+id+'\']")';

   %]
     public org.tura.platform.selenium.CheckBox get[%=util.mergeAndCapitalize(methodName)%](){
        return new org.tura.platform.selenium.primefaces.CheckBoxPrimeFaces(  webDriver.findElement([%=s%]),webDriver);
      }

     public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }      
      
      [%   
}


@template
operation  domain::Date accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("div[id$=\''+id+'\']")';
   %]
     public org.tura.platform.selenium.Date get[%=util.mergeAndCapitalize(methodName)%](){
       return new org.tura.platform.selenium.primefaces.DatePrimeFaces( webDriver.findElement([%=s%]),webDriver);
      }

     public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }         
      [%   
}


@template
operation  domain::DropDownSelection accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("div[id$=\''+id+'\']")';
     
   %]
     public org.tura.platform.selenium.DropDownSelection get[%=util.mergeAndCapitalize(methodName)%](){
       return new org.tura.platform.selenium.primefaces.DropDownSelectionPrimeFaces(  webDriver.findElement([%=s%]),"[%=id%]",webDriver);
     }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }       
     [%   
}


@template
operation  domain::Image accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("div[id$=\''+id+'\']")';     
   %]
     public org.tura.platform.selenium.Image get[%=util.mergeAndCapitalize(methodName)%](){
       return new org.tura.platform.selenium.primefaces.ImagePrimeFaces( webDriver.findElement([%=s%]),webDriver);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }      
      [%   
}


@template
operation  domain::InputText accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("input[id$=\''+id+'\']")';     

   %]
     public org.tura.platform.selenium.InputText get[%=util.mergeAndCapitalize(methodName)%](){
       return new org.tura.platform.selenium.primefaces.InputTextPrimeFaces( webDriver.findElement([%=s%]),webDriver);
     }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }      
     
     [%   
}

@template
operation  domain::Password accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("input[id$=\''+id+'\']")';     

   %]
     public org.tura.platform.selenium.InputText get[%=util.mergeAndCapitalize(methodName)%](){
       return new org.tura.platform.selenium.primefaces.InputTextPrimeFaces( webDriver.findElement([%=s%]),webDriver);
     }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }      
     
     [%   
}




@template
operation  domain::Label accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("label[id$=\''+id+'\']")';     
     
   %]
     public org.tura.platform.selenium.Label get[%=util.mergeAndCapitalize(methodName)%](){
         return new org.tura.platform.selenium.primefaces.LabelPrimeFaces(webDriver.findElement( [%=s%]),webDriver);
     }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }        
     [%   
}


@template
operation  domain::MessageElement accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("div[id$=\''+id+'\']")';     
     
   %]
     public org.tura.platform.selenium.Message get[%=util.mergeAndCapitalize(methodName)%](){
         return new org.tura.platform.selenium.primefaces.MessagePrimeFaces(webDriver.findElement( [%=s%]),webDriver);
     }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }        
     [%   
}


@template
operation  domain::OutputText accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
    var s = 'org.openqa.selenium.By.cssSelector("input[id$=\''+id+'\']")';     
     
   %]
     public org.tura.platform.selenium.OutputText get[%=util.mergeAndCapitalize(methodName)%](){
        return new org.tura.platform.selenium.primefaces.OutputTextPrimeFaces( webDriver.findElement([%=s%]),webDriver);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }        
  
      [%   
}

@template
operation  domain::LayerHolder accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
    var s = 'org.openqa.selenium.By.cssSelector("table[id$=\''+id+'\']")';     

   %]
     public org.tura.platform.selenium.LayerHolder get[%=util.mergeAndCapitalize(methodName)%](){
       return new org.tura.platform.selenium.primefaces.LayerHolderPrimeFaces( webDriver.findElement([%=s%]),webDriver);
     }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }       
     [%   
}


@template
operation  domain::Table accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("div[id$=\''+id+'\']")';     
     
   %]
     public org.tura.platform.selenium.Table get[%=util.mergeAndCapitalize(methodName)%](){
       return new org.tura.platform.selenium.primefaces.TablePrimeFaces( webDriver.findElement([%=s%]),webDriver);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }       
      
      [%   
}

@template
operation  domain::Tree accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("div[id$=\''+id+'\']")';     

   %]
     public org.tura.platform.selenium.Tree get[%=util.mergeAndCapitalize(methodName)%](){
       return new org.tura.platform.selenium.primefaces.TreePrimeFaces( webDriver.findElement( [%=s%]),webDriver);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }             
      [%   
}


@template
operation  domain::Window accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("table[id$=\''+id+'\']")';     

   %]
     public org.tura.platform.selenium.Tree get[%=util.mergeAndCapitalize(methodName)%](){
       return new org.tura.platform.selenium.primefaces.TreePrimeFaces( webDriver.findElement( [%=s%]),webDriver);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }             
      [%   
}

@template
operation  domain::Canvas accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("table[id$=\''+id+'\']")';     

   %]
     public org.openqa.selenium.WebElement get[%=util.mergeAndCapitalize(methodName)%](){
       return  webDriver.findElement( [%=s%]);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }             
      [%   
}

@template
operation  domain::PopupCanvas accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("table[id$=\''+id+'\']")';     

   %]
     public org.openqa.selenium.WebElement get[%=util.mergeAndCapitalize(methodName)%](){
       return  webDriver.findElement( [%=s%]);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }             
      [%   
}

@template
operation  domain::TabPage accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("a[href$=\''+id+'\']")';     

   %]
     public org.openqa.selenium.WebElement get[%=util.mergeAndCapitalize(methodName)%](){
       return webDriver.findElement( [%=s%]);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }             
      [%   
}


@template
operation  domain::ViewArea accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("table[id$=\''+id+'\']")';     

   %]
     public org.openqa.selenium.WebElement get[%=util.mergeAndCapitalize(methodName)%](){
       return  webDriver.findElement( [%=s%]);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }             
      [%   
}


@template
operation  domain::ViewPort accessor(id,methodName)  {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("table[id$=\''+id+'\']")';     

   %]
     public org.openqa.selenium.WebElement get[%=util.mergeAndCapitalize(methodName)%](){
       return webDriver.findElement( [%=s%]);
      }
      public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }             
      [%   
}


@template
operation  domain::Menu accessor(id,methodName) {
     var util = new Native('org.tura.metamodel.commons.Util');
     var s = 'org.openqa.selenium.By.cssSelector("button[id$=\''+id+'\']")';
   %]
     public org.tura.platform.selenium.Button get[%=util.mergeAndCapitalize(methodName)%](){
      return new org.tura.platform.selenium.primefaces.ButtonPrimeFaces (webDriver.findElement([%=s%]),webDriver);
      }
      
     public static org.openqa.selenium.By get[%=util.mergeAndCapitalize(methodName)%]SearchCriteria(){
      return [%=s%];
      }      
    [%
}
%]