//Enable dynamic templates
var genEditorGenerator = GmfGen!GenEditorGenerator.all.first;
genEditorGenerator.setDynamicTemplates(true);
genEditorGenerator.setTemplateDirectory('/org.tura.metamodel/templates/');

var plugin = GmfGen!GenPlugin.all.first;
plugin.id = 'org.tura.metamodel.diagram.domain';

//Enable diagram partition for DomainArtifact element
var genTopLevelNode = GmfGen!GenChildNode.all.select(n|n.createCommandClassName = 'DomainArtifactCreateCommand').first;
var behaviour = new GmfGen!OpenDiagramBehaviour;
behaviour.editorID = 'artifact.diagram.part.ArtifactDiagramEditorID';
behaviour.diagramKind='Artifact';
behaviour.editPolicyClassName= 'OpenDiagramDomainArtifactEditPolicy';
genTopLevelNode.behaviour.add(behaviour);


// Change figure for DomainArtifact element 
var innerClass = GmfGen!InnerClassViewmap.all.select(n|n.ClassName = 'DomainArtifactFigure').first;
innerClass.classBody=innerClass.classBody.replace('org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel','org.tura.metamodel.commons.editparts.SizeLimitedLabel');


//Enable diagram partition for DomainTypes element
var genTopLevelNode = GmfGen!GenTopLevelNode.all.select(n|n.createCommandClassName = 'DomainTypesCreateCommand').first;
var behaviour = new GmfGen!OpenDiagramBehaviour;
behaviour.editorID = 'typesrepository.diagram.part.TypesrepositoryDiagramEditorID';
behaviour.diagramKind='Typesrepository';
behaviour.editPolicyClassName= 'OpenDiagramDomainTypesEditPolicy';
genTopLevelNode.behaviour.add(behaviour);


// Change figure for DomainTypes element 
var innerClass = GmfGen!InnerClassViewmap.all.select(n|n.ClassName = 'DomainTypesFigure').first;
innerClass.classBody=innerClass.classBody.replace('org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel','org.tura.metamodel.commons.editparts.SizeLimitedLabel');


//Enable diagram partition for DomainApplication element
var genTopLevelNode = GmfGen!GenChildNode.all.select(n|n.createCommandClassName = 'DomainApplicationCreateCommand').first;
var behaviour = new GmfGen!OpenDiagramBehaviour;
behaviour.editorID = 'application.diagram.part.ApplicationDiagramEditorID';
behaviour.diagramKind='Application';
behaviour.editPolicyClassName= 'OpenDiagramDomainApplicationEditPolicy';
genTopLevelNode.behaviour.add(behaviour);


// Change figure for DomainTypes element 
var innerClass = GmfGen!InnerClassViewmap.all.select(n|n.ClassName = 'DomainApplicationFigure').first;
innerClass.classBody=innerClass.classBody.replace('org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel','org.tura.metamodel.commons.editparts.SizeLimitedLabel');


//Enable diagram partition for ORMEntity element
var genTopLevelNode = GmfGen!GenChildNode.all.select(n|n.createCommandClassName = 'ORMEntityCreateCommand').first;
var behaviour = new GmfGen!OpenDiagramBehaviour;
behaviour.editorID = 'artifact.diagram.part.ArtifactDiagramEditorID';
behaviour.diagramKind='Artifact';
behaviour.editPolicyClassName= 'OpenDiagramORMEntityEditPolicy';
genTopLevelNode.behaviour.add(behaviour);


// Change figure for ORMEntity element 
var innerClass = GmfGen!InnerClassViewmap.all.select(n|n.ClassName = 'ORMEntityFigure').first;
innerClass.classBody=innerClass.classBody.replace('org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel','org.tura.metamodel.commons.editparts.SizeLimitedLabel');


//Enable diagram partition for JPAService element
var genTopLevelNode = GmfGen!GenChildNode.all.select(n|n.createCommandClassName = 'JPAServiceCreateCommand').first;
var behaviour = new GmfGen!OpenDiagramBehaviour;
behaviour.editorID = 'artifact.diagram.part.ArtifactDiagramEditorID';
behaviour.diagramKind='Artifact';
behaviour.editPolicyClassName= 'OpenDiagramJPAServiceEditPolicy';
genTopLevelNode.behaviour.add(behaviour);


// Change figure for JPAService element 
var innerClass = GmfGen!InnerClassViewmap.all.select(n|n.ClassName = 'JPAServiceFigure').first;
innerClass.classBody=innerClass.classBody.replace('org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel','org.tura.metamodel.commons.editparts.SizeLimitedLabel');



//Enable diagram partition for EJBService element
var genTopLevelNode = GmfGen!GenChildNode.all.select(n|n.createCommandClassName = 'EJBServiceCreateCommand').first;
var behaviour = new GmfGen!OpenDiagramBehaviour;
behaviour.editorID = 'artifact.diagram.part.ArtifactDiagramEditorID';
behaviour.diagramKind='Artifact';
behaviour.editPolicyClassName= 'OpenDiagramEJBServiceEditPolicy';
genTopLevelNode.behaviour.add(behaviour);


// Change figure for EJBService element 
var innerClass = GmfGen!InnerClassViewmap.all.select(n|n.ClassName = 'EJBServiceFigure').first;
innerClass.classBody=innerClass.classBody.replace('org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel','org.tura.metamodel.commons.editparts.SizeLimitedLabel');



 -- distinct visual ID
for (c in GmfGen!GenCommonBase.allInstances) {
  c.setVisualID (c.getVisualID()+500000);
}


