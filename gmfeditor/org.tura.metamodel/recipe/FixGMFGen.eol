//Enable dynamic templates
var genEditorGenerator = GmfGen!GenEditorGenerator.all.first;
genEditorGenerator.setDynamicTemplates(true);
genEditorGenerator.setTemplateDirectory('/org.tura.metamodel/templates/');

var plugin = GmfGen!GenPlugin.all.first;
plugin.id = 'org.tura.metamodel.diagram.recipe';


 -- distinct visual ID
for (c in GmfGen!GenCommonBase.allInstances) {
  c.setVisualID (c.getVisualID()+300000);
}

-- distinct model IDs
genEditorGenerator.setModelID('Recipe');
-- distinct package prefix
genEditorGenerator.setPackageNamePrefix('recipe.diagram');
-- distinct diagram file extension
genEditorGenerator.setDiagramFileExtension('recipe_diagram');
-- set ID model editor
var genEditorView = GmfGen!GenEditorView.all.first;
genEditorView.setID('recipe.diagram.part.RecipeDiagramEditorID');


//Enable diagram partition for DeploymentSequence element
var genTopLevelNode = GmfGen!GenTopLevelNode.all.select(n|n.createCommandClassName = 'DeploymentSequenceCreateCommand').first;
var behaviour = new GmfGen!OpenDiagramBehaviour;
behaviour.editorID = 'deployment.diagram.part.DeploymentDiagramEditorID';
behaviour.diagramKind='Deployment';
behaviour.editPolicyClassName= 'OpenDiagramDeploymentSequenceEditPolicy';
genTopLevelNode.behaviour.add(behaviour);


// Change figure for DeploymentSequence element 
var innerClass = GmfGen!InnerClassViewmap.all.select(n|n.ClassName = 'DeploymentSequenceFigure').first;
innerClass.classBody=innerClass.classBody.replace('org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel','org.tura.metamodel.commons.editparts.SizeLimitedLabel');


