package com.turasolutions.sirius.diagram.producer.tura;

import org.eclipse.sirius.tree.description.TreeItemMapping;

import com.turasolutions.sirius.diagram.producer.tura.config.items.DiagramConfigProvider;
import com.turasolutions.sirius.diagram.producer.tura.config.items.Table_Message_LanguageConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.artifact.ConfigHashConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.artifact.ConfigHashsConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.artifact.ConfigVariableCongigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.artifact.ConfigurationVariablesConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.artifact.GenerationHintConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.artifact.GenerationHintsConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.artifact.TechLeafConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.artifact.TecnologiesTreeConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.domain.DomainApplicationConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.domain.DomainApplicationsConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.domain.DomainArtifactConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.domain.DomainArtifactsConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.domain.DomainTypesConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.domain.DomainTypesRepositoryConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.message.MessageConfiguration;
import com.turasolutions.sirius.diagram.producer.tura.config.items.message.TranclationConfiguration;
import com.turasolutions.sirius.diagram.producer.tura.config.items.style.StyleLibraryConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.style.StyleSetConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.type.PrimitiveConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.items.type.PrimitivesGroupConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.CSSMapperConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.CSSMappersConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.JavaPackageMapperConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.JavaPackageMappersConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.JavaScriptMapperConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.JavaScriptMappersConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.JavaTypeMapperConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.JavaTypeMappersConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.RoleMapperConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.RoleMappersConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.XMLPackageMapperConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.XMLPackageMappersConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.XMLTypeMapperConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.mappers.XMLTypeMappersConfigurator;
import com.turasolutions.sirius.diagram.producer.tura.config.tool.MessageTableTool;
import com.turasolutions.sirius.diagram.producer.tura.validation.CanvasValidation;
import com.turasolutions.sirius.diagram.producer.tura.validation.DataControlValidation;
import com.turasolutions.sirius.diagram.producer.tura.validation.RecipeValidatioin;
import com.turasolutions.sirius.diagram.producer.tura.validation.TypeValidation;
import com.turasolutions.sirius.diagram.producer.tura.validation.ViewValidation;
import com.turasolutions.sirius.dsl.config.ConfigProvider;
import com.turasolutions.sirius.dsl.config.ObjectWrapper;
import com.turasolutions.sirius.dsl.diagram.tContainer;
import com.turasolutions.sirius.dsl.diagram.tDiagram;
import com.turasolutions.sirius.dsl.diagram.tNode;
import com.turasolutions.sirius.dsl.table.tTableDiagram;
import com.turasolutions.sirius.dsl.treediagram.tTreeDiagram;
import com.turasolutions.sirius.dsl.treediagram.tTreeItem;
import com.turasolutions.sirius.dsl.viewpoint.tRoot;
import com.turasolutions.sirius.dsl.viewpoint.tViewPoint;

public class TuraDiagram {
    public static void main(String[] args) {
        tTableDiagram messageTableDiagram = null;
        tTreeDiagram treeNavigatorDiagram = null;
        tRoot root = new tRoot("tura", (ConfigProvider)new DiagramConfigProvider());
        tViewPoint viewPoint = root.addViewPoint("Domain tree", "domain");
        viewPoint.addValidationRules(TypeValidation.getRules());
        viewPoint.addValidationRules(DataControlValidation.getRules());
        viewPoint.addValidationRules(ViewValidation.getRules());
        viewPoint.addValidationRules(CanvasValidation.getRules());
        viewPoint.addValidationRules(RecipeValidatioin.getRules());
        messageTableDiagram = viewPoint.addTableDiagram("Message Library", "message.MessageLibrary");
        messageTableDiagram.addChild(MessageConfiguration.create().addChild(Table_Message_LanguageConfigurator.create()));
        messageTableDiagram.addChild(TranclationConfiguration.create());
        messageTableDiagram.addCreationTool(MessageTableTool.getCreateTools());
        viewPoint.addDiagram("Type package", "type.TypeGroup").addDefaultLayer().addChildren(new TypeDiagram().getChildrens());
        viewPoint.addDiagram("Artifact package", "artifact.ArtifactGroup").addDefaultLayer().addChildren(new ArtifactDiagram().getChildrens());
        viewPoint.addDiagram("Security rules set", "application.ApplicationRealm").addDefaultLayer().addChildren(new PermissionsDiagram().getChildrens());
        viewPoint.addDiagram("Infrastructure diagram", "infrastructure.EnterpriseInfrastructure").addDefaultLayer().addChildren(new InfrastructureDiagram().getChildrens());
        tDiagram recipeDiag = viewPoint.addDiagram("Recipe diagram", "recipe.Recipes");
        recipeDiag.addDefaultLayer().addChildren(new RecipeDiagram().getChildrens());
        viewPoint.addTreeDiagram("Style library", "application.ApplicationStyle").addChild(StyleLibraryConfigurator.create().addChild(StyleSetConfigurator.create()));
        viewPoint.addDiagram("Data Control", "form.Controls").addDefaultLayer().addChildren(new DataControlDiagram().getChildrens());
        viewPoint.addDiagram("Menu Definition", "form.MenuDefinition").addDefaultLayer().addChildren(new MenuDiagram().getChildrens());
        viewPoint.addDiagram("Deployment sequence", "recipe.Recipe").addDefaultLayer().addChildren(new DeploymentDiagram().getChildrens());
        tTreeDiagram treeDiagram = viewPoint.addTreeDiagram("Mapping diagram", "application.ApplicationMapper");
        treeDiagram.addChild(JavaTypeMappersConfigurator.create().addChild(JavaTypeMapperConfigurator.create()));
        treeDiagram.addChild(JavaPackageMappersConfigurator.create().addChild(JavaPackageMapperConfigurator.create()));
        treeDiagram.addChild(JavaScriptMappersConfigurator.create().addChild(JavaScriptMapperConfigurator.create()));
        treeDiagram.addChild(CSSMappersConfigurator.create().addChild(CSSMapperConfigurator.create()));
        treeDiagram.addChild(RoleMappersConfigurator.create().addChild(RoleMapperConfigurator.create()));
        treeDiagram.addChild(XMLPackageMappersConfigurator.create().addChild(XMLPackageMapperConfigurator.create()));
        treeDiagram.addChild(XMLTypeMappersConfigurator.create().addChild(XMLTypeMapperConfigurator.create()));
        treeDiagram = viewPoint.addTreeDiagram("Technologies diagram", "domain.DomainArtifacts");
        treeDiagram.addChild(TecnologiesTreeConfigurator.create().addChild(TechLeafConfigurator.create().addChild(GenerationHintsConfigurator.create().addChild(GenerationHintConfigurator.create())).addChild(ConfigurationVariablesConfigurator.create().addChild(ConfigVariableCongigurator.create())).addChild(ConfigHashsConfigurator.create().addChild(ConfigHashConfigurator.create()))));
        ObjectWrapper wrapper = (ObjectWrapper)tRoot.context.get("Technology" + tTreeItem.class.getName());
        TreeItemMapping mapper = (TreeItemMapping)wrapper.getWrapedObject();
        if (mapper == null) {
            throw new RuntimeException("Tool mapping is null");
        }
        mapper.getReusedTreeItemMappings().add(mapper);
        tDiagram tdiagram = viewPoint.addDiagram("Views diagram", "form.Views");
        tdiagram.addDefaultLayer().addChildren(new ViewsDiagram().getChildrens());
        viewPoint.addDiagram("Canvas diagram", "form.ViewArea").addDefaultLayer().addChildren(new CanvasDiagram().getChildrens());
        tdiagram.addCreationDiagramNavigation("Canvas diagram", new String[]{"ViewArea0" + tNode.class.getName(), "ViewArea1" + tNode.class.getName(), "ViewArea2" + tNode.class.getName(), "ViewArea3" + tNode.class.getName()}, "Default");
        tdiagram.addCreationDiagramNavigation("Menu Definition", new String[]{"MenuDefinition" + tNode.class.getName()}, "Default");
        recipeDiag.addCreationDiagramNavigation("Deployment sequence", new String[]{"Recipe" + tContainer.class.getName()}, "Default");
        treeNavigatorDiagram = viewPoint.addJavaExtension("org.tura.metamodel.sirius.diagram.designer.service.DiagramService").addTreeDiagram("Domain tree", "domain.Domain");
        treeNavigatorDiagram.addChild(DomainArtifactsConfigurator.create().addCreationTreeNavigation("Technologies diagram", "Domain tree").addChild(DomainArtifactConfigurator.create().addChildren(() -> new TuraArtifact().getConfig())));
        treeNavigatorDiagram.addChild(DomainApplicationsConfigurator.create().addChild(DomainApplicationConfigurator.create().addChildren(() -> new TuraApplicaton().getConfig())));
        treeNavigatorDiagram.addChild(DomainTypesConfigurator.create().addChild(DomainTypesRepositoryConfigurator.create().addChildren(() -> new TuraTypeRepository().getConfig())).addChild(PrimitivesGroupConfigurator.create().addChild(PrimitiveConfigurator.create())));
        root.save("tura");
    }
}
