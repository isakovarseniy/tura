/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2021 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
 */

operation domain::DomainArtifact initProxyRepositoryArtifacts(){
           var artifactGroup = self.createArtifactGroup("Proxy repository");
           
           artifactGroup.initRepositoryProxy();
           artifactGroup.initXSDSerializableObjects();
}


operation artifact::ArtifactGroup initRepositoryProxy(  ){
           var artifact = self.createArtifact("Repository proxy");
           artifact.template = "tura:/generation-templates/template/technologies/JEE/RepositoryProxy/mainRepositoryProxy.egl";
           
           artifact.addConfigVariable("OS","Generation path");
           artifact.addHint("JEE.Domain_model","Domain Interface");
           artifact.addHint("JEE.RepositoryProxy","Serializable Object");
           
           var modeQuery = artifact.createQuery(
                  "Query model classes",
                  "domain::DomainTypesRepository.allInstances()->select(r|r.oclAsType(domain::DomainTypesRepository).name='${Repository}').repositoryPackages->select(r|r.oclAsType(tura::type::TypeGroup).name='${Package}' ).types->select(r|r.oclIsKindOf(tura::type::Type ) and r.oclAsType(artifact::Categorized).classifiers->select(q|q.oclAsType(artifact::Classifier ).hint.uid='@{Serializable Object}')->size()>0)"
           );
           modeQuery.addParameter("Repository");
           modeQuery.addParameter("Package");
           
           
}

operation artifact::ArtifactGroup initXSDSerializableObjects(  ){
           var artifact = self.createArtifact("XSD serializable objects");
           artifact.template = "tura:/generation-templates/template/technologies/JEE/RepositoryProxy/mainXSDfromType.egl";


           artifact.addConfigVariable("OS","Generation path");
           artifact.addHint("JEE.RepositoryProxy","Serializable Object");
           artifact.addHint("JEE.JPA","Entity Object");
           artifact.addHint("JEE.Domain_model","Domain Object");
           artifact.addHint("JEE.Repository","Adapter");
           artifact.addHint("JEE.Repository","SPA Object");


           var modeQuery = artifact.createQuery(
                  "Query model classes",
                  "domain::DomainTypesRepository.allInstances()->select(r|r.oclAsType(domain::DomainTypesRepository).name='${Repository}').repositoryPackages->select(r|r.oclAsType(tura::type::TypeGroup).name='${Package}' ).types->select(r|(r.oclIsKindOf(tura::type::Type) or r.oclIsKindOf(tura::type::Enumerator)) and r.oclAsType(artifact::Categorized).classifiers->select(q|q.oclAsType(artifact::Classifier ).hint.uid='@{Serializable Object}')->size()>0)"
           );
           modeQuery.addParameter("Repository");
           modeQuery.addParameter("Package");


}

