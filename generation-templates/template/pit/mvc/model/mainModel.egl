[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2023 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "tura:/generation-templates/template/technologies/${Model_management_framework}.egl";
import "tura:/generation-templates/template/technologies/${Model_management_framework}/expressionImpl.eol";
import "tura:/generation-templates/template/pit/mvc/model/datacontrolUtil.eol";
import "tura:/generation-templates/template/technologies/${Environment}.egl";
${percent}${end}
[%

     var util = new Native('org.tura.metamodel.commons.Util');
     var forms = new Native('java.util.ArrayList');
     
     var frm1 = util.runQuery(model_mapper,"Query form",model_mapper);
     if ( frm1 <> null  and    frm1.size <> 0  ){
          forms.addAll(frm1);
     }
     var proxycomponents = util.runQuery(model_mapper,"Query repository proxy component",model_mapper);
     var proxyJavaComponent = null;
     if (proxycomponents.size() <> 0){
        proxyJavaComponent = util.getComponent(proxycomponents.get(0));
     }

     var frm2 = util.runQuery(model_mapper,"Query one form",model_mapper);
     if (frm2 <> null  and   frm2.size <> 0 ){
          forms.addAll(frm2);
     }

    if (forms.size() <> 0 ){

       for (form in forms){
       var i = 0;

         var hash = new Native("java.util.HashMap"); 
   
         var javaPath = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/"+component.basePackage.replaceAll("\\.","\\/")+"/";  
         var resourcePath =  util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/resources/";
         var uipackage = form.eContainer();

         hash.put("recipe",recipe);
         hash.put("ingredient",ingredient);
         hash.put("component",component);
         hash.put("model_mapper",model_mapper);
         hash.put("javaPath",javaPath);
         hash.put("resourcePath",resourcePath);
         hash.put("form",form);
         hash.put("uipackage",uipackage);
         hash.put("configuration",configuration);
         hash.put("beanFactoryName",util.mergeAndCapitalize(uipackage.name)+util.mergeAndCapitalize(form.name));
         hash.put("proxyJavaComponent",proxyJavaComponent);
         
         if (form.datacontrols == null or form.datacontrols.controls == null){
            continue;
          }
         form.datacontrols.processRootElement(recipe,ingredient);
         var controls =  form.datacontrols.controls;
         
         for (control in controls){

           control.processKeys(recipe,ingredient, proxyJavaComponent);
           control.processArtificialFields(recipe,ingredient);

           control.processTriggers(recipe,ingredient,hash);
           
           //Process relations only ones for all datacontrols;
           if (i = 0 ){
              control.processRelations(recipe,ingredient,hash);
              control.processDependencies(recipe,ingredient,hash);
           }
           
           i=i+1;   

           control.processDefaultQuery(recipe,ingredient,hash);
           control.definePager(recipe,ingredient,model_mapper,hash);
           
         }
         datacontrolgeneration(hash);
       }
     }  

%]