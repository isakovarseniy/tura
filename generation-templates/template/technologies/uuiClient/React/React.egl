[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2023 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%
import "tura:/generation-templates/template/technologies/uuiClient/viewPortHolderClass.egl";
import  "tura:/generation-templates/template/technologies/uuiClient/modelWrapper.egl";
import "tura:/generation-templates/template/technologies/uuiClient/callbackProducer.egl";
import "tura:/generation-templates/template/technologies/uuiClient/viewPortTriggerProducer.egl";
import  "tura:/generation-templates/template/technologies/uuiClient/menuPostProcessorProducer.egl";

operation  viewgeneration(hash) {
      var form = hash.get("form");   
      var  javaPath =  hash.get("javaPath");  
      var webapp = hash.get("webapp");
      var util = new Native('org.tura.metamodel.commons.Util');
      var allPorts = new Native('java.util.ArrayList'); 
      var actionTriggers = new Native('java.util.ArrayList'); 
      var scriptTriggers = new Native('java.util.ArrayList'); 
      var menuReferences = new Native('java.util.ArrayList'); 
      var modelRegistration = new Native('java.util.ArrayList'); 
      
      var f = new Native("org.tura.metamodel.generation.JavaFormatter");
      var x = new Native("org.eclipse.epsilon.egl.formatter.language.XmlFormatter"); 
      var n= new Native("org.tura.metamodel.generation.NullFormatter"); 
      
      
      var uipackage = hash.get("uipackage");

      hash.put("actionTriggers",actionTriggers);
      hash.put("scriptTriggers",scriptTriggers);
      hash.put("menuReferences",menuReferences);
      hash.put("modelRegistration",modelRegistration);

      
      if (form = null or form.view = null){
         return;   
      }
      for (canvas in form.view.canvases){
              if (not canvas.isKindOf(form::TabCanvas) ){
                  var ports = canvas.viewElement->select(p|p.isKindOf(form::ViewPort)); 
                   allPorts.addAll(ports);
              }
              canvas.createModel(hash);   
      }
      
      buildContextRefClass( hash,form); 
      menuGenerator(hash);
      menuProvider(hash);
      actionExecutor(hash);
      

      hash.put("allPorts",allPorts);
             
      %][%=viewPortHolderClass(hash)%][%      
      out.formatWith(f);
      util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/viewmodel/"  , "ViewPortHolder.java",out.toString());  
      out.formatWith(n);


      %][%=modelWrapper(hash)%][%
      out.formatWith(f);
      util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/viewmodel/"   , "ViewModelWrapper.java",out.toString());  
      out.formatWith(n);


      %][%=callbackProducer(hash)%][%
      out.formatWith(f);
      util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/producer/"  , "ViewModelCallBackProducer.java",out.toString());  
      out.formatWith(n);
      
      %][%=viewPortTriggerProducer(hash)%][%
      out.formatWith(f);
      util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/producer/"  , "ViewPortTriggerProducer.java",out.toString());  
      out.formatWith(n);

      
      %][%=menuPostProcessorProducer(hash)%][%
      out.formatWith(f);
      util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/producer/"  , "MenuPostProcessorProducer.java",out.toString());  
      out.formatWith(n);
      
      
      
}      


 %]