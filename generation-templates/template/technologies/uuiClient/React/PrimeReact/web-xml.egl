[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2021 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%
 import "tura:/generation-templates/template/commons/roleElementUtil.eol";
 import "tura:/generation-templates/template/commons/categorizedUtil.eol";
 import "tura:/generation-templates/template/commons/roleElementUtil.eol";

operation  web_xml(hash) {
     var util = new Native('org.tura.metamodel.commons.Util');
     var component = hash.get("component");
     var configuration = hash.get("configuration");
     var model_mapper = hash.get('model_mapper');
     
     var artifactShift = "";
     if ( model_mapper.artifactRoot <> null and not "".equals(model_mapper.artifactRoot)){
        artifactShift =  model_mapper.artifactRoot+"/";
     }
     
     var webapp =  util.getComponentRoot( component.getComponentRoot,configuration)+"/"+artifactShift+component.getArtifactId()+"/src/main/webapp/WEB-INF";
     var configuration = hash.get("configuration");
     var realms = hash.get("realms");
     var windows = hash.get("windows");
     var recipe = hash.get("recipe");
     var ingredient = hash.get("ingredient");
     

      var context =  findContext(model_mapper,component);
     
     
     
     
%]
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">


  <session-config>
    <session-timeout>
      [%=configuration.get("Session timeout")%]
    </session-timeout>
  </session-config>

     [%=webResourceMapping()%]
  
  [%
   if (realms <> null){
//Unclear why should I do like this   
     for ( ls in realms){
      for(realm in ls){

      for (rolepkg in realm.roles){ 
      for(role in rolepkg.roles){
       role.mappingRole2Role(recipe, ingredient);      
      %]
   <security-role>
    <role-name>[%=role.~localRoleName%]</role-name>
   </security-role>       
   
<security-constraint>
    <web-resource-collection>
        <web-resource-name>[%=context%]</web-resource-name>
        <url-pattern>/rest/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
        <role-name>[%=role.~localRoleName%]</role-name>
    </auth-constraint>
</security-constraint>         
    
    [%  
        }
       }
      }
      }
   }  

  %]
</web-app>

[%
     util.saveFile( webapp,"web.xml",out.toString());   
}     
%]