[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2021 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   http://sourceforge.net/p/tura/wiki/Home/
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%@template
operation form::LayerHolder createTag(hash) {
     var key = getKey(hash);
     var clientLibraryPackage = hash.get('clientLibraryPackage');
     
     var util = new Native('org.tura.metamodel.commons.Util');
     var model_mapper = hash.get('model_mapper');
     
     
     var layout = "TLayerHolder";
     if (self.findClassifier(util.getHint(model_mapper,"responsive.grid"))){
        layout="TLayerHolderResponsive";
     }
     if (self.findClassifier(util.getHint(model_mapper,"react.dynamicLayout"))){
        var generateComponents = hash.get("generateComponents");
        generateComponents.add(self);
        %]
          <TLayerHolder_[%=self.mkuid()%] id="[%=self.uid%]" contextManager={this.contextManager}  [%=key%]/>
        [%
        return;
     }
     populateInclude(hash,"{"+layout+"}",  clientLibraryPackage+"/component/"+layout);
     

%]
       <[%=layout%] id="[%=self.uid%]" contextManager={this.contextManager}  [%=key%]>
[%
                for (element in self.children.sortBy(q|q.order)){
%]                
                    [%=element.createTag(hash)%]
[%
                }  
%]

       </[%=layout%] >
            
[%
}

@template
operation  form::LayerHolder createComponent(hash) {
  var util = new Native('org.tura.metamodel.commons.Util');
  var model_mapper = hash.get('model_mapper');
  var clientLibraryPackage = hash.get('clientLibraryPackage');
   
   populateInclude(hash,"{TLayerHolder}",  clientLibraryPackage+"/component/TLayerHolder");
   populateInclude(hash,"{registry}",  clientLibraryPackage+"/plugin/Registry");
  
  %]
  
  export class TLayerHolder_[%=self.mkuid()%] extends TLayerHolder {
        constructor(props) {
         super(props);
         }
         
         getComponentCildren(){
               var array = [];
 [%
                for (element in self.children.sortBy(q|q.order)){
%]                
                  array.push(this.[%=element.mkuid()%]);
[%
                }  
%]
             return array;
         }
         
         
         
    render() {
        if ( !this.state.rendered ) {
            return (
                <></>
            );
        }
           var lines = [];
 [%
                for (element in self.children.sortBy(q|q.order)){
                   element.~ref = true;
%]                
             var [%=element.mkuid()%] =  [%=element.createTag(hash)%];
             lines["[%=element.mkuid()%]"] =  [%=element.mkuid()%];
[%
                }  
%]
       let externalLayoutManager = registry.getComponentLayoutManager(this.id);
        if ( externalLayoutManager !== null && typeof externalLayoutManager !== "undefined" ){
            return externalLayoutManager.getLayout(lines, this.contextManager, this.state,this);
        }
       

        return (
             <table>
        
[%
                for (element in self.children.sortBy(q|q.order)){
%]
                  <tr>
                   {[%=element.mkuid()%]}
                   </tr>
[%
                }  
%]
            </table>

         );         
      }
     }
  
  [%
}


%]