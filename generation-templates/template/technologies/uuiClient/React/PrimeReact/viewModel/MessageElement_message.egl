[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2021 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%@template
operation form::MessageElement createModelAsMessage(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     var javaPath = hash.get("javaPath");   
     var form = hash.get("form");   
     var uipackage = hash.get("uipackage");
     var model_mapper = hash.get('model_mapper');
     var component  = hash.get("component");
     
     util.traceIfDebug("UI element","MessageElement model start: "+self.uid);     
     
    %]
       package [%=component.basePackage%].[%=util.mergeAndCapitalize(uipackage.name).toLowerCase()%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].viewmodel; 
            
        import org.tura.platform.uuiclient.rest.UuiElement;
     
       public class MessageElement_[%=self.mkuid_()%]  extends UuiElement{
            private String id = "[%=self.uid%]";
            private String clazz = "[%=component.basePackage%].[%=util.mergeAndCapitalize(uipackage.name).toLowerCase()%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].viewmodel.MessageElement_[%=self.mkuid_()%]";

		    private String severity;
		    private String summary;
		    private String detail;
		    private boolean closable;
		    private boolean sticky;
		    private int life;
		    private java.util.Map<String,String> messageList;
		    private boolean rendered = true;
		    
		    
       
		public java.util.Map<String,String> getMessageList() {
			return messageList;
		}
	
		public void setMessageList(java.util.Map<String,String> messageList) {
			this.messageList = messageList;
		}
       
       
		public String getSeverity() {
			return severity;
		}
	       
		public void setSeverity(String severity) {
			this.severity = severity;
		}
	
		public String getSummary() {
			return summary;
		}
	
		public void setSummary(String summary) {
			this.summary = summary;
		}
	
		public String getDetail() {
			return detail;
		}
	
		public void setDetail(String detail) {
			this.detail = detail;
		}
	
		public boolean isClosable() {
			return closable;
		}
	
		public void setClosable(boolean closable) {
			this.closable = closable;
		}
	
		public boolean isSticky() {
			return sticky;
		}
	
		public void setSticky(boolean sticky) {
			this.sticky = sticky;
		}
	
		public int getLife() {
			return life;
		}
	
		public void setLife(int life) {
			this.life = life;
		}
       
	    public String getClazz() {
			return clazz;
		}
	
		public void setClazz(String clazz) {
			this.clazz = clazz;
		}
       
          public boolean isRendered() {
		      return rendered;
	      }

		  public void setRendered(boolean rendered) {
				this.rendered = rendered;
		  }
			
          
			public String getId() {
				return id;
			}
			public void setId(String id) {
				this.id = id;
			}
			
          
			public void initContext(org.tura.platform.datacontrol.ELResolver elResolver,org.tura.platform.uuiclient.rest.client.commands.ResponseState responseState) throws Exception{
			       	this.messageList = new java.util.HashMap<String,String>();
			       	[%
			     var hints = new Native('java.util.HashMap');
			     if (self.multiLangLabel <> null  and  self.multiLangLabel.value <> null  ){
			     %]String message=(String ) resolve( "[%=buildExpression(self.multiLangLabel,hints,hash)%]", elResolver);[%
                 hints.put("messageCode",true);
                 
			     %]String code = "[%=buildExpression(self.multiLangLabel,hints,hash)%]";
			     messageList.put(code,message);
			     [%

                 hints.remove("messageCode");
			     }
			       	%]
			    
			}

			public UuiElement restoreContext( java.util.Map<String, Object> map,org.tura.platform.uuiclient.rest.DataUpdateRequest request,org.tura.platform.uuiclient.rest.client.commands.ResponseState responseState, java.util.List<org.tura.platform.uuiclient.rest.EventDescription> eventsToFire) throws Exception {
			     return this;
			}
			
	       public void applyContext( org.tura.platform.datacontrol.ELResolver elResolver,org.tura.platform.uuiclient.rest.client.commands.ResponseState responseState) throws Exception {
            } 			

          
			private  Object resolve(String expression, org.tura.platform.datacontrol.ELResolver elResolver ){
			    if (expression.length()>3 && "#{".equals(expression.substring(0, 2))) {
                    return  elResolver.getValue(expression);
                } else {
                   return expression;
                }
			} 
          
          
        }    

     [%
     
     var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 
     out.formatWith(f);
     util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/viewmodel/",  "MessageElement_"+self.mkuid_() +".java",out.toString());   

     util.traceIfDebug("UI element","MessageElement  model end: "+self.uid);     

}
%]