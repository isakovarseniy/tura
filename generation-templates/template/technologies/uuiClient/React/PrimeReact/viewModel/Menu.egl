[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2020 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   http://sourceforge.net/p/tura/wiki/Home/
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%@template
operation  form::Menu createModel(hash) { 
     var util = new Native('org.tura.metamodel.commons.Util');
     var javaPath = hash.get("javaPath");   
     var form = hash.get("form");   
     var uipackage = hash.get("uipackage");
     var model_mapper = hash.get('model_mapper');
     var component  = hash.get("component");
     var menuReferences = hash.get("menuReferences");
     hash.get("menuReferences").add(self);
     
     util.traceIfDebug("UI element","Menu model start: "+self.uid);     
     
     %]
     
       package [%=component.basePackage%].[%=util.mergeAndCapitalize(uipackage.name).toLowerCase()%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].viewmodel; 
            
		import org.tura.platform.uuiclient.menu.DefaultMenuModel;
		import org.tura.platform.uuiclient.rest.UuiElement;
		import java.util.Map;
        
     
       public class Menu_[%=self.mkuid_()%]  extends UuiElement{
       
          private String id = "[%=self.uid%]";
          private String clazz = "[%=component.basePackage%].[%=util.mergeAndCapitalize(uipackage.name).toLowerCase()%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].viewmodel.Menu_[%=self.mkuid_()%]";
          private org.tura.platform.uuiclient.menu.DefaultMenuModel model;
          
		  private String style;
		  private String className;
	      private Integer  activeIndex;
          
		  private boolean rendered = true;
       
       
	public Integer getActiveIndex() {
		return activeIndex;
	}

	public void setActiveIndex(Integer activeIndex) {
		this.activeIndex = activeIndex;
	}
       
    public String getStyle() {
        return style;
    }

    public void setStyle(String style) {
        this.style = style;
    }

    public String getClassName() {
        return className;
    }

    public void setClassName(String className) {
        this.className = className;
    }
       
       
	    public String getClazz() {
			return clazz;
		}
	
		public void setClazz(String clazz) {
			this.clazz = clazz;
		}
       
          public boolean isRendered() {
		      return rendered;
	      }


		  public void setRendered(boolean rendered) {
				this.rendered = rendered;
		  }
          
          
		    public String getId() {
		        return id;
		    }
		
		    public void setId(String id) {
		        this.id = id;
		    }
          
			public DefaultMenuModel getModel() {
				return model;
			}
		
			public void setModel(DefaultMenuModel model) {
				this.model = model;
			}
          
          
			public void initContext(org.tura.platform.datacontrol.ELResolver elResolver,org.tura.platform.uuiclient.rest.client.commands.ResponseState responseState) throws Exception{
			    [%=self.style(hash)%]
			    [%=self.styleClass(hash)%]

			    String modelExpression =  "#{menuProvider[%=util.mergeAndCapitalize(uipackage.name)%][%=util.mergeAndCapitalize(form.name)%]}";
			    [%=component.basePackage%].[%=util.mergeAndCapitalize(uipackage.name).toLowerCase()%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].menu.MenuProvider menuProvider = ([%=component.basePackage%].[%=util.mergeAndCapitalize(uipackage.name).toLowerCase()%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].menu.MenuProvider) elResolver.getValue(modelExpression); 
			    this.model = menuProvider.getModel("[%=self.mkuid_()%]");
			    
			    [%
			          var hints = new Native('java.util.HashMap');
			          var expression = constructExpression(self,"tabMenu.currentItem",hints, hash);
				       if (expression <> "" ){
				          %]
				          this.activeIndex =  (int)resolve("[%=expression%]", elResolver);
				          [%
				       }
			    %]
			    
           }
           
		   @SuppressWarnings("unchecked")
			public UuiElement restoreContext( java.util.Map<String, Object> map,org.tura.platform.uuiclient.rest.DataUpdateRequest request, org.tura.platform.uuiclient.rest.client.commands.ResponseState responseState,java.util.List<org.tura.platform.uuiclient.rest.EventDescription> eventsToFire) throws Exception {

            DefaultMenuModel menu = new DefaultMenuModel();
            this.model = (DefaultMenuModel) menu.restoreContext((Map<String, Object>) map.get(
                        "model"), request, responseState, eventsToFire);

			       return this;
			   }
			
			public void applyContext( org.tura.platform.datacontrol.ELResolver elResolver,org.tura.platform.uuiclient.rest.client.commands.ResponseState responseState) throws Exception {
            } 			
          

			private  Object resolve(String expression, org.tura.platform.datacontrol.ELResolver elResolver ){
			    if (expression.length()>3 && "#{".equals(expression.substring(0, 2))) {
                    return  elResolver.getValue(expression);
                } else {
                   return expression;
                }
			} 
          
     
     }
     [%
     
     var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 
     out.formatWith(f);
     util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/viewmodel/",  "Menu_"+self.mkuid_()+".java",out.toString());   
     
     util.traceIfDebug("UI element","Menu model end: "+self.uid);     

%]
     [%=self.generateComponentBody(hash)%]     
[%
     
}

operation form::Menu generateComponentBody(hash){
}

operation form::Menu className(hash) { 
   return self.eClass().getName();
}


%]