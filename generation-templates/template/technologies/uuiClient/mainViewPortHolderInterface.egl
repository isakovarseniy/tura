[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2021 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   http://sourceforge.net/p/tura/wiki/Home/
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%

     var util = new Native('org.tura.metamodel.commons.Util');
     var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 

     var forms = new Native('java.util.ArrayList');
     
     var frm1 = util.runQuery(model_mapper,"Query form",model_mapper);
     if ( frm1 <> null  and    frm1.size <> 0  ){
          forms.addAll(frm1);
     }

     var frm2 = util.runQuery(model_mapper,"Query one form",model_mapper);
     if (frm2 <> null  and   frm2.size <> 0 ){
          forms.addAll(frm2);
     }



    if (forms.size() <> 0 ){
       for (form in forms){

         var hash = new Native("java.util.HashMap"); 
   
         var javaPath = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/"+component.basePackage.replaceAll("\\.","\\/")+"/";  
         var resourcePath =  util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/resources/";
         var webapp =  util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/webapp/";
         var uipackage = form.eContainer();

         hash.put("recipe",recipe);
         hash.put("ingredient",ingredient);
         hash.put("component",component);
         hash.put("model_mapper",model_mapper);
         hash.put("javaPath",javaPath);
         hash.put("resourcePath",resourcePath);
         hash.put("webapp",webapp);
         hash.put("form",form);
         hash.put("configuration",configuration);
         hash.put("uipackage",uipackage);
         
         var allPorts = new Native('java.util.ArrayList'); 
         
         for (canvas in form.view.canvases){
              if (not canvas.isKindOf(form::TabCanvas) ){
                  var ports = canvas.viewElement->select(p|p.isKindOf(form::ViewPort)); 
                   allPorts.addAll(ports);
              }
        }         
         
         hash.put("allPorts",allPorts);

         if (allPorts.size() <> 0 ){
            var viewportclass : Template = util.loadTemplate("tura:/generation-templates/template/technologies/uuiClient/viewPortHolderInterface.egl",hash,TemplateFactory);
            viewportclass.setFormatter(f);
            var buffer = viewportclass.process();
            util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/viewmodel/"  , "IViewPortHolder.java",buffer);
         }     
       }
     }  

%]