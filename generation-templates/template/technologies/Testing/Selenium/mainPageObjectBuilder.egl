[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2020 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   http://sourceforge.net/p/tura/wiki/Home/
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%
     var util = new Native('org.tura.metamodel.commons.Util');
     var queryHelper = new Native('org.tura.metamodel.commons.QueryHelper');
     var forms = util.runQuery(model_mapper,"Query form",model_mapper);
      var f = new Native("org.tura.metamodel.generation.JavaFormatter");

    if (forms.size() <> 0 ){
       for (form in forms){

         var hash = new Native("java.util.HashMap"); 
   
         var javaPath = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/"+component.basePackage.replaceAll("\\.","\\/")+"/";  
         var resourcePath =  util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/resources/";
         var uipackage = form.eContainer();

         hash.put("recipe",recipe);
         hash.put("ingredient",ingredient);
         hash.put("component",component);
         hash.put("model_mapper",model_mapper);
         hash.put("javaPath",javaPath);
         hash.put("resourcePath",resourcePath);
         hash.put("form",form);
         hash.put("configuration",configuration);
         hash.put("uipackage",uipackage);
         hash.put("View_implementation",View_implementation);
         
         if (form.view = null or form.view= null)
            return;   

        var array = new Native("java.util.ArrayList"); 
         for (canvas in form.view.canvases){
              if (canvas.isKindOf(form::ViewPortHolder)  and canvas.isKindOf(form::CanvasFrame) ){
                  array.add(canvas);
                  if (canvas.viewElement <> null)
                     array.addAll(canvas.viewElement);
                  var uiElementsList = queryHelper.findUIElementsForPage(canvas); 
                  hash.put("uiElementsList",uiElementsList);
                  hash.put("canvas",canvas);
                  var pageobject : Template = util.loadTemplate("tura:/generation-templates/template/technologies/Testing/Selenium/PageObject.egl",hash,TemplateFactory);
                  pageobject.setFormatter(f);
                  var buffer = pageobject.process();
                  util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/pageobject/"  ,  util.mergeAndCapitalize(canvas.name) +  "PageObject.java",buffer);  
              }
           }
          hash.put("uiElementsList",array);
          var pageobject : Template = util.loadTemplate("tura:/generation-templates/template/technologies/Testing/Selenium/MainHolderPageObject.egl",hash,TemplateFactory);
          pageobject.setFormatter(f);
          var buffer = pageobject.process();
          util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/pageobject/"  ,  "MainHolderPageObject.java",buffer);  

       }
     }  
%]