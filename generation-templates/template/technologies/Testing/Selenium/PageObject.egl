[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2022 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "tura:/generation-templates/template/technologies/Testing/Selenium/${View_implementation}/webElementAccessor.egl";
import "tura:/generation-templates/template/technologies/${View_implementation}.egl";
${percent}${end}
[%
     var util = new Native('org.tura.metamodel.commons.Util');
%]
  package [%=component.basePackage%].[%=util.mergeAndCapitalize(uipackage.name).toLowerCase()+"."+util.mergeAndCapitalize(form.name).toLowerCase()+".pageobject"%];
  
  public class [%=util.mergeAndCapitalize(canvas.name)%]PageObject{
     org.openqa.selenium.WebDriver webDriver;
     
     public [%=util.mergeAndCapitalize(canvas.name)%]PageObject(org.openqa.selenium.WebDriver webDriver){
         this.webDriver = webDriver;
     }
     
  [%for(uiElement in uiElementsList){
    var methodName = uiElement.mkuid();
    if (uiElement.nickname.isDefined())
      methodName = uiElement.nickname;
    else{
       if ( uiElement.findClassifier(util.getHint(model_mapper,"Web element name")) ){
         methodName = uiElement.~hintDetails;
       }
    } 
  %]
    [%=uiElement.accessor(uiElement.uid,methodName,model_mapper)%]
  [%
  }
  %]
  }

