[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2022 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "tura:/generation-templates/template/technologies/${Environment}.egl";
import "tura:/generation-templates/template/commons/categorizedUtil.eol";
${percent}${end}
[%
    var util = new Native('org.tura.metamodel.commons.Util');
     
    var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 

    var javaPath = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/"+component.basePackage.replaceAll("\\.","\\/")+"/";  
    var resourcePath =  util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/resources/";
    var uipackage = form.eContainer();

    %][%=clientRegistry(component,uipackage, form,controlSuffix)%][%
    
    out.formatWith(f);
    util.saveFile( javaPath+"/"+util.mergeAndCapitalize(uipackage.name).toLowerCase()+"/"+util.mergeAndCapitalize(form.name).toLowerCase()+"/datacontrol/"  , "CdiClient"+  util.mergeAndCapitalize(controlSuffix) +"Registry.java",out.toString());   

%]

[% @template
operation  clientRegistry(component,uipackage,form, suffix) {

     var util = new Native('org.tura.metamodel.commons.Util');
     var dotsuffix =  suffix;
     if ( not "".equals(suffix)  ){
     dotsuffix = suffix+".";
     }
     
     
%]
package  [%=component.basePackage%].[%=util.mergeAndCapitalize(uipackage.name).toLowerCase()%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%].datacontrol;  

import javax.annotation.PostConstruct;
import javax.enterprise.context.ApplicationScoped;
import javax.inject.Inject;

import org.tura.platform.repository.cdi.ClientRegistry;
import org.tura.platform.repository.core.Registry;
import org.tura.platform.repository.cpa.InitCpaRepositoryInterface;
import org.tura.platform.repository.cpa.storage.CpaServiceInstantiator;
import org.tura.platform.repository.cpa.storage.CpaStorageProvider;
import org.tura.platform.repository.spa.SpaObjectRegistry;


@ApplicationScoped
@ClientRegistry("[%=dotsuffix%][%=util.mergeAndCapitalize(uipackage.name).toLowerCase()%].[%=util.mergeAndCapitalize(form.name).toLowerCase()%]")
public class CdiClient[%=util.mergeAndCapitalize(suffix) %]Registry extends Registry {

	private static final long serialVersionUID = 1L;

    @Inject
    private  InitCpaRepositoryInterface  init;

	@PostConstruct
	public void init() {

		try {
			
			SpaObjectRegistry cpaSpaRegistry = new SpaObjectRegistry();

			CpaStorageProvider cpaStorageProvider = new CdiClientCpaStorage[%=util.mergeAndCapitalize(suffix)%]Provider();

            init.setRegistry(this);
            init.setSpaObjectRegistry(cpaSpaRegistry);
			init.initClassMapping();
			init.initCommandProducer();
			init.initProvider();
			init.initRules();

			cpaSpaRegistry.getRegistry(init.getName()).addInstantiator(new CpaServiceInstantiator(
					cpaSpaRegistry, init.getName(), this, cpaStorageProvider));
			

		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}
}


[%

}
%]