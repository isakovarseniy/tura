[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2021 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
<#assign percent = "%" >
<#assign start = "[" >
<#assign end = "]" >
${start}${percent} 
import "tura:/generation-templates/template/commons/typeElementUtil.eol";
import "tura:/generation-templates/template/commons/categorizedUtil.eol";
import "tura:/generation-templates/template/commons/assosiation.eol";

 ${percent}${end}
 
 [%
     var util = new Native('org.tura.metamodel.commons.Util');
     var alltypes = new Native('java.util.ArrayList');
     var hash = new Native('java.util.HashMap');

     var type;
     var f = new Native("org.eclipse.epsilon.egl.formatter.language.XmlFormatter"); 


     var types = util.runQuery(model_mapper,"Query model classes",model_mapper);
     var nsHash = new Native("java.util.HashMap"); 
     var mhash = new Native('java.util.HashMap');
 
      if (types <> null and types.size <> 0 ){
        var typeCollection = new Native("java.util.ArrayList"); 
	    for (type in types){
            if (type.isKindOf(type::Enumerator )){
             typeCollection.add(type);
            }else{
               type.collectType(typeCollection,model_mapper,null,null,null);
            }
	    }
 
      var i = 0; 
      for(type in typeCollection){
         type.mappingType2XML(recipe,ingredient);
         if (nsHash.get(type.~namespace) == null ){
            var arr =  new Native("java.util.ArrayList");
            var col = new Native("java.util.HashMap"); 
            arr.add(col);
            arr.add(i);
            nsHash.put(type.~namespace,arr);
            i = i +1;
         }
         nsHash.get(type.~namespace).get(0).put(type.~fullname,type);
      }
 
      var path; 
      for( targetnamespace in nsHash.keySet()  ){
		path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/xsd/";  
        var returnHash = new Native('java.util.HashMap');
		hash.put("returnHash",returnHash);
		hash.put("fullCollection",typeCollection);
		hash.put("fullHash",nsHash);
		hash.put("typeCollection",nsHash.get(targetnamespace).get(0));
		hash.put("targetnamespace",targetnamespace);
		hash.put("recipe",recipe);
		hash.put("ingredient",ingredient);
		hash.put("component",component);
		hash.put("model_mapper",model_mapper);
		hash.put("path",path);    
		hash.put("mhash",mhash);
	 
	    var xsd : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/xsd.egl",hash,TemplateFactory);
	    xsd.setFormatter(f);
	    var buffer = xsd.process();


		hash.put("body",buffer);
	    var xsdHeader : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/xsdHeader.egl",hash,TemplateFactory);
	    xsdHeader.setFormatter(f);
	    var buffer = xsdHeader.process();
	    
	    util.saveFile( path, "schema_"+nsHash.get(targetnamespace).get(1)+".xsd",buffer);   
      
      } 

	    var xsdHeader : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/simpleTypeExtension.egl",hash,TemplateFactory);
	    xsdHeader.setFormatter(f);
	    var buffer = xsdHeader.process();
	    
	    util.saveFile( path, "extension.xsd",buffer);   



		var path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/xjb/";  

	    var jaxbBinding : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/jaxbBinding.egl",hash,TemplateFactory);
	    jaxbBinding.setFormatter(f);
	    var buffer = jaxbBinding.process();
	    
	    util.saveFile( path, "bindings.xjb",buffer);   

		var path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/org/acme/foo/";  
        var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 

	    var dateadapter : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/dateAdapter.egl",hash,TemplateFactory);
	    dateadapter.setFormatter(f);
	    var buffer = dateadapter.process();
	    
	    util.saveFile( path, "DateAdapter.java",buffer);   

	    var dateadapter : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/uuidAdapter.egl",hash,TemplateFactory);
	    dateadapter.setFormatter(f);
	    var buffer = dateadapter.process();
	    
	    util.saveFile( path, "UuidConverter.java",buffer);   

	    var instantdapter : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/instantAdapter.egl",hash,TemplateFactory);
	    instantdapter.setFormatter(f);
	    var buffer = instantdapter.process();
	    
	    util.saveFile( path, "InstantConverter.java",buffer);   



	    var repoKeyPathAdapter : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/repoKeyPathAdapter.egl",hash,TemplateFactory);
	    repoKeyPathAdapter.setFormatter(f);
	    var buffer = repoKeyPathAdapter.process();
	    
	    util.saveFile( path, "RepoKeyPathConverter.java",buffer);   



   }
%]