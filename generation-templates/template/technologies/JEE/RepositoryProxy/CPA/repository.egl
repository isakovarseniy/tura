[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2023 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%
import "tura:/generation-templates/template/commons/typeElementUtil.eol";
import "tura:/generation-templates/template/commons/categorizedUtil.eol";
import "tura:/generation-templates/template/commons/assosiation.eol";
import "tura:/generation-templates/template/technologies/JEE/Repository/repositoryCommon.egl";
import "tura:/generation-templates/template/technologies/JEE/JPA/entitypk.egl";
import "tura:/generation-templates/template/technologies/JEE/RepositoryProxy/CPA/mapperClass.egl";
import "tura:/generation-templates/template/technologies/JEE/CDI/datacontrol/beans-xml.egl";
  
     var util = new Native('org.tura.metamodel.commons.Util');
     var alltypes = new Native('java.util.ArrayList');
     var hash = new Native('java.util.HashMap');
     var t2view = new Native("java.util.HashMap"); 
     var t2model = new Native("java.util.HashMap"); 
     var templateStore = new Native('java.util.HashMap');


     var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 
     var x = new Native("org.eclipse.epsilon.egl.formatter.language.XmlFormatter"); 
     var n= new Native("org.tura.metamodel.generation.NullFormatter"); 

      if (typeCollection <> null and typeCollection.size <> 0 ){
      
        var resourcePath = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/resources/";  

	   %][%=beanxml()%][% 
	   out.formatWith(x);
	   util.saveFile( resourcePath+"/META-INF/"  , "beans.xml",out.toString());   
	   out.formatWith(n);

	  var savepackage = null;

      for(type in typeCollection){
         type.mappingType2Java(recipe,ingredient,'MODEL');
         var h = new Native("java.util.HashMap"); 
         h.put("class",type.~class);
         h.put("package",type.~package);
         h.put("fullName",type.~fullName);
         t2model.put(type,h);
         
         type.mappingType2Java(recipe,ingredient,'VIEW');
         var h = new Native("java.util.HashMap"); 
         h.put("class",type.~class);
         h.put("package",type.~package);
         h.put("fullName",type.~fullName);
         t2view.put(type,h);
      }	    
 
      var path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/";  
      for(type in t2model.keySet()){
        if (not type.~primaryKey.isDefined()  ){
           continue;
        }

       if (
		type.findClassifier(util.getHint(model_mapper,"Serializable Object"))
       ){
       
	    hash.put("t2model",t2model);
	    hash.put("t2view",t2view);

	    hash.put("type",type);
	    hash.put("recipe",recipe);
	    hash.put("ingredient",ingredient);
	    hash.put("component",component);
	    hash.put("model_mapper",model_mapper);
	    hash.put("path",path);
		    
	    util.populateTechnologies(hash,model_mapper);
		
		
	    if (type.~primaryKey.size() >1 ){
	         type.mappingType2Java(recipe,ingredient,'MODEL');
		     %][%=entitypk(hash)%][%  
		      out.formatWith(f);
		      util.saveFile( path+t2model.get(type).get("package").replaceAll("\\.","\\/"), t2model.get(type).get("class") + "PK.java",out.toString());   
		      out.formatWith(n);
		}
		
	    %][%=mapperClass(hash)%][%
		out.formatWith(f);
	    util.saveFile( path+t2view.get(type).get("package").replaceAll("\\.","\\/")+"/mapper", t2view.get(type).get("class")+"ProxyMapper.java",out.toString());   
		out.formatWith(n);
		
        }
   }
 	hash.put("savepackage",component.getBasePackage());
 	hash.put("typeCollection",typeCollection);
    var init : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/CPA/initCPARepository.egl",hash,TemplateFactory,templateStore);
    init.setFormatter(f);
    var buffer = init.process();
    util.saveFile( path+component.getBasePackage().replaceAll("\\.","\\/"), "InitCPARepository.java",buffer);   
   
    var init : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/CPA/InstantiatorCpaRepository.egl",hash,TemplateFactory,templateStore);
    init.setFormatter(f);
    var buffer = init.process();
    util.saveFile( path+component.getBasePackage().replaceAll("\\.","\\/"), "CPARepositoryInstantiator.java",buffer);   
   
	 var inheritance : Template = util.loadTemplate("tura:/generation-templates/template/technologies/JEE/RepositoryProxy/inheritance.egl",hash,TemplateFactory);
     inheritance.setFormatter(f);
	 var buffer = inheritance.process();
	 util.saveFile( path+component.basePackage.replaceAll("\\.","\\/"), "ObjectInheritance.java",buffer);   
	   
   
 }  
%]