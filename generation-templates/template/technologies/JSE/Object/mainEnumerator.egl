[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2023 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%
import "tura:/generation-templates/template/commons/typeElementUtil.eol";
import "tura:/generation-templates/template/technologies/JSE/Object/enumerator.egl";
  
     var util = new Native('org.tura.metamodel.commons.Util');
     var alltypes = new Native('java.util.ArrayList');
     var hash = new Native('java.util.HashMap');

     var type;

     var types = util.runQuery(model_mapper,"Query model enum",model_mapper);
     if (types <> null and types.size <> 0 ){
         alltypes.addAll(types); 
     }

     var types = util.runQuery(model_mapper,"Query enum  from domain package",model_mapper);
     if (types <> null and types.size <> 0 ){
         alltypes.addAll(types); 
     }


    if (alltypes.size() <> 0 ){
       for (type in alltypes){
          type.mappingType2Java(recipe,ingredient);
          
          var path = util.getComponentRoot( component.getComponentRoot,configuration)+"/"+component.getArtifactId()+"/src/main/java/";  
          hash.put("type",type);
          hash.put("recipe",recipe);
          hash.put("ingredient",ingredient);
          hash.put("component",component);
          hash.put("model_mapper",model_mapper);
          hash.put("path",path);    
          
          enumerator_generation(hash);
       }
    }

@template
operation  enumerator_generation(hash) {

   var util = new Native('org.tura.metamodel.commons.Util');
   var f = new Native("org.tura.metamodel.generation.JavaFormatter"); 
   var n= new Native("org.tura.metamodel.generation.NullFormatter"); 
        
    var type =  hash.get("type");
    var recipe = hash.get("recipe");
    var ingredient =  hash.get("ingredient");
    var component = hash.get("component");
    var model_mapper = hash.get("model_mapper");
    var path = hash.get("path");
    
    util.populateTechnologies(hash,model_mapper);

     %][%=enumerator(hash)%][%  
      out.formatWith(f);
      util.saveFile( path+type.~package.replaceAll("\\.","\\/"), type.~class + ".java",out.toString());   
      out.formatWith(n);
}
%]