[%
/*
 *   Tura - Application generation solution
 *
 *   Copyright (C) 2008-2023 2182342 Ontario Inc ( arseniy.isakov@turasolutions.com ).
 *
 *
 *   This project includes software developed by Arseniy Isakov
 *   https://github.com/isakovarseniy/tura
 *   All rights reserved. This program and the accompanying materials
 *   are made available under the terms of the Eclipse Public License v2.0
 *   which accompanies this distribution, and is available at
 *   http://www.eclipse.org/legal/epl-v20.html
*/
%]
[%
@template
operation topObjectPager(hash){
     var util = new Native('org.tura.metamodel.commons.Util');
	 var recipe = hash.get("recipe");
	 var ingredient = hash.get("ingredient");
	 var component = hash.get("component");
	 var model_mapper = hash.get("model_mapper");
     var type = hash.get("type");
     var objPackage = hash.get("objPackage");

%]
package [%=objPackage%];


import org.tura.platform.datacontrol.commons.TuraException;
import org.tura.platform.repository.core.ObjectControl;
import org.tura.platform.datacontrol.commons.SearchCriteria;
import java.util.List;


public class [%=type.~class%]Pager extends org.tura.platform.datacontrol.Pager<[%=type.~fullName%]> implements java.io.Serializable{

    private static final long serialVersionUID = 1L;
    private org.tura.platform.repository.proxy.access.SearchableList<[%=type.~fullName%]>  list;

    public [%=type.~class%]Pager(org.tura.platform.datacontrol.DataControl<[%=type.~fullName%]> datacontrol){
       this.datacontrol = datacontrol;
        this.datacontrol .setPager(this);
    }

    protected [%=type.~fullName%] connectObject(Object obj) throws TuraException {
		try {
			if (datacontrol.getParent() != null) {

				List<org.tura.platform.datacontrol.commons.SearchCriteria> ls = datacontrol.getParent().getChildSearchCriteria();
				org.tura.platform.repository.core.ObjectControl cnt = (org.tura.platform.repository.core.ObjectControl) obj;

				org.tura.platform.datacontrol.metainfo.Relation rel = datacontrol.getParent();
				org.tura.platform.repository.operation.AddLinkOperation lo = new org.tura.platform.repository.operation.AddLinkOperation();
				for (org.tura.platform.datacontrol.metainfo.PropertyLink lnk : rel.getLinks()) {
					lo.addLink(lnk.getParent(), lnk.getChild());
				}
				lo.setMaster((org.tura.platform.repository.core.ObjectControl) rel.getMasterCurrentObject());
				lo.setDetail(cnt);
				cnt.setLinkOperation(lo);

				for (org.tura.platform.datacontrol.commons.SearchCriteria sc : ls) {

					String name = sc.getName();
					String className = sc.getClassName();
					Object value = sc.getValue();
					if (!value.equals(org.tura.platform.datacontrol.commons.Constants.UNDEFINED_PARAMETER)) {
						String method = "set" + org.apache.commons.lang.StringUtils.capitalize(name);
						org.tura.platform.datacontrol.commons.Reflection.callTyped(cnt, method, Class.forName(className), value);
					}
				}

			}

		return ([%=type.~fullName%])obj;
		} catch (Exception e) {
			throw new TuraException(e);
		}
		
	}

	  @Override
	  public [%=type.~fullName%] create() throws TuraException {
	  	return createObject(datacontrol.getCurrentPosition());
	  }  
  
	@Override
	public [%=type.~fullName%] createObject(int i ) throws TuraException {
	    if ( list == null){
	       search();
	    }
		try {
	    [%=type.~fullName%] obj = ([%=type.~fullName%]) repository.create(datacontrol.getBaseClass());
		
		org.tura.platform.datacontrol.command.base.PostCreateTrigger trigger = getDataControl().getPostCreateTrigger(); 
		if (trigger != null){
		   trigger.execute(datacontrol,obj,((org.tura.platform.repository.core.ObjectControl) obj).getObjectControlAttributes());
		}
		((org.tura.platform.repository.core.ObjectControl) obj).set_SrcId(datacontrol.getId());
        obj = connectObject(obj);
        list.add(i, obj);
		return obj;
		}catch(Exception e){
		  throw new TuraException(e);
		}		
		
	}

	@Override
    @SuppressWarnings({ "unchecked", "rawtypes" })
	public void search() throws TuraException{
        if  ( !prepareQuery()){
				return;
        } 	   
	   try{
	   
	    org.tura.platform.datacontrol.command.base.SearchObjectParameters searchObjectParameters = datacontrol.getSearchObjectParameters();
	    prepareParameter(searchObjectParameters.getSearchCriteria());
	    prepareParameter(searchObjectParameters.getOrderByCriteria());
	    prepareParameter(searchObjectParameters.getStartIndex());
	    prepareParameter(searchObjectParameters.getEndIndex());
	    prepareParameter(searchObjectParameters.getObjectType());
	    
		if (datacontrol.getParent() != null) {
			Object parent = getParentObject();
			if (parent == null) {
				list = new org.tura.platform.repository.proxy.access.ArrayListWithSearch<>();
				return;
			}
		}
	    
        org.tura.platform.repository.proxy.access.TopLazyList topList = new org.tura.platform.repository.proxy.access.TopLazyList<>(datacontrol.getBaseClass(), repository.getStorageProvider(), repository);
        topList.setSearchCriteria((List<org.tura.platform.datacontrol.commons.SearchCriteria>) searchObjectParameters.getSearchCriteria().getObj());
        topList.setOrderCriteria((List<org.tura.platform.datacontrol.commons.OrderCriteria>) searchObjectParameters.getOrderByCriteria().getObj());
        list = topList;
      
		}catch(Exception e){
		  throw new TuraException(e);
		}
		
	}

	@Override
	public [%=type.~fullName%] delete() throws TuraException {
	    return remove(datacontrol.getCurrentPosition());
	}


	@Override
	public Object findObject(org.tura.platform.repository.core.RepoKeyPath key) throws TuraException {
		try {
			if (list == null) {
				return super.findObject(key);
			}
			Object obj = list.InternalSearch(key);
			if (obj == null) {
				return super.findObject(key);
			}
			return obj;
		} catch (Exception e) {
			throw new TuraException(e);
		}
    }


	@Override
   public [%=type.~fullName%] remove(int i) throws TuraException {
		org.tura.platform.datacontrol.command.base.PreDeleteTrigger trigger = getDataControl().getPreDeleteTrigger(); 
	    if (trigger != null) {
	      trigger.execute(datacontrol, list.get(i));
	    }
	   ((org.tura.platform.repository.core.ObjectControl) list.get(i)).set_SrcId(datacontrol.getId());
	    return ([%=type.~fullName%]) list.remove(i);
	}

	@Override
	protected Object getParentObject() throws TuraException {
	  if (datacontrol.getParent() != null) {
				Object obj = datacontrol.getParent().getMasterCurrentObject();
			    ObjectControl oc = (ObjectControl) obj;
			    if (  oc  != null && oc.isRemoved()) {
			    	  return null;
			     }
		      	return obj;
	  }else{
	     return null;
	  }	
	}

	@Override
	protected [%=type.~fullName%] getObject(int index) throws TuraException{
	    if ( list == null ){
	       search();
	    }
		return new  org.tura.platform.datacontrol.ListWrapper<>(list, datacontrol).get(index);
	}

	@Override
	protected List<[%=type.~fullName%]> getScroller() throws TuraException{
	    if ( list == null ){
	       search();
	    }
		return new  org.tura.platform.datacontrol.ListWrapper<>( list, datacontrol);
	}

	@Override
	protected long size() throws TuraException {
	    if ( list == null ){
	       search();
	    }
		return new org.tura.platform.datacontrol.ListWrapper<>( list, datacontrol).size();
	}

	@Override
	protected void cleanPager() throws TuraException {
		if (list != null &&  list instanceof TopLazyList) {
			try {
				TopLazyList<[%=type.~fullName%]> topList = (TopLazyList<[%=type.~fullName%]>) list;
				topList.close();
				list = null;
			} catch (java.io.IOException e) {
				throw new TuraException(e);
			}
		}
	}
	
	

	protected boolean prepareQuery() throws TuraException {
     try {
           com.rits.cloning.Cloner cloner = new com.rits.cloning.Cloner();
			datacontrol
					.setSearchCriteria(cloner.deepClone(datacontrol.getDefaultSearchCriteria()));

			datacontrol
			       .setOrderCriteria(cloner.deepClone(datacontrol.getDefaultOrderCriteria()));

			java.util.Collection<org.tura.platform.datacontrol.commons.SearchCriteria> sc = null;

			if (datacontrol.getParent() != null) {
				sc = datacontrol.getParent().getChildSearchCriteria();

				for (SearchCriteria criteria : sc) {
					if (!criteria.getValue().equals(
							org.tura.platform.datacontrol.commons.Constants.UNDEFINED_PARAMETER)) {
						datacontrol.getSearchCriteria().add(criteria);
					} else {
						return false;
					}
				}

			}
			
            org.tura.platform.datacontrol.command.base.PreQueryTrigger trigger = getDataControl().getPreQueryTrigger();
            if (trigger != null) {
                trigger.execute(datacontrol);
            }
			
			for (SearchCriteria criteria: datacontrol.getSearchCriteria()){
				if (criteria .getValue() instanceof String ){
				   try{
					  criteria.setValue(resolver((String) criteria .getValue()));
				   }catch(Exception  e){
				     return  false;
				   }
				}
			}
			return true;
		} catch (Exception  e) {
			throw new TuraException(e);
		}
	}


}

[%
}
%]
