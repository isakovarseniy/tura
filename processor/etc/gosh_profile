# add methods on BundleContext object as commands
addcommand context ${.context}

# add methods on System object as commands
addcommand system (((${.context} getClass) getClassLoader) loadClass java.lang.System)


# Load base profile
tura_home = system:getproperty TURA_HOME
repo_home = $tura_home/processor/etc
source $repo_home/go.ext


try {

setproperty chromedriverversion '2.40'
setproperty mavenurl 'https://archive.apache.org/dist/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.zip' 
tura_home = system:getproperty TURA_HOME


complete -c tura:install -e
complete -c tura:install -d "Tura install" 
complete -c tura:install -a '__install_picocliCompleter'

complete -c tura:generate -e
complete -c tura:generate -d "Generate recipe" 
complete -c tura:generate -a '__generate_picocliCompleter'

complete -c tura:build -e
complete -c tura:build -d "Build recipe" 
complete -c tura:build -a '__build_picocliCompleter'

complete -c tura:mvn -e
complete -c tura:mvn -d "Build maven project" 
complete -c tura:mvn -a '__mvn_picocliCompleter'


complete -c tura:docker -e
complete -c tura:docker -d "Run docker" 
complete -c tura:docker -a '__docker_picocliCompleter'


complete -c tura:dsl -e
complete -c tura:dsl -d "Dsl for configuration" 
complete -c tura:dsl -a '__dsl_picocliCompleter'


buildPluginAndProcessor = {
     source $tura_home/processor/etc/buildPluginAndProcessor;    
}

buildPlatform = {
     source $tura_home/processor/etc/buildPlatform;    
}

startHRApplication = {
     source $tura_home/processor/etc/hr-manager-deployment.recipe;    
}

stopHRApplication = {
     source $tura_home/processor/etc/hr-manager-stop-all.recipe;    
}

startHRIntegrationTest = {
     tura:mvn build --pom.xml $tura_home/examples/hr-manager/integration-testing/pom.xml;    
}


hrUrlList = {
    echo 'https://localhost:8443/hrform/hrmanager/hrcontroller/HRController.xhtml?param1=qwerty2'
    echo 'http://localhost:8080/hrform/hrmanager/miscelements/MiscElementsWindow.xhtml'
    echo 'http://localhost:8080/hrform/hrmanager/tree2tree/Tree2TreeRelations.xhtml'

}

hrLogWatch = {
   tura:docker logWatcher --name hr-wf --name hr-pg 

}




} catch {
    $exception printStackTrace
    e
}

